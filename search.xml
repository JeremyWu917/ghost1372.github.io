<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Welcome to HandyControl</title>
    <url>/handycontrol/index.html</url>
    <content><![CDATA[<p>HandyControl is a WPF control library that rewrites almost all native styles and includes more than 80 custom controls (increasingly).</p>
<h1 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h1><p><img src="https://img.shields.io/badge/.net-%3E%3D4.0-blue.svg" alt="dotnet-require"> <img src="https://img.shields.io/badge/OS-%3E%3Dwin7-brightgreen" alt="os-require"> <img src="https://img.shields.io/badge/IDE-vs2019-blue.svg" alt="IDE-require"> <img src="https://img.shields.io/badge/C%23-8.0-blue.svg" alt="csharp-require"></p>
<h1 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h1><h2 id="The-difference-between-official-and-unofficial-versions"><a href="#The-difference-between-official-and-unofficial-versions" class="headerlink" title="The difference between official and unofficial versions"></a>The difference between official and unofficial versions</h2><p><code>HandyControls</code> is Unofficial version Which has all the features of the official version + more features.</p>
<p>In the unofficial version you will enjoy the following features:</p>
<ul>
<li>Faster nuget release, usually every 20 days or 1 month (Official version every 3 months)</li>
<li>Faster VSIX Update (VSIX will be updated with the release of the new version of Nuget)</li>
<li>Helper classes</li>
<li>Useful Extension methods</li>
<li>More controls</li>
<li>More styles for some controls</li>
<li>Powerful ThemeManager</li>
<li>Great features like dynamic language</li>
<li>Optimized collections</li>
<li>Persian Date and Calendar</li>
</ul>
<p>And other awesome features which You can see the list of all of them along with the documents <ins><strong><a href="https://ghost1372.github.io/handycontrol/persianToolkit/">here</a></strong></ins></p>
<div class="note warning">
            <ul><li>HandyControl is official version</li><li>HandyControls is Unofficial version</li><li>You do not need to install both, just choose one of them</li></ul>
          </div>

<table>
<thead>
<tr>
<th>Nuget</th>
<th>Github</th>
<th>Extension</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.nuget.org/packages/HandyControl/">HandyControl-Nuget</a></td>
<td><a href="https://github.com/HandyOrg/HandyControl">HandyControl-Github</a></td>
<td><a href="https://marketplace.visualstudio.com/items?itemName=HandyOrg.handycontrolforvs2019">HandyControl-Extension</a></td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/HandyControls/">HandyControls-Nuget</a></td>
<td><a href="https://github.com/ghost1372/HandyControls">HandyControls-Github</a></td>
<td><a href="https://marketplace.visualstudio.com/items?itemName=MahdiHosseini.HandyControls">HandyControls-Extension</a></td>
</tr>
</tbody></table>
<div class="note warning">
            <p>Github is generally updated every day and is relatively unsuitable for production.</p>
          </div>

<h1 id="Project-Structure-Introduction"><a href="#Project-Structure-Introduction" class="headerlink" title="Project Structure Introduction"></a>Project Structure Introduction</h1><h2 id="the-whole-frame"><a href="#the-whole-frame" class="headerlink" title="the whole frame"></a>the whole frame</h2><p>After cloning the source code from Github, go to the src folder. The folder structure is as follows:<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/Project_Structure.png" alt="Project_Structure"></p>
<p><code>Net_GE45</code> means that the .Net version is greater than or equal to 4.5.</p>
<p>The <code>Shared</code> folder is used to store the code of the shared project.</p>
<p>The five folders in the figure each contain two subfolders, for example, two shared subfolders in Shared:<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/Sub_Folder_Structure.png" alt="Sub_Folder_Structure"></p>
<p>They store the source code of the control and the sample source of the control.</p>
<h2 id="Source-structure"><a href="#Source-structure" class="headerlink" title="Source structure"></a>Source structure</h2><p>We use HandyControl.sln as an example to illustrate, use VS2019 to open the solution:<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/Net_GE45_Structure.png" alt="Net_GE45_Structure"></p>
<p>If you want to start the example and see the effect of the control, please use HandyControlDemo_[specified item type] as the startup item.</p>
<p>As shown in the figure, HandyControlDemo_Net_GE45 has been used as the startup item.</p>
<p>Most of the public source code is in the Shared folder, and some of the code that needs to be customized for a particular project type is proposed to be placed in its own folder.</p>
<p>The HandyControl source code (mainly in HandyControl_Shared) mainly contains 7 folders, and their descriptions are as follows:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Controls</td>
<td>Background interaction logic with all controls</td>
</tr>
<tr>
<td>Data</td>
<td>Basic data definitions required by the control library</td>
</tr>
<tr>
<td>Expression</td>
<td>Extracted from Microsoft.Expression.Drawing</td>
</tr>
<tr>
<td>Interactivity</td>
<td>Extracted from Microsoft.Expression.Interactions &amp; System.Windows.Interactivity and made some modifications</td>
</tr>
<tr>
<td>Properties</td>
<td>Contains control library properties and language packs</td>
</tr>
<tr>
<td>Themes</td>
<td>Contains all xaml definitions for the control library</td>
</tr>
<tr>
<td>Tools</td>
<td>Mainly contains the help methods and extension methods required by the control library</td>
</tr>
</tbody></table>
<div class="note info">
            <p>Each control in Controls can generally find the corresponding xaml definition in Themes.</p>
          </div>

<h1 id="Compile-source-code"><a href="#Compile-source-code" class="headerlink" title="Compile source code"></a>Compile source code</h1><div class="note warning">
            <p>Please confirm that your development environment meets the requirements before compiling.</p><ul><li>Visual Studio 2019</li><li>.Net greater than or equal to <code>5.0.100</code> </li></ul>
          </div>

<p>Open HandyControl.sln and select the specified environment to compile in the Solution Configuration drop-down box:<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/Build_Config.png" alt="Build_Config"></p>
<h2 id="Compile-source-code-with-Powershell"><a href="#Compile-source-code-with-Powershell" class="headerlink" title="Compile source code with Powershell"></a>Compile source code with Powershell</h2><p>Go to Build folder and open Powershell here, then execute this command</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.\build.ps1</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Attached Property</title>
    <url>/handycontrol/attach/index.html</url>
    <content><![CDATA[<p>Attached Property source code in the Controls / Attach folder:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/Attach.png" alt="Attach"></p>
<p>Classes ending with <code>Element</code> can set some common properties for all controls. Classes ending with <code>Attach</code> can only set related properties for a control.</p>
]]></content>
  </entry>
  <entry>
    <title>Basic xaml definition</title>
    <url>/handycontrol/basic_xaml/index.html</url>
    <content><![CDATA[<p>The basic xaml definitions are in the Basic folder, and their internal structure is as follows:<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/basic_xaml/Basic_Structure.png" alt="Basic_Structure"></p>
<p>A description of them is given in the following table:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Colors</td>
<td>contains 3 built-in color definition files</td>
</tr>
<tr>
<td>Basic.xaml</td>
<td>Wrapped basic xaml definitions</td>
</tr>
<tr>
<td>Behaviors.xaml</td>
<td>Contains all behavior definitions</td>
</tr>
<tr>
<td>Brushes.xaml</td>
<td>Contains all brush definitions</td>
</tr>
<tr>
<td>Converters.xaml</td>
<td>Contains all converter definitions</td>
</tr>
<tr>
<td>Effects.xaml</td>
<td>Contains all effect definitions</td>
</tr>
<tr>
<td>Fonts.xaml</td>
<td>Contains all font size definitions</td>
</tr>
<tr>
<td>Geometries.xaml</td>
<td>Contains all geometry definitions, mostly for Path</td>
</tr>
<tr>
<td>Paths.xaml</td>
<td>contains all Path path definitions</td>
</tr>
<tr>
<td>Sizes.xaml</td>
<td>Contains all size definitions</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Breaking Changes</title>
    <url>/handycontrol/breaking_changes/index.html</url>
    <content><![CDATA[<p>A breaking change is a change that may require you to make changes to your application in order to avoid disruption to your integration.</p>
<div class="note info">
            <p>See <a href="https://github.com/ghost1372/HandyControls/releases">here</a> and <a href="https://github.com/HandyOrg/HandyControl/releases">here</a> for full changes</p>
          </div>

<h2 id="3-3-8-HandyControls"><a href="#3-3-8-HandyControls" class="headerlink" title="3.3.8 (HandyControls)"></a>3.3.8 (HandyControls)</h2><ul>
<li>All Violet and Default Styles Removed eg: ToggleButtonViolet, SplitButtonDefault</li>
<li>GithubTimeLine Removed</li>
<li>TabControl UsingWinUIStyle Property Removed</li>
<li>FORCE_ENABLE_ACRYLIC_BLUR Property Removed (BlurWindow now can be used in all windows 10 builds)</li>
</ul>
<h2 id="3-3-0-HandyControls"><a href="#3-3-0-HandyControls" class="headerlink" title="3.3.0 (HandyControls)"></a>3.3.0 (HandyControls)</h2><ul>
<li>Legacy Dynamic Localization Removed and The newer version has been replaced with better features See <a href="https://hosseini.ninja/handycontrol/persianToolkit/dynamicLanguage/">here</a></li>
</ul>
<h2 id="3-2-0-HandyControls"><a href="#3-2-0-HandyControls" class="headerlink" title="3.2.0 (HandyControls)"></a>3.2.0 (HandyControls)</h2><ul>
<li>The namespace of the helper classes has changed from <code>HandyControl.Controls</code> to <code>HandyControl.Tools</code>.</li>
<li>PersianDateTime namespace changed from <code>HandyControl.Controls</code> to <code>HandyControl.Tools</code>.</li>
<li><code>InstanceHelper</code> and <code>PackUriHelper</code> moved to <code>ApplicationHelper</code>.</li>
</ul>
<h2 id="3-1-0-HandyControls"><a href="#3-1-0-HandyControls" class="headerlink" title="3.1.0 (HandyControls)"></a>3.1.0 (HandyControls)</h2><p>Things that have been deleted:</p>
<ul>
<li>Theme.cs</li>
<li>SkinType.cs</li>
<li>SkinDefault.xaml</li>
<li>SkinDark.xaml</li>
<li>SkinViolet.xaml</li>
<li>Brushes.xaml</li>
<li>ColorsViolet.xaml</li>
</ul>
<p>Things that have been renamed and moved:</p>
<ul>
<li>Colors.xaml reanamed to Light.xaml</li>
<li>ColorsDark.xaml reanamed to Dark.xaml</li>
<li>Brushes content moved to Light.xaml and Dark.xaml </li>
</ul>
<p>We are using a new theme system, Therefore the following codes:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Theme</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>changed to:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:ThemeResources</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Theme</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>the following codes:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/Theme.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>changed to:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/Basic/Colors/Light.xaml&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/Theme.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>SkinType Changed to ApplicationTheme</p>
</li>
<li><p>For Changing Application Theme Follow <a href="https://ghost1372.github.io/handycontrol/theme/">these</a> instructions</p>
</li>
</ul>
<h2 id="3-0-0"><a href="#3-0-0" class="headerlink" title="3.0.0"></a>3.0.0</h2><ul>
<li><code>TitleElement.TitleAlignment</code> Renamed to <code>TitleElement.TitlePlacement</code></li>
<li><code>TagPanel</code> Replaced by <code>TagContainer</code></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Data</title>
    <url>/handycontrol/data/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>DisposableObject</td>
<td></td>
</tr>
<tr>
<td>HandyControlConfig</td>
<td></td>
</tr>
<tr>
<td>HwndWrapper</td>
<td></td>
</tr>
<tr>
<td>ResourceToken</td>
<td></td>
</tr>
<tr>
<td>ValueBoxes</td>
<td></td>
</tr>
<tr>
<td>EnumItem</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Expression</title>
    <url>/handycontrol/expression/index.html</url>
    <content><![CDATA[<p>Microsoft.Expression.Drawing library</p>
]]></content>
  </entry>
  <entry>
    <title>Intellisense</title>
    <url>/handycontrol/intellisense/index.html</url>
    <content><![CDATA[<p>If Visual Studio Intellisense unable to locate resources that are stored in a ResourceDictionary, follow this guide:</p>
<p>First, create a new ResourceDictionary and rename it to <code>DesignTimeResources.xaml</code>, and put it in <code>Properties\</code>.</p>
<p>for <code>HandyControls</code> copy this codes:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:IntellisenseResources</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControl;Component/DesignTime/DesignTimeResources.xaml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>for <code>HandyControl</code> copy this codes:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControl;Component/Themes/Theme.xaml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Then edit your <code>csproj</code>, and add the following <code>ItemGroup</code>:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Page</span> <span class="attr">Include</span>=<span class="string">&quot;Properties\DesignTimeResources.xaml&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">Condition</span>=<span class="string">&quot;&#x27;$(DesignTime)&#x27;==&#x27;true&#x27; OR (&#x27;$(SolutionPath)&#x27;!=&#x27;&#x27; AND Exists(&#x27;$(SolutionPath)&#x27;) AND &#x27;$(BuildingInsideVisualStudio)&#x27;!=&#x27;true&#x27; AND &#x27;$(BuildingInsideExpressionBlend)&#x27;!=&#x27;true&#x27;)&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Generator</span>&gt;</span>MSBuild:Compile<span class="tag">&lt;/<span class="name">Generator</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">SubType</span>&gt;</span>Designer<span class="tag">&lt;/<span class="name">SubType</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ContainsDesignTimeResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">ContainsDesignTimeResources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Page</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  Reload the project, and the XAML designer, and everything may now work…</p>
]]></content>
  </entry>
  <entry>
    <title>Extended Control</title>
    <url>/handycontrol/extend_controls/index.html</url>
    <content><![CDATA[<p>HandyControl currently contains more than 80 extended controls, which are gradually increasing.</p>
<div class="note warning">
            <p>The resources used in each control case can be found in HC Demo. Please develop the habit of using the key combination <code>Ctrl+F</code> in vs.</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Interactivity</title>
    <url>/handycontrol/interactivity/index.html</url>
    <content><![CDATA[<p>In this section you will be introduced to interactivity codes. for example Triggers, Behaviors, Commands, and Hooks.</p>
]]></content>
  </entry>
  <entry>
    <title>Globalization</title>
    <url>/handycontrol/langs/index.html</url>
    <content><![CDATA[<h1 id="Way-of-use"><a href="#Way-of-use" class="headerlink" title="Way of use"></a>Way of use</h1><p>The language package to be used can be specified by <code>ConfigHelper.Instance.SetLang(string lang)</code>, English (en) is used by default.</p>
<p>The language package that comes with the control library is generally used internally by the control library, but users can also use it in the following two ways:</p>
<ul>
<li><p>xaml<br>The first step is to introduce the namespace: <code>xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;</code><br>The second step is to use the language pack: <code>&lt;TextBlock Text=&quot;&#123;x:Static hc:Lang.Cancel&#125;&quot;/&gt;</code></p>
</li>
<li><p>C#<br><code>HandyControl.Properties.Langs.Lang.Cancel</code></p>
</li>
</ul>
<h1 id="Language-packs"><a href="#Language-packs" class="headerlink" title="Language packs"></a>Language packs</h1><p>The language packs included with the control library include:</p>
<ul>
<li>Simplified Chinese (zh-cn)</li>
<li>English (en)</li>
<li>Persian (fa)</li>
<li>French (fr)</li>
<li>Korean (ko-kr)</li>
<li>Russian (ru)</li>
<li>Turkish (tr)</li>
<li>Brazillian (pt-br)</li>
<li>Polish (pl)</li>
</ul>
<p><code>The default is English (en).</code></p>
<p>If you need to expand on your own, it is recommended to use the open source plugin: <a href="https://marketplace.visualstudio.com/items?itemName=TomEnglert.ResXManager">ResXManager</a> to maintain all language packs.</p>
<p>After the control library is referenced, the language package folder is generated in the running directory, and its naming style is like zh-cn, en, and so on.</p>
<h1 id="Dynamic-Multi-Language"><a href="#Dynamic-Multi-Language" class="headerlink" title="Dynamic Multi Language"></a>Dynamic Multi Language</h1><p>You can use this method to bring dynamic multilingual switching features to your applications</p>
<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use?"></a>How to use?</h2><p>First you need to create a folder in properties, here our folder called <code>Langs</code> We are going to create language files in this folder.<br>add resource files into this folder you can Right-click on folder and from the Add New Item option Select <code>Resources file</code> Be careful when naming it.</p>
<div class="note info">
            <ul><li><p>The default language can be without a language code</p></li><li><p>No matter how many languages you have, you need to create a resource file for that language.</p></li><li><p>You must include a 2-digit or 5-digit language code in resource file name.</p></li></ul>
          </div>

<p>We want our program to have 2 languages, <code>English</code> and <code>Persian</code> So I create 2 resource files Pay attention to the naming method.</p>
<ul>
<li><code>Lang.resx</code></li>
<li><code>Lang.en.resx</code> or <code>Lang.en-US.resx</code></li>
</ul>
<p>now we need to create a class called <code>LangProvider</code> we should declare our language resource here and Make a reference to the LangProvider class:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LangProvider</span> : <span class="title">INotifyPropertyChanged</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">static</span> LangProvider Instance =&gt; ResourceHelper.GetResource&lt;LangProvider&gt;(<span class="string">&quot;DemoLangs&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> CultureInfoStr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CultureInfo Culture</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> =&gt; Lang.Culture;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">value</span> == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">if</span> (Equals(CultureInfoStr, <span class="keyword">value</span>.EnglishName)) <span class="keyword">return</span>;</span><br><span class="line">            Lang.Culture = <span class="keyword">value</span>;</span><br><span class="line">            CultureInfoStr = <span class="keyword">value</span>.EnglishName;</span><br><span class="line"></span><br><span class="line">            Instance.UpdateLangs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetLang</span>(<span class="params"><span class="built_in">string</span> key</span>)</span> =&gt; Lang.ResourceManager.GetString(key, Culture);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLang</span>(<span class="params">DependencyObject dependencyObject, DependencyProperty dependencyProperty, <span class="built_in">string</span> key</span>)</span> =&gt;</span><br><span class="line">        BindingOperations.SetBinding(dependencyObject, dependencyProperty, <span class="keyword">new</span> Binding(key)</span><br><span class="line">        &#123;</span><br><span class="line">            Source = Instance,</span><br><span class="line">            Mode = BindingMode.OneWay</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateLangs</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        OnPropertyChanged(<span class="keyword">nameof</span>(About));</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnPropertyChanged</span>(<span class="params"><span class="built_in">string</span> propertyName</span>)</span> =&gt;</span><br><span class="line">        PropertyChanged?.Invoke(<span class="keyword">this</span>, <span class="keyword">new</span> PropertyChangedEventArgs(propertyName));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> About =&gt; Lang.About;</span><br><span class="line">&#125;    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LangKeys</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> About = <span class="keyword">nameof</span>(About);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>you should add all of your language resources here:<br><code>OnPropertyChanged(nameof(About));</code><br><code>public string About =&gt; Lang.About;</code><br><code>public static string About = nameof(About);</code></p>
<div class="note info">
            <p>Because it is time consuming and tedious, you can use text templates (t4) or similar options to automatically generate all language resources.<br>this is a example of t4 that can generate all language resources:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;#@ template debug&#x3D;&quot;false&quot; hostspecific&#x3D;&quot;false&quot; language&#x3D;&quot;C#&quot; #&gt;</span><br><span class="line">&lt;#@ assembly name&#x3D;&quot;System.Core&quot; #&gt;</span><br><span class="line">&lt;#@ import namespace&#x3D;&quot;System.Linq&quot; #&gt;</span><br><span class="line">&lt;#@ import namespace&#x3D;&quot;System.Collections.Generic&quot;#&gt;</span><br><span class="line">&lt;#@ assembly name&#x3D;&quot;$(TargetPath)&quot; #&gt;</span><br><span class="line">&lt;#@ import namespace&#x3D;&quot;HandyControlDemo.Properties.Langs&quot; #&gt;</span><br><span class="line">&lt;#@ output extension&#x3D;&quot;.cs&quot; #&gt;</span><br><span class="line">&lt;#</span><br><span class="line">    var resourceType &#x3D; typeof(Lang);</span><br><span class="line">    var propertyNameList &#x3D; resourceType.GetProperties().Where(item &#x3D;&gt; item.PropertyType &#x3D;&#x3D; typeof(string)).Select(item &#x3D;&gt; item.Name);</span><br><span class="line">    var langDic &#x3D; new Dictionary&lt;string, string&gt;();</span><br><span class="line">    foreach(var item in propertyNameList)</span><br><span class="line">    &#123;</span><br><span class="line">        langDic[item] &#x3D; </span><br><span class="line">        @$&quot;&#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;   &#123;string.Format(Lang.LangComment, Lang.ResourceManager.GetString(item, Lang.Culture))&#125;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">#&gt;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Globalization;</span><br><span class="line">using System.Windows;</span><br><span class="line">using System.Windows.Data;</span><br><span class="line">using HandyControl.Tools;</span><br><span class="line"></span><br><span class="line">namespace HandyControlDemo.Properties.Langs</span><br><span class="line">&#123;</span><br><span class="line">    public class LangProvider : INotifyPropertyChanged</span><br><span class="line">    &#123;</span><br><span class="line">        internal static LangProvider Instance &#x3D;&gt; ResourceHelper.GetResource&lt;LangProvider&gt;(&quot;DemoLangs&quot;);</span><br><span class="line"></span><br><span class="line">        private static string CultureInfoStr;</span><br><span class="line"></span><br><span class="line">        public static CultureInfo Culture</span><br><span class="line">        &#123;</span><br><span class="line">            get &#x3D;&gt; Lang.Culture;</span><br><span class="line">            set</span><br><span class="line">            &#123;</span><br><span class="line">                if (value &#x3D;&#x3D; null) return;</span><br><span class="line">                if (Equals(CultureInfoStr, value.EnglishName)) return;</span><br><span class="line">                Lang.Culture &#x3D; value;</span><br><span class="line">                CultureInfoStr &#x3D; value.EnglishName;</span><br><span class="line"></span><br><span class="line">                Instance.UpdateLangs();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static string GetLang(string key) &#x3D;&gt; Lang.ResourceManager.GetString(key, Culture);</span><br><span class="line"></span><br><span class="line">        public static void SetLang(DependencyObject dependencyObject, DependencyProperty dependencyProperty, string key) &#x3D;&gt;</span><br><span class="line">            BindingOperations.SetBinding(dependencyObject, dependencyProperty, new Binding(key)</span><br><span class="line">            &#123;</span><br><span class="line">                Source &#x3D; Instance,</span><br><span class="line">                Mode &#x3D; BindingMode.OneWay</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        private void UpdateLangs()</span><br><span class="line">        &#123;</span><br><span class="line">&lt;#foreach(var item in propertyNameList)#&gt;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&lt;#foreach(var item in propertyNameList)#&gt;</span><br><span class="line"></span><br><span class="line">        public event PropertyChangedEventHandler PropertyChanged;</span><br><span class="line"></span><br><span class="line">        protected virtual void OnPropertyChanged(string propertyName) &#x3D;&gt;</span><br><span class="line">            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class LangKeys</span><br><span class="line">    &#123;</span><br><span class="line">&lt;#foreach(var item in propertyNameList)#&gt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
          </div>

<p>now in <code>app.xaml</code> after MergedDictionary write this code:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">langs:LangProvider</span> <span class="attr">x:Key</span>=<span class="string">&quot;DemoLangs&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>langs</code> is refrence to language folder <code>xmlns:langs=&quot;clr-namespace:HandyControlDemo.Properties.Langs&quot;</code></p>
<p>finally we need to create a class called <code>LangExtension</code> that should inherit from <code>HandyControl.Tools.Extension.LangExtension</code> so we have:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LangExtension</span> : <span class="title">HandyControl.Tools.Extension.LangExtension</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">LangExtension</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Source = LangProvider.Instance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="How-to-use-in-Xaml"><a href="#How-to-use-in-Xaml" class="headerlink" title="How to use in Xaml?"></a>How to use in Xaml?</h3><p>First we need to introduce the <code>Language folder</code> and <code>LangExtension</code> class to the program:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:langs=&quot;clr-namespace:&#123;YOUR NAMESPACE&#125;.Properties.Langs&quot;</span><br><span class="line">xmlns:ex=&quot;clr-namespace:&#123;YOUR NAMESPACE&#125;.LangExtension&quot;</span><br></pre></td></tr></table></figure>
<p>Now all you have to do is set your key like this</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.About&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>if you need to using binding:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;Binding Name&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="How-to-use-in-Csharp"><a href="#How-to-use-in-Csharp" class="headerlink" title="How to use in Csharp?"></a>How to use in Csharp?</h3><p>It is very easy to use in Code-Behind</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">MessageBox.Show(LangProvider.GetLang(<span class="string">&quot;About&quot;</span>));</span><br></pre></td></tr></table></figure>
<h2 id="How-to-Change-language-in-Runtime"><a href="#How-to-Change-language-in-Runtime" class="headerlink" title="How to Change language in Runtime?"></a>How to Change language in Runtime?</h2><p>To change the language in runtime, just write the following code and specify the language code</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;en&quot;</span>);</span><br><span class="line">LangProvider.Culture = <span class="keyword">new</span> CultureInfo(<span class="string">&quot;en&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Media</title>
    <url>/handycontrol/media/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Native Control</title>
    <url>/handycontrol/native_controls/index.html</url>
    <content><![CDATA[<p>Native controls refer to the controls that come with the WPF framework. In addition to this, simple extensions are implemented through additional properties.</p>
<div class="note warning">
            <p>In HandyControl, almost all native controls have a base style that is implemented by default (that is, when a style is defined, the given Key value is not displayed).</p>
          </div>

<div class="note warning">
            <p>The base style generally has the word “Base”. It is not recommended for users to use it directly in the view layer. The appropriate usage scenario is a resource file.</p>
          </div>

<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><div class="note info no-icon">
            <p>How can I override the default implementation of the style? Can I give BaseOn without a Key?</p>
          </div>

<p>You can use this syntax: <code>BasedOn=&quot;&#123;StaticResource &#123;x:Type Button&#125;&#125;&quot;</code> to override the default style of <code>Button</code>.</p>
]]></content>
  </entry>
  <entry>
    <title>Thanks</title>
    <url>/handycontrol/tnx/index.html</url>
    <content><![CDATA[<h1 id="Thanks-to-the-following-Coder-for-providing-code-contributions"><a href="#Thanks-to-the-following-Coder-for-providing-code-contributions" class="headerlink" title="Thanks to the following Coder for providing code contributions"></a>Thanks to the following Coder for providing code contributions</h1><p><a style="border:0" href="https://github.com/ghost1372" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/9213496?s=64&amp;v=4" alt="ghost1372"></a><a style="border:0" href="https://github.com/DingpingZhang" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/8541016?s=64&v=4" alt="Dingping Zhang"></a><a style="border:0" href="https://github.com/M0n7y5" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/17201053?s=64&v=4" alt="M0n7y5"></a><a style="border:0" href="https://github.com/guanguanchuangyu" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/25916858?s=64&v=4" alt="guanguanchuangyu"></a><a style="border:0" href="https://github.com/yanchao891012" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/16846702?s=64&v=4" alt="yanchao891012"></a><a style="border:0" href="https://github.com/noctwolf" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/21022467?s=64&v=4" alt="noctwolf"></a><a style="border:0" href="https://github.com/xianyun666" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/22339210?s=64&v=4" alt="xianyun666"></a><a style="border:0" href="https://github.com/afunc233" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/19919631?s=64&v=4" alt="afunc233"></a><a style="border:0" href="https://github.com/DinoChan" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/6076257?s=64&v=4" alt="DinoChan"></a><a style="border:0" href="https://github.com/MrZhangYuan" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/16384123?s=64&v=4" alt="MrZhangYuan"></a><a style="border:0" href="https://github.com/JinhuaChen-OMEC" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/47024703?s=64&v=4" alt="JinhuaChen-OMEC"></a><a style="border:0" href="https://github.com/seedtyx" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/5851975?s=64&v=4" alt="seedtyx"></a><a style="border:0" href="https://github.com/KleinPan" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/34428802?s=64&v=4" alt="KleinPan"></a><a style="border:0" href="https://github.com/yxhq" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/10378954?s=64&v=4" alt="yxhq"></a><a style="border:0" href="https://github.com/AiHaibara" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/5195234?s=64&v=4" alt="AiHaibara"></a><a style="border:0" href="https://github.com/walterlv" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/9959623?s=64&v=4" alt="walterlv"></a><a style="border:0" href="https://github.com/Luoyingliang" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/29297262?s=64&v=4" alt="Luoyingliang"></a><a style="border:0" href="https://github.com/lindexi" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/16054566?s=64&v=4" alt="lindexi"></a><a style="border:0" href="https://github.com/danwalmsley" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/4672627?s=64&v=4" alt="danwalmsley"></a><a style="border:0" href="https://github.com/varKeytrap" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/17864005?s=64&v=4" alt="varKeytrap"></a></p>

<h1 id="Thanks-to-the-following-organizations-for-providing-open-source-licenses"><a href="#Thanks-to-the-following-organizations-for-providing-open-source-licenses" class="headerlink" title="Thanks to the following organizations for providing open source licenses"></a>Thanks to the following organizations for providing open source licenses</h1><p><a style="border:0" href="https://visualstudio.microsoft.com/free-developer-offers/" target="_blank" rel="noopener"><img width="70" height="70" src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/vs2019_logo.png" alt="Visual Studio Community 2019"></a><a style="border:0" href="https://www.jetbrains.com/?from=HandyControl" target="_blank" rel="noopener"><img width="70" height="70" src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/resharper_logo.png" alt="JetBrains"></a></p>

<h1 id="Thanks-to-the-following-donors"><a href="#Thanks-to-the-following-donors" class="headerlink" title="Thanks to the following donors"></a>Thanks to the following donors</h1><p><a style="border:0" href="https://github.com/bigorange1900" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/49062011?s=64&v=4" alt="bigorange1900"></a><a style="border:0" href="https://github.com/14632791" target="_blank" rel="noopener"><img style="border-radius:50%!important" style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/27358331?s=64&v=4" alt="14632791"></a><a style="border:0" href="https://github.com/IUpdatable" target="_blank" rel="noopener"><img style="border-radius:50%!important" style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/51181716?s=64&v=4" alt="IUpdatable"></a><a style="border:0" href="https://github.com/maplewei" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/13778095?s=64&v=4" alt="maplewei"></a><a style="border:0" href="https://github.com/sunshang-hl" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/34593206?s=64&v=4" alt="sunshang-hl"></a><a style="border:0" href="https://github.com/yangkang326" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/51224259?s=64&v=4" alt="yangkang326"></a><a style="border:0" href="https://github.com/zmrbak" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/7257543?s=64&v=4" alt="zmrbak"></a><a style="border:0" href="https://github.com/AFei19911012" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/31465314?s=64&v=4" alt="AFei19911012"></a><a style="border:0" href="https://github.com/wayne2006" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/21210915?s=64&v=4" alt="wayne2006"></a><a style="border:0" href="https://github.com/towerDLH" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/53053537?s=64&v=4" alt="towerDLH"></a><a style="border:0" href="https://github.com/BluceBosen" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/24750822?s=64&v=4" alt="BluceBosen"></a><a style="border:0" href="https://github.com/MrZhangYuan" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/16384123?s=64&v=4" alt="MrZhangYuan"></a><a style="border:0" href="https://github.com/YC946586" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/49895722?s=64&v=4" alt="YC946586"></a><a style="border:0" href="https://github.com/wihalo" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/26402999?s=64&v=4" alt="wihalo"></a><a style="border:0" href="https://github.com/startewho" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/898009?s=64&v=4" alt="startewho"></a><a style="border:0" href="https://github.com/5653325" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars1.githubusercontent.com/u/3361135?s=64&v=4" alt="5653325"></a><a style="border:0" href="https://github.com/LostAsk" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars0.githubusercontent.com/u/46678241?s=64&v=4" alt="LostAsk"></a><a style="border:0" href="https://github.com/sanshiliuxiao" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars3.githubusercontent.com/u/25658690?s=64&v=4" alt="sanshiliuxiao"></a><a style="border:0" href="https://github.com/QJJMSK" target="_blank" rel="noopener"><img style="border-radius:50%!important" width="64" height="64" src="https://avatars2.githubusercontent.com/u/28100716?s=64&v=4" alt="QJJMSK"></a></p>]]></content>
  </entry>
  <entry>
    <title>Theme</title>
    <url>/handycontrol/theme/handyControl.html</url>
    <content><![CDATA[<h1 id="Changing-Theme"><a href="#Changing-Theme" class="headerlink" title="Changing Theme"></a>Changing Theme</h1><p>There is 3 themes (<code>Light, Dark and Violet</code>) that you can use in your application. </p>
<h2 id="Set-Skin-in-Xaml"><a href="#Set-Skin-in-Xaml" class="headerlink" title="Set Skin in Xaml"></a>Set Skin in Xaml</h2><p>set Skin tag in <code>&lt;hc:Theme</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:Theme</span> <span class="attr">Skin</span>=<span class="string">&quot;Dark&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Set-Skin-in-Code-Behind"><a href="#Set-Skin-in-Code-Behind" class="headerlink" title="Set Skin in Code-Behind"></a>Set Skin in Code-Behind</h2><p>set a name for <code>&lt;hc:Theme</code> and create a function</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:Theme</span> <span class="attr">Name</span>=<span class="string">&quot;HandyTheme&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">void</span> <span class="title">UpdateSkin</span>(<span class="params">SkinType skin</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SharedResourceDictionary.SharedDictionaries.Clear();</span><br><span class="line">    ResourceHelper.GetTheme(<span class="string">&quot;HandyTheme&quot;</span>, Resources).Skin = skin;</span><br><span class="line">    Current.MainWindow?.OnApplyTemplate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>In older versions, follow this</p>
          </div>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/Theme.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateSkin</span>(<span class="params">SkinType skin</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SharedResourceDictionary.SharedDictionaries.Clear();</span><br><span class="line">            Resources.MergedDictionaries.Add(ResourceHelper.GetSkin(skin));</span><br><span class="line">            Resources.MergedDictionaries.Add(<span class="keyword">new</span> ResourceDictionary</span><br><span class="line">            &#123;</span><br><span class="line">                Source = <span class="keyword">new</span> Uri(<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/Theme.xaml&quot;</span>)</span><br><span class="line">            &#125;);</span><br><span class="line">            Current.MainWindow?.OnApplyTemplate();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>now you can change your theme in this way:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">UpdateSkin(SkinType.Dark);</span><br></pre></td></tr></table></figure>
<h2 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h2><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Default</td>
</tr>
<tr>
<td>Dark</td>
</tr>
<tr>
<td>Violet</td>
</tr>
</tbody></table>
<h1 id="Accent-Color"><a href="#Accent-Color" class="headerlink" title="Accent Color"></a>Accent Color</h1><p>you can change AccentColor</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:Theme</span> <span class="attr">AccentColor</span>=<span class="string">&quot;Red&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="SyncWithSystem"><a href="#SyncWithSystem" class="headerlink" title="SyncWithSystem"></a>SyncWithSystem</h1><p>Sync your applicatio theme with windows 10 theme</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:Theme</span> <span class="attr">SyncWithSystem</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Adding-or-Overriding-styles-and-colors-according-to-the-theme-of-the-program"><a href="#Adding-or-Overriding-styles-and-colors-according-to-the-theme-of-the-program" class="headerlink" title="Adding or Overriding styles and colors according to the theme of the program"></a>Adding or Overriding styles and colors according to the theme of the program</h1><p>you can override or add colors and styles, for doing that follow the instructions</p>
<ul>
<li><p>first create folders:<br>Resources\Themes\Styles<br>Resources\Themes\Basic\Colors</p>
</li>
<li><p>second create xaml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Resources\Themes\Theme.xaml</span><br><span class="line">Resources\Themes\SkinDark.xaml</span><br><span class="line">Resources\Themes\SkinDefault.xaml</span><br><span class="line">Resources\Themes\SkinViolet.xaml</span><br><span class="line"></span><br><span class="line">Resources\Themes\Styles\Style.xaml</span><br><span class="line"></span><br><span class="line">Resources\Themes\Basic\Colors\Colors.xaml</span><br><span class="line">Resources\Themes\Basic\Colors\ColorsDark.xaml</span><br><span class="line">Resources\Themes\Basic\Colors\ColorsViolet.xaml</span><br><span class="line"></span><br><span class="line">Resources\Themes\Basic\Basic.xaml</span><br><span class="line">Resources\Themes\Basic\Brushes.xaml</span><br><span class="line">Resources\Themes\Basic\Converters.xaml</span><br><span class="line">Resources\Themes\Basic\Fonts.xaml</span><br><span class="line">Resources\Themes\Basic\Geometries.xaml</span><br></pre></td></tr></table></figure>
<p>If you follow these instructions, your styles and colors will change with a dark and light theme</p>
</li>
</ul>
<h2 id="Colors"><a href="#Colors" class="headerlink" title="Colors"></a>Colors</h2><p>You can put the colors in this color files.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Resources\Themes\Basic\Colors\Colors.xaml</span><br><span class="line">Resources\Themes\Basic\Colors\ColorsDark.xaml</span><br><span class="line">Resources\Themes\Basic\Colors\ColorsViolet.xaml</span><br></pre></td></tr></table></figure>
<p>To support the dark or violet mode, you need to write all three files You can also skip them and use only the <code>Colors.xaml</code> file (But then your colors will not change with the theme)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Color</span> <span class="attr">x:Key</span>=<span class="string">&quot;PrimaryColor&quot;</span>&gt;</span>#326cf3<span class="tag">&lt;/<span class="name">Color</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>The key must be the same in all files </p>
          </div>

<h2 id="Brushes-Converters-Fonts-Geometries-Styles"><a href="#Brushes-Converters-Fonts-Geometries-Styles" class="headerlink" title="Brushes, Converters, Fonts, Geometries, Styles"></a>Brushes, Converters, Fonts, Geometries, Styles</h2><p>You can put any of the brushes, converters, fonts, styles and geometries In those files.</p>
<h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><p>We address Brushes.xaml, Geometries.xaml, Converters.xaml and Fonts.xaml dictionaries in this file, So our file will be like this</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;Brushes.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;Geometries.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;Converters.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;Fonts.xaml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="SkinDark-xaml-SkinViolet-xaml-SkinDefault-xaml"><a href="#SkinDark-xaml-SkinViolet-xaml-SkinDefault-xaml" class="headerlink" title="SkinDark.xaml, SkinViolet.xaml, SkinDefault.xaml"></a>SkinDark.xaml, SkinViolet.xaml, SkinDefault.xaml</h2><p>We need to specify the color files in these files, For example, we do this for <code>SkinDark.xaml</code> file</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;Basic/Colors/ColorsDark.xaml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Theme-xaml"><a href="#Theme-xaml" class="headerlink" title="Theme.xaml"></a>Theme.xaml</h2><p>We address Basic.xaml and Style.xaml dictionaries in this file, So our file will be like this</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;Basic/Basic.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;Styles/Style.xaml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Last-Step"><a href="#Last-Step" class="headerlink" title="Last Step"></a>Last Step</h2><p>create a class called <code>DemoTheme.cs</code> this class should inherit from <code>Theme</code></p>
<div class="note info">
            <p><code>HandyControlDemo</code> is your application namespace</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DemoTheme</span> : <span class="title">Theme</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Uri ThemeUri =&gt; <span class="keyword">new</span> Uri(<span class="string">&quot;pack://application:,,,/HandyControlDemo;component/Resources/Themes/Theme.xaml&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> ResourceDictionary <span class="title">GetSkin</span>(<span class="params">SkinType skinType</span>)</span> =&gt;</span><br><span class="line">            ResourceHelper.GetSkin(<span class="keyword">typeof</span>(App).Assembly, <span class="string">&quot;Resources/Themes&quot;</span>, skinType);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>now in <code>app.xaml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:Theme</span> <span class="attr">Name</span>=<span class="string">&quot;HandyTheme&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">resources:DemoTheme</span> <span class="attr">Name</span>=<span class="string">&quot;DemoTheme&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>and for changing theme we should update our <code>UpdateSkin</code> function</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">void</span> <span class="title">UpdateSkin</span>(<span class="params">SkinType skin</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SharedResourceDictionary.SharedDictionaries.Clear();</span><br><span class="line">    ResourceHelper.GetTheme(<span class="string">&quot;HandyTheme&quot;</span>, Resources).Skin = skin;</span><br><span class="line">    ResourceHelper.GetTheme(<span class="string">&quot;DemoTheme&quot;</span>, Resources).Skin = skin;</span><br><span class="line"></span><br><span class="line">    Current.MainWindow?.OnApplyTemplate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/DarkTheme.png" alt="Themes"></p>
]]></content>
  </entry>
  <entry>
    <title>Tools</title>
    <url>/handycontrol/tools/index.html</url>
    <content><![CDATA[<p>Tools</p>
]]></content>
  </entry>
  <entry>
    <title>PersianToolkit</title>
    <url>/handycontrol/persianToolkit/index.html</url>
    <content><![CDATA[<p>Includes Additional controls, properties, events and styles</p>
<h1 id="AttachedProperty"><a href="#AttachedProperty" class="headerlink" title="AttachedProperty"></a>AttachedProperty</h1><table>
<thead>
<tr>
<th>Extra Attached Property</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://ghost1372.github.io/handycontrol/native_controls/listBox/#Attached-Property">ListBox</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/native_controls/menu/#Attached-Property">Menu</a></td>
</tr>
</tbody></table>
<h1 id="Attributes-Modified-Controls-Events"><a href="#Attributes-Modified-Controls-Events" class="headerlink" title="Attributes | Modified Controls | Events"></a>Attributes | Modified Controls | Events</h1><table>
<thead>
<tr>
<th>Extra Property</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://ghost1372.github.io/handycontrol/extend_controls/coverView/#Attributes">CoverView</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/extend_controls/messageBox/#Customize-Button-Text">MessageBox</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/extend_controls/sideMenu/#Attributes">SideMenu</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/data/Info/">Growl Info</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/extend_controls/window/#Attributes">Window</a></td>
</tr>
<tr>
<td><a href="https://hosseini.ninja/handycontrol/extend_controls/blurWindow/">BlurWindow</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/extend_controls/colorPicker/">ColorPicker [Color Picker Can Work outside of Application]</a></td>
</tr>
</tbody></table>
<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Modified Styles</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://ghost1372.github.io/handycontrol/native_controls/listBox/#ListBoxModernStyle">ListBox</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/native_controls/tabControl/#TabItemTransparentStyle-Only-Custom-Version">TabControl</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/native_controls/contentControl/">ContentControl</a></td>
</tr>
</tbody></table>
<h1 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h1><table>
<thead>
<tr>
<th>Available Tools</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://ghost1372.github.io/handycontrol/basic_xaml/converters/#SpeedConverter-Only-Custom-Version-Internal-use">Converters</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/basic_xaml/brushes/">Brushes</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/basic_xaml/colors/">Colors</a></td>
</tr>
<tr>
<td><a href="https://ghost1372.github.io/handycontrol/interactivity/triggers/#LaunchUriOrFileAction">Interactivity</a></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Quick start</title>
    <url>/handycontrol/quick_start/index.html</url>
    <content><![CDATA[<h1 id="Easy-Ways"><a href="#Easy-Ways" class="headerlink" title="Easy Ways"></a>Easy Ways</h1><p>Download the source code or reference the control library in Nuget mode or use VSIX Extension</p>
<h2 id="The-difference-between-official-and-unofficial-versions"><a href="#The-difference-between-official-and-unofficial-versions" class="headerlink" title="The difference between official and unofficial versions"></a>The difference between official and unofficial versions</h2><p><code>HandyControls</code> is Unofficial version Which has all the features of the official version + more features.</p>
<p>In the unofficial version you will enjoy the following features:</p>
<ul>
<li>Faster nuget release, usually every 20 days or 1 month (Official version every 3 months)</li>
<li>Faster VSIX Update (VSIX will be updated with the release of the new version of Nuget)</li>
<li>Helper classes</li>
<li>Useful Extension methods</li>
<li>More controls</li>
<li>More styles for some controls</li>
<li>Powerful ThemeManager</li>
<li>Great features like dynamic language</li>
<li>Optimized collections</li>
<li>Persian Date and Calendar</li>
</ul>
<p>And other awesome features which You can see the list of all of them along with the documents <ins><strong><a href="https://ghost1372.github.io/handycontrol/persianToolkit/">here</a></strong></ins></p>
<div class="note warning">
            <ul><li>HandyControl is official version</li><li>HandyControls is Unofficial version</li><li>You do not need to install both, just choose one of them</li></ul>
          </div>

<table>
<thead>
<tr>
<th>Nuget</th>
<th>Github</th>
<th>Extension</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.nuget.org/packages/HandyControl/">HandyControl-Nuget</a></td>
<td><a href="https://github.com/HandyOrg/HandyControl">HandyControl-Github</a></td>
<td><a href="https://marketplace.visualstudio.com/items?itemName=HandyOrg.handycontrolforvs2019">HandyControl-Extension</a></td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/HandyControls/">HandyControls-Nuget</a></td>
<td><a href="https://github.com/ghost1372/HandyControls">HandyControls-Github</a></td>
<td><a href="https://marketplace.visualstudio.com/items?itemName=MahdiHosseini.HandyControls">HandyControls-Extension</a></td>
</tr>
</tbody></table>
<h1 id="HandyControls"><a href="#HandyControls" class="headerlink" title="HandyControls"></a>HandyControls</h1><p>Add the following code to App.xaml:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Application</span> <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">hc:ThemeResources</span>/&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">hc:Theme</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>For more information about the theme click <a href="https://ghost1372.github.io/handycontrol/theme/">here</a></p>
<h1 id="HandyControl"><a href="#HandyControl" class="headerlink" title="HandyControl"></a>HandyControl</h1><p>Add the following code to App.xaml:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Application</span> <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Theme</span> <span class="attr">Name</span>=<span class="string">&quot;HandyTheme&quot;</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>In older versions of 2.5.1, you should add this code</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/HandyControl;component/Themes/Theme.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
          </div>

<h1 id="Last-step"><a href="#Last-step" class="headerlink" title="Last step"></a>Last step</h1><p>Add a namespace: <code>xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;</code></p>
<h1 id="Extension"><a href="#Extension" class="headerlink" title="Extension"></a>Extension</h1><p>just download and install handycontrol template from marketplace. in this way you dont need to add anything. after installing hc, create new project with handycontrol template</p>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/vsixTemplate.png" alt="Extension"></p>
<h1 id="Nuget-Nightly-Builds"><a href="#Nuget-Nightly-Builds" class="headerlink" title="Nuget Nightly Builds"></a>Nuget Nightly Builds</h1><p>If you want to get the latest changes at the same time as the change in the source code as a nuget package, you can use Nightly Builds.</p>
<div class="note warning">
            <p>Nightly Builds are not recommended for use in products due to their instability.</p>
          </div>

<ul>
<li><p>Open Visual Studio and go to the Nuget settings via:<br>Tools -&gt; Options -&gt; Nuget PackageManager -&gt; Package Sources</p>
</li>
<li><p>Click the Add button</p>
</li>
<li><p>Enter a name</p>
</li>
<li><p>Enter the source</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.myget.org&#x2F;F&#x2F;handycontrols&#x2F;</span><br></pre></td></tr></table></figure>
<ul>
<li>Click the OK button</li>
</ul>
<p><img src="https://user-images.githubusercontent.com/9213496/114267902-b5cb7c80-9a13-11eb-8280-dba482427cf3.png" alt="Nightly"></p>
<p>Now when you want to install the nuget package change the source to the source you created</p>
<p><img src="https://user-images.githubusercontent.com/9213496/114267905-ba903080-9a13-11eb-91a4-30047c729bba.png" alt="Nightly"></p>
]]></content>
  </entry>
  <entry>
    <title>Theme</title>
    <url>/handycontrol/theme/index.html</url>
    <content><![CDATA[<p>This documentation is for the <code>HandyControls</code> (unofficial version) If you are looking for the <code>HandyControl</code> (official version) documentation, read <ins><strong><a href="https://ghost1372.github.io/handycontrol/theme/handyControl">here</a></strong></ins></p>
<div class="note info">
            <p>All classes related to Theme Located in the <strong>HandyControl.Themes</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Themes;</span><br></pre></td></tr></table></figure>
          </div>

<table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ActualApplicationThemeChanged</td>
<td>Event</td>
<td>This event is called whenever the ApplicationTheme changes</td>
</tr>
<tr>
<td>SystemThemeChanged</td>
<td>Event</td>
<td>This event is called whenever the Windows Theme changes</td>
</tr>
<tr>
<td>AccentColor</td>
<td>Property</td>
<td></td>
</tr>
<tr>
<td>ActualApplicationTheme</td>
<td>Property</td>
<td></td>
</tr>
<tr>
<td>ApplicationTheme</td>
<td>Property</td>
<td></td>
</tr>
<tr>
<td>UsingSystemTheme</td>
<td>Property</td>
<td></td>
</tr>
<tr>
<td>GetActualTheme</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>GetHasThemeResources</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>GetRequestedAccentColor</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>GetRequestedTheme</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>GetSystemTheme</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>SetHasThemeResources</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>SetRequestedAccentColor</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>SetRequestedTheme</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>AddActualThemeChangedHandler</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>RemoveActualThemeChangedHandler</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>GetElementTheme</td>
<td>Method</td>
<td></td>
</tr>
<tr>
<td>GetAccentColorFromSystem</td>
<td>Method</td>
<td></td>
</tr>
</tbody></table>
<h1 id="How-to-Address-Resource"><a href="#How-to-Address-Resource" class="headerlink" title="How to Address Resource?"></a>How to Address Resource?</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">hc:ThemeResources</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">hc:Theme</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Set-the-application-theme"><a href="#Set-the-application-theme" class="headerlink" title="Set the application theme"></a>Set the application theme</h1><p>To override the default settings, set properties on the <code>ThemeResources</code> class in App.xaml. For example:</p>
<h2 id="Xaml"><a href="#Xaml" class="headerlink" title="Xaml"></a>Xaml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ThemeResources</span> <span class="attr">RequestedTheme</span>=<span class="string">&quot;Dark&quot;</span> <span class="attr">AccentColor</span>=<span class="string">&quot;Red&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>Values set this way are applied at both design time and runtime. If you’d like to change them at runtime, it’s usually more convenient to use the <code>ThemeManager</code> class, which supports data binding. For example:</p>
<h2 id="Code-Behind"><a href="#Code-Behind" class="headerlink" title="Code-Behind"></a>Code-Behind</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ThemeManager.Current.ApplicationTheme = ApplicationTheme.Dark;</span><br><span class="line">ThemeManager.Current.AccentColor= Brushes.Red;</span><br></pre></td></tr></table></figure>
<div class="note info">
            <ul><li>If you want to specify the Accent Color for whole application in <code>Xaml (ThemeResources)</code>, you must use the <code>AccentColor</code> property.</li><li>If you want to specify the Accent Color for whole application in <code>C# code</code>, you must use <code>ThemeManager</code> Class and <code>AccentColor</code> property.</li><li>If you want to specify the Accent Color of the <code>FrameworkElements</code>, you must use <code>ThemeManager</code> Class and <code>RequestedAccentColor</code> attached property.</li><li>If you want to specify the ApplicationTheme of the <code>FrameworkElements</code>, you must use <code>ThemeManager</code> Class and <code>RequestedTheme</code> attached property.</li></ul><table><thead><tr><th>Name</th><th>NameSpace</th><th>Type</th><th>Remarks</th></tr></thead><tbody><tr><td>AccentColor</td><td>ThemeResource</td><td>Brush</td><td>specify the Accent Color for whole application</td></tr><tr><td>AccentColor</td><td>ThemeManager</td><td>DependencyProperty</td><td>specify the Accent Color for whole application</td></tr><tr><td>RequestedAccentColor</td><td>ThemeManager</td><td>AttachedProperty</td><td>specify the Accent Color for FrameworkElements</td></tr><tr><td>RequestedTheme</td><td>ThemeManager</td><td>AttachedProperty</td><td>specify the ApplicationTheme for FrameworkElements</td></tr></tbody></table>
          </div>

<div class="note info">
            <p>If you want to set the AccentColor to the default Color You must assign a <code>null</code> value to it.</p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">ThemeManager.Current.AccentColor= <span class="literal">null</span>;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="Override-the-theme-at-element-level"><a href="#Override-the-theme-at-element-level" class="headerlink" title="Override the theme at element level"></a>Override the theme at element level</h1><p>Set the <code>ThemeManager.RequestedTheme</code> or <code>hc:ThemeManager.RequestedAccentColor</code> attached property on any FrameworkElement. For example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;12&quot;</span> <span class="attr">hc:ThemeManager.RequestedTheme</span>=<span class="string">&quot;Dark&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Dark theme button&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;12&quot;</span> <span class="attr">hc:ThemeManager.RequestedAccentColor</span>=<span class="string">&quot;Red&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">&quot;Accent Color&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Now this Border and its descendants will use the dark theme while the theme used by the rest of the app remains unchanged. </p>
<div class="note info">
            <p>This feature sometimes doesn’t work correctly at design time.</p>
          </div>

<h1 id="Change-Application-Theme-with-System-Theme-Change"><a href="#Change-Application-Theme-with-System-Theme-Change" class="headerlink" title="Change Application Theme with System Theme Change"></a>Change Application Theme with System Theme Change</h1><p>If <code>UsingSystemTheme</code> is enabled in <code>Xaml (ThemeResources)</code> or <code>C# code (ThemeManager)</code> (default is <code>false</code>), By changing the Windows theme (Light/Dark and Accent Color), the theme of the program also changes automatically.</p>
<div class="note info">
            <p>For systems running Windows 10, the system accent color and system Theme is used. for windows 7 system accent color and the light theme is used.<br>For systems running an earlier version of Windows, the light theme and the color PrimaryBrush (default blue) are used.</p>
          </div>

<h2 id="Xaml-1"><a href="#Xaml-1" class="headerlink" title="Xaml"></a>Xaml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ThemeResources</span> <span class="attr">UsingSystemTheme</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Code-Behind-1"><a href="#Code-Behind-1" class="headerlink" title="Code-Behind"></a>Code-Behind</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ThemeManager.Current.UsingSystemTheme = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// OR you can use ThemeResources Class</span></span><br><span class="line"><span class="comment">// ThemeResources.Current.UsingSystemTheme= true;</span></span><br></pre></td></tr></table></figure>
<h2 id="SystemThemeChanged-Event"><a href="#SystemThemeChanged-Event" class="headerlink" title="SystemThemeChanged Event"></a>SystemThemeChanged Event</h2><p>There is also an event called <code>SystemThemeChanged</code> if you want to do more.</p>
<h3 id="Xaml-2"><a href="#Xaml-2" class="headerlink" title="Xaml"></a>Xaml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ThemeResources</span> <span class="attr">UsingSystemTheme</span>=<span class="string">&quot;true&quot;</span> <span class="attr">SystemThemeChanged</span>=<span class="string">&quot;ThemeResources_OnSystemThemeChanged&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ThemeResources_OnSystemThemeChanged</span>(<span class="params"><span class="built_in">object</span>? sender, FunctionEventArgs&lt;ThemeManager.SystemTheme&gt; e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Debug.WriteLine(e.Info.AccentBrush);</span><br><span class="line">    Debug.WriteLine(e.Info.CurrentTheme);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Code-Behind-2"><a href="#Code-Behind-2" class="headerlink" title="Code-Behind"></a>Code-Behind</h3><p>if you want to use this event in another class you can use ThemeManager</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ThemeManager.Current.SystemThemeChanged += OnSystemThemeChanged;</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/9213496/104836729-20619600-58c5-11eb-8d53-4b0485363016.gif" alt="Themes"></p>
<h1 id="ThemeDictionaries-Override-predefined-colors"><a href="#ThemeDictionaries-Override-predefined-colors" class="headerlink" title="ThemeDictionaries (Override predefined colors)"></a>ThemeDictionaries (Override predefined colors)</h1><p>You can overwrite predefined resources in ThemeDictionaries, Note that you need to know the resource key to override it.<br>also you can change your colors and styles according to the theme of the program.</p>
<p>Edit the <code>hc:ThemeResources</code> element in <code>App.xaml</code> to following:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ThemeResources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ThemeResources.ThemeDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">x:Key</span>=<span class="string">&quot;Light&quot;</span> <span class="attr">hc:ThemeDictionary.Key</span>=<span class="string">&quot;Light&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Put the resources you want to use in the Light theme Here --&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;PrimaryBrush&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;Red&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;AppBackgroundBrush&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#FFF1F1F1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">x:Key</span>=<span class="string">&quot;Dark&quot;</span> <span class="attr">hc:ThemeDictionary.Key</span>=<span class="string">&quot;Dark&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Put the resources you want to use in the Dark theme Here --&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;PrimaryBrush&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;Green&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;AppBackgroundBrush&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#FF232323&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ThemeResources.ThemeDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:ThemeResources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="ColorPresetResources-Customization"><a href="#ColorPresetResources-Customization" class="headerlink" title="ColorPresetResources (Customization)"></a>ColorPresetResources (Customization)</h1><p>See <ins><strong><a href="https://ghost1372.github.io/handycontrol/theme/colorPreset/">here</a></strong></ins> To customize all the colors and brushes</p>
<h1 id="Enable-IntelliSense-for-XAML-resources"><a href="#Enable-IntelliSense-for-XAML-resources" class="headerlink" title="Enable IntelliSense for XAML resources"></a>Enable IntelliSense for XAML resources</h1><p>See <ins><strong><a href="https://ghost1372.github.io/handycontrol/intellisense/">here</a></strong></ins></p>
<p><img src="https://user-images.githubusercontent.com/9213496/101981825-d1509180-3c84-11eb-9dd9-61911ce84d1b.gif" alt="Themes"></p>
]]></content>
  </entry>
  <entry>
    <title>DataGridAttach</title>
    <url>/handycontrol/attach/dataGridAttach/index.html</url>
    <content><![CDATA[<p>This additional attribute is specific to the hc internal DataGrid style and is not recommended for direct use.</p>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>ApplyDefaultStyle</td>
<td>Whether to apply the default style</td>
</tr>
<tr>
<td>TextColumnStyle</td>
<td>Text Column Style</td>
</tr>
<tr>
<td>EditingTextColumnStyle</td>
<td>Edit Text Column Style</td>
</tr>
<tr>
<td>ComboBoxColumnStyle</td>
<td>Combo Box Column Style</td>
</tr>
<tr>
<td>EditingComboBoxColumnStyle</td>
<td>Editing combo box column style</td>
</tr>
<tr>
<td>CheckBoxColumnStyle</td>
<td>Checkbox Column Style</td>
</tr>
<tr>
<td>EditingCheckBoxColumnStyle</td>
<td>Checkbox column style when editing</td>
</tr>
<tr>
<td>ShowRowNumber</td>
<td>Whether to display the line number</td>
</tr>
<tr>
<td>CanUnselectAllWithBlankArea</td>
<td></td>
</tr>
<tr>
<td>ShowSelectAllButton</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>DropDownElement</title>
    <url>/handycontrol/attach/dropDownElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>ConsistentWidth</td>
<td>Whether the drop-down content is consistent with the width of the drop-down box</td>
</tr>
<tr>
<td>AutoWidth</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>EdgeElement</title>
    <url>/handycontrol/attach/edgeElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>LeftContent</td>
<td>Left Boundary Content</td>
</tr>
<tr>
<td>TopContent</td>
<td>Top Boundary Content</td>
</tr>
<tr>
<td>RightContent</td>
<td>Right Side Content</td>
</tr>
<tr>
<td>BottomContent</td>
<td>Bottom border content</td>
</tr>
<tr>
<td>ShowEdgeContent</td>
<td>Whether to display border content</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>GlobalShortcut</title>
    <url>/handycontrol/attach/globalShortcut/index.html</url>
    <content><![CDATA[<p>With this property you can use shortcut keys</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Host</td>
<td>Desired window</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">hc:GlobalShortcut.Host=&quot;True&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:GlobalShortcut.KeyBindings</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">KeyBinding</span> <span class="attr">Modifiers</span>=<span class="string">&quot;Control+Alt&quot;</span> <span class="attr">Key</span>=<span class="string">&quot;I&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding GlobalShortcutInfoCmd&#125;&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">KeyBinding</span> <span class="attr">Modifiers</span>=<span class="string">&quot;Control+Alt&quot;</span> <span class="attr">Key</span>=<span class="string">&quot;E&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding GlobalShortcutWarningCmd&#125;&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">hc:GlobalShortcut.KeyBindings</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>GridAttach</title>
    <url>/handycontrol/attach/gridAttach/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>Name</td>
</tr>
<tr>
<td>RowName</td>
</tr>
<tr>
<td>ColumnName</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">hc:GridExtensions.Name</span>=<span class="string">&quot;R0&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">hc:GridExtensions.Name</span>=<span class="string">&quot;R1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ColumnDefinition</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ColumnDefinition</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">hc:GridExtensions.Name</span>=<span class="string">&quot;C1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">hc:GridExtensions.RowName</span>=<span class="string">&quot;R1&quot;</span> <span class="attr">hc:GridExtensions.ColumnName</span>=<span class="string">&quot;C1&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;12&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>IconElement</title>
    <url>/handycontrol/attach/iconElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Geometry</td>
<td>Geometry</td>
</tr>
<tr>
<td>Width</td>
<td>Icon Width</td>
</tr>
<tr>
<td>Height</td>
<td>Icon Height</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="Geometry-Geometric-shape"><a href="#Geometry-Geometric-shape" class="headerlink" title="Geometry Geometric shape"></a>Geometry Geometric shape</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Button&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Button&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource CalendarGeometry&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/IconElement.Geometry.png" alt="IconElement.Geometry"></p>
]]></content>
  </entry>
  <entry>
    <title>IconSwitchElement</title>
    <url>/handycontrol/attach/iconSwitchElement/index.html</url>
    <content><![CDATA[<div class="note info no-icon">
            <p>Inherited from <a href="https://handyorg.github.io/handycontrol/attach/iconElement/">IconElement</a></p>
          </div>

<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>GeometrySelected</td>
<td>Geometry when selected</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>InfoElement</title>
    <url>/handycontrol/attach/infoElement/index.html</url>
    <content><![CDATA[<div class="note info no-icon">
            <p>Inherited from <a href="https://handyorg.github.io/handycontrol/attach/titleElement/">TitleElement</a></p>
          </div>

<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Placeholder</td>
<td>Placeholder (input prompt)</td>
</tr>
<tr>
<td>Necessary</td>
<td>Required?</td>
</tr>
<tr>
<td>Symbol</td>
<td>Tag Information</td>
</tr>
<tr>
<td>ContentHeight</td>
<td>Content Height</td>
</tr>
<tr>
<td>MinContentHeight</td>
<td>Minimum Content Height</td>
</tr>
<tr>
<td>MaxContentHeight</td>
<td>Maximum Content Height</td>
</tr>
<tr>
<td>RegexPattern</td>
<td>Regex Pattern</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="Placeholder"><a href="#Placeholder" class="headerlink" title="Placeholder"></a>Placeholder</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SearchBar</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;请输入查询条件&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/InfoElement.Placeholder.png" alt="InfoElement.Placeholder"></p>
<h2 id="Necessary"><a href="#Necessary" class="headerlink" title="Necessary"></a>Necessary</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">     <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the query criteria&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Hc:InfoElement.Title</span>=<span class="string">&quot;Query Condition&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>Where <code>hc:InfoElement.Title=&quot;query condition&quot;</code> inherited from parent class</p>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/InfoElement.Necssary.png" alt="InfoElement.Necssary"></p>
<h2 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">     <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Hc:InfoElement.Title</span>=<span class="string">&quot;This item is required&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Hc:InfoElement.Symbol</span>=<span class="string">&quot;x&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/InfoElement.Symbol.png" alt="InfoElement.Symbol"></p>
<h2 id="ContentHeight"><a href="#ContentHeight" class="headerlink" title="ContentHeight"></a>ContentHeight</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">     <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the query criteria&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Hc:InfoElement.ContentHeight</span>=<span class="string">&quot;50&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Hc:InfoElement.Title</span>=<span class="string">&quot;Query Condition&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/InfoElement.ContentHeight.png" alt="InfoElement.ContentHeight"></p>
<h2 id="RegexPattern"><a href="#RegexPattern" class="headerlink" title="RegexPattern"></a>RegexPattern</h2><p>By setting this attribute, you can customize the verification logic inside the information element to realize error prompts for content outside the specified format.</p>
]]></content>
  </entry>
  <entry>
    <title>LinkElement</title>
    <url>/handycontrol/attach/linkElement/index.html</url>
    <content><![CDATA[<p>An attached property is intended to be used as a type of global property that is settable on any object.</p>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Link</td>
<td>Gets or sets Link Address</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Shield</span> <span class="attr">hc:LinkElement.Link</span>=<span class="string">&quot;https://github.com&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.OpenLink&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>MenuTopLineAttach</title>
    <url>/handycontrol/attach/menuTopLineAttach/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Popup</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>PanelElement</title>
    <url>/handycontrol/attach/panelElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>FluidMoveBehavior</td>
<td>Set the fluid movement mode of the panel</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="FluidMoveBehavior-Set-the-fluid-movement-mode-of-the-panel"><a href="#FluidMoveBehavior-Set-the-fluid-movement-mode-of-the-panel" class="headerlink" title="FluidMoveBehavior Set the fluid movement mode of the panel"></a>FluidMoveBehavior Set the fluid movement mode of the panel</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:HoneycombPanel</span> <span class="attr">hc:PanelElement.FluidMoveBehavior</span>=<span class="string">&quot;&#123;StaticResource BehaviorXY200&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>When adding or removing elements to the panel container, you can see the animation of fluid movement.
 </p>
]]></content>
  </entry>
  <entry>
    <title>RectangleAttach</title>
    <url>/handycontrol/attach/rectangleAttach/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>CornerRadius</td>
<td>Set Rectangle Rounded Corner Value</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="CornerRadius-Set-Rectangle"><a href="#CornerRadius-Set-Rectangle" class="headerlink" title="CornerRadius Set Rectangle"></a>CornerRadius Set Rectangle</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Rectangle</span> <span class="attr">Fill</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;60&quot;</span> <span class="attr">hc:RectangleAttach.Circular</span>=<span class="string">&quot;True&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/RectangleAttach.CornerRadius.png" alt="RectangleAttach.CornerRadius">
 </p>
]]></content>
  </entry>
  <entry>
    <title>PasswordBoxAttach</title>
    <url>/handycontrol/attach/passwordBoxAttach/index.html</url>
    <content><![CDATA[<p>This additional attribute is specific to the hc internal password box style and is not recommended for direct use.</p>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>IsMonitoring</td>
<td>Whether to monitor the password length</td>
</tr>
<tr>
<td>PasswordLength</td>
<td>Password Length</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>ScrollViewerAttach</title>
    <url>/handycontrol/attach/scrollViewerAttach/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>AutoHide</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ScrollViewer</span> <span class="attr">hc:ScrollViewerAttach.AutoHide</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>StatusSwitchElement</title>
    <url>/handycontrol/attach/statusSwitchElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>CheckedElement</td>
<td>Elements displayed when selected</td>
</tr>
<tr>
<td>HideUncheckedElement</td>
<td>Hide Elements</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="CheckedElement-The-element-that-is-displayed-when-selected"><a href="#CheckedElement-The-element-that-is-displayed-when-selected" class="headerlink" title="CheckedElement The element that is displayed when selected"></a>CheckedElement The element that is displayed when selected</h2><p>This additional property applies to the <code>ToggleButton</code> and subclass controls, which are used to control what needs to be displayed when the selection class control is selected. The default value is <code>False</code> and is not displayed.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource ToggleButtonCustom&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Checked--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Default--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ToggleButton</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p>Default state (when not selected) and selected state</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/StatusSwitchElement.CheckedElement.png" alt="StatusSwitchElement.CheckedElement"></p>
<h2 id="HideUncheckedElement-Whether-to-hide-elements"><a href="#HideUncheckedElement-Whether-to-hide-elements" class="headerlink" title="HideUncheckedElement Whether to hide elements"></a>HideUncheckedElement Whether to hide elements</h2><p>Whether to hide the default content when the control is selected, the default value is <code>False</code>, not hidden</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource ToggleButtonCustom&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Checked--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Default--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ToggleButton</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Explicitly set the hidden default content element when selected--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource ToggleButtonCustom&#125;&quot;</span> <span class="attr">hc:StatusSwitchElement.HideUncheckedElement</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Checked--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Default--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;18&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ToggleButton</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/StatusSwitchElement.HideUncheckedElement.png" alt="StatusSwitchElement.HideUncheckedElement"></p>
<div class="note info no-icon">
            <p>The above two attributes are used in combination, which can easily control the display function of the state of the selected class control, and can be reasonably adjusted according to the above cases.</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>TextBlockAttach</title>
    <url>/handycontrol/attach/textBlockAttach/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>AutoTooltip</td>
<td>Set whether to show tooltips automatically</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="AutoTooltip-Set-whether-to-show-tooltips-automatically"><a href="#AutoTooltip-Set-whether-to-show-tooltips-automatically" class="headerlink" title="AutoTooltip Set whether to show tooltips automatically"></a>AutoTooltip Set whether to show tooltips automatically</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">hc:TextBlockAttach.AutoTooltip</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;EEEEEEEEEEEEEEEEEEEE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/TextBlockAttach.AutoTooltip.png" alt="TextBlockAttach.AutoTooltip"></p>
]]></content>
  </entry>
  <entry>
    <title>TipElement</title>
    <url>/handycontrol/attach/tipElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Placement</td>
<td>Prompt Element Display Position</td>
</tr>
<tr>
<td>Visibility</td>
<td>Visibility</td>
</tr>
<tr>
<td>StringFormat</td>
<td>StringFormat</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="Placement-Prompt-element-display-position"><a href="#Placement-Prompt-element-display-position" class="headerlink" title="Placement Prompt element display position"></a>Placement Prompt element display position</h2><p>This attribute is used to set the display position of the prompt element. Currently supports BottomRight and TopLeft (default)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">TickPlacement</span>=<span class="string">&quot;BottomRight&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">Maximum</span>=<span class="string">&quot;100&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;60&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">TickFrequency</span>=<span class="string">&quot;10&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">hc:TipElement.Placement</span>=<span class="string">&quot;BottomRight&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">TickPlacement</span>=<span class="string">&quot;BottomRight&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">Maximum</span>=<span class="string">&quot;100&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;60&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">TickFrequency</span>=<span class="string">&quot;10&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">hc:TipElement.Placement</span>=<span class="string">&quot;Bottom&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">hc:TipElement.StringFormat</span>=<span class="string">&quot;#0.00&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">ValueEnd</span>=<span class="string">&quot;5&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">TickPlacement</span>=<span class="string">&quot;Both&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>effect</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/TipElement.Default.png" alt="TipElement.Default"></p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/TipElement.TopLeft.png" alt="TipElement.TopLeft"></p>
]]></content>
  </entry>
  <entry>
    <title>TitleElement</title>
    <url>/handycontrol/attach/titleElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Title</td>
<td>Title Information</td>
</tr>
<tr>
<td>Background</td>
<td>Title Background Color</td>
</tr>
<tr>
<td>Foreground</td>
<td>Title Font Color</td>
</tr>
<tr>
<td>BorderBrush</td>
<td>Title Border Color</td>
</tr>
<tr>
<td>TitlePlacement</td>
<td>Title Alignment</td>
</tr>
<tr>
<td>TitleWidth</td>
<td>Title Width</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">     <span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">hc:TitleElement.Title</span>=<span class="string">&quot;Title Information&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hc:TextBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/TitleElement.Title.png" alt="TitleElement.Title"></p>
<h2 id="TitlePlacement"><a href="#TitlePlacement" class="headerlink" title="TitlePlacement"></a>TitlePlacement</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">     <span class="comment">&lt;!--The title is on the top side --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">hc:TitleElement.Title</span>=<span class="string">&quot;Title Information&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Top&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hc:TextBox</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--The title is on the left --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">hc:TitleElement.Title</span>=<span class="string">&quot;Title Information&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hc:TextBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/TitleElement.TitlePlacement.png" alt="TitleElement.TitlePlacement"></p>
<h2 id="TitleWidth"><a href="#TitleWidth" class="headerlink" title="TitleWidth"></a>TitleWidth</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">         <span class="comment">&lt;!--Set TitleWidth to Auto--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">hc:TitleElement.Title</span>=<span class="string">&quot;Title Information&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Hc:TitleElement.TitleWidth</span>=<span class="string">&quot;Auto&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hc:TextBox</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--Set TitleWidth to a specific value --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">hc:TitleElement.Title</span>=<span class="string">&quot;Title Information&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Hc:TitleElement.TitleWidth</span>=<span class="string">&quot;60&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hc:TextBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/TitleElement.TitleWidth.png" alt="TitleElement.TitleWidth"></p>
]]></content>
  </entry>
  <entry>
    <title>BackgroundSwitchElement</title>
    <url>/handycontrol/attach/backgroundSwitchElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>MouseHoverBackground</td>
<td>Set mouse hover background color</td>
</tr>
<tr>
<td>MouseDownBackground</td>
<td>Set mouse down background color</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="MouseHoverBackground-Set-Mouse-hover-background-color"><a href="#MouseHoverBackground-Set-Mouse-hover-background-color" class="headerlink" title="MouseHoverBackground Set Mouse hover background color"></a>MouseHoverBackground Set Mouse hover background color</h2><p>In the style or template we add the following trigger code:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsMouseOver&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Background&quot;</span> <span class="attr">TargetName</span>=<span class="string">&quot;Chrome&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground),RelativeSource=&#123;RelativeSource TemplatedParent&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Then we can use this property:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Target</span> <span class="attr">control</span>  <span class="attr">hc:BackgroundSwitchElement.MouseHoverBackground</span> =<span class="string">&quot;Blue&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="MouseDownBackground-Set-Mouse-down-background-color"><a href="#MouseDownBackground-Set-Mouse-down-background-color" class="headerlink" title="MouseDownBackground  Set Mouse down background color"></a>MouseDownBackground  Set Mouse down background color</h2><p>In the style or template we add the following trigger code:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsPressed&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Background&quot;</span> <span class="attr">TargetName</span>=<span class="string">&quot;Chrome&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Path=(hc:BackgroundSwitchElement.MouseDownBackground),RelativeSource=&#123;RelativeSource TemplatedParent&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Then we can use this property:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Target</span> <span class="attr">control</span> <span class="attr">hc:BackgroundSwitchElement.MouseDownBackground</span> =<span class="string">&quot;Yellow&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>WindowAttach</title>
    <url>/handycontrol/attach/windowAttach/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>IsDragElement</td>
<td>Whether to allow the current element to drag the form</td>
</tr>
<tr>
<td>IgnoreAltF4</td>
<td>Whether to ignore the shortcuts Alt and F4 (the keyboard quickly exits or ends the currently running application)</td>
</tr>
<tr>
<td>ShowInTaskManager</td>
<td>Whether the form is displayed in the task manager</td>
</tr>
<tr>
<td>HideWhenClosing</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="IsDragElement-Whether-to-allow-the-current-element-to-drag-the-form"><a href="#IsDragElement-Whether-to-allow-the-current-element-to-drag-the-form" class="headerlink" title="IsDragElement Whether to allow the current element to drag the form"></a>IsDragElement Whether to allow the current element to drag the form</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:BlurWindow</span> <span class="attr">x:Class</span>=<span class="string">&quot;Class namespace&quot;</span></span></span><br><span class="line"><span class="tag">			 <span class="attr">.....Regular</span> <span class="attr">item......</span></span></span><br><span class="line"><span class="tag">             <span class="attr">WindowStartupLocation</span>=<span class="string">&quot;CenterScreen&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">ShowTitle</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource WindowBlur&#125;&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://ghost1372.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">d:DesignHeight</span>=<span class="string">&quot;450&quot;</span> <span class="attr">d:DesignWidth</span>=<span class="string">&quot;800&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SimplePanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Rectangle</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">RadiusX</span>=<span class="string">&quot;4&quot;</span> <span class="attr">RadiusY</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">StrokeDashArray</span>=<span class="string">&quot;2,2&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">hc:WindowAttach.IsDragElement</span>=<span class="string">&quot;True&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;28&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DarkDefaultBrush&#125;&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;DragHere&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,15,15,0&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonPrimary&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource CloseGeometry&#125;&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:BlurWindow</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>You can drag the form in the dark frame area</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/WindowAttach.IsDragElement.png" alt="WindowAttach.IsDragElement"></p>
<h2 id="IgnoreAltF4-Whether-to-ignore-the-shortcut-keys-Alt-and-F4"><a href="#IgnoreAltF4-Whether-to-ignore-the-shortcut-keys-Alt-and-F4" class="headerlink" title="IgnoreAltF4 Whether to ignore the shortcut keys Alt and F4"></a>IgnoreAltF4 Whether to ignore the shortcut keys Alt and F4</h2><p>Alt + F4 to close the window.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span> = <span class="string">&quot;hc: WindowAttach.IgnoreAltF4&quot;</span> <span class="attr">Value</span> = <span class="string">&quot;True&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="ShowInTaskManager-Whether-to-show-the-form-to-the-task-manager"><a href="#ShowInTaskManager-Whether-to-show-the-form-to-the-task-manager" class="headerlink" title="ShowInTaskManager Whether to show the form to the task manager"></a>ShowInTaskManager Whether to show the form to the task manager</h2><p>Prerequisites:</p>
<p>-The window must be non-modal, that is, you cannot use <code>ShowDialog</code> to display the window.<br>-The window must also set <code>ShowInTaskBar</code> to<code> false</code></p>
<p>ps: The effect of this additional property is not very obvious in <code>Windows7</code></p>
]]></content>
  </entry>
  <entry>
    <title>Behavior</title>
    <url>/handycontrol/basic_xaml/behaviors/index.html</url>
    <content><![CDATA[<h1 id="Fluid-movement"><a href="#Fluid-movement" class="headerlink" title="Fluid movement"></a>Fluid movement</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>BehaviorXY200</td>
<td>Fluid Movement Behavior, x, y Axis Motion, 200ms End Animation</td>
</tr>
<tr>
<td>BehaviorX200</td>
<td>Fluid Movement Behavior, x-Axis Motion, 200ms End Animation</td>
</tr>
<tr>
<td>BehaviorY200</td>
<td>Fluid Movement Behavior, y-axis Motion, 200ms End Animation</td>
</tr>
<tr>
<td>BehaviorXY400</td>
<td>Fluid Movement Behavior, x, y Axis Motion, 400ms End Animation</td>
</tr>
<tr>
<td>BehaviorX400</td>
<td>Fluid Movement Behavior, x-Axis Motion, 400ms End Animation</td>
</tr>
<tr>
<td>BehaviorY400</td>
<td>Fluid Movement Behavior, y-axis Motion, 400ms End Animation</td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example：<code>hc:PanelElement.FluidMoveBehavior=&quot;{StaticResource BehaviorXY200}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Brush</title>
    <url>/handycontrol/basic_xaml/brushes/index.html</url>
    <content><![CDATA[<p>The brush is based on color, and the existing brush is defined as follows:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>PrimaryBrush</td>
<td>Main Color</td>
</tr>
<tr>
<td>LightPrimaryBrush</td>
<td>Main Color (Light)</td>
</tr>
<tr>
<td>DarkPrimaryBrush</td>
<td>Main Color (Dark)</td>
</tr>
<tr>
<td>DangerBrush</td>
<td>Error, danger</td>
</tr>
<tr>
<td>LightDangerBrush</td>
<td>Error, danger (Light)</td>
</tr>
<tr>
<td>DarkDangerBrush</td>
<td>Error, Danger (Dark)</td>
</tr>
<tr>
<td>WarningBrush</td>
<td>Warning</td>
</tr>
<tr>
<td>LightWarningBrush</td>
<td>Warning (Light)</td>
</tr>
<tr>
<td>DarkWarningBrush</td>
<td>Warning (Dark)</td>
</tr>
<tr>
<td>InfoBrush</td>
<td>Information</td>
</tr>
<tr>
<td>LightInfoBrush</td>
<td>Information (Light)</td>
</tr>
<tr>
<td>DarkInfoBrush</td>
<td>Information (Dark)</td>
</tr>
<tr>
<td>SuccessBrush</td>
<td>Success</td>
</tr>
<tr>
<td>LightSuccessBrush</td>
<td>Success (Light)</td>
</tr>
<tr>
<td>DarkSuccessBrush</td>
<td>Success (Dark)</td>
</tr>
<tr>
<td>VioletBrush</td>
<td>Main Color (Violet) <code>Only Custom Version</code></td>
</tr>
<tr>
<td>DarkVioletBrush</td>
<td>Main Color (Violet) <code>Only Custom Version</code></td>
</tr>
<tr>
<td>PrimaryTextBrush</td>
<td>Main Text</td>
</tr>
<tr>
<td>SecondaryTextBrush</td>
<td>Secondary Text</td>
</tr>
<tr>
<td>ThirdlyTextBrush</td>
<td>Final Text</td>
</tr>
<tr>
<td>ReverseTextBrush</td>
<td>Inverted Text</td>
</tr>
<tr>
<td>TextIconBrush</td>
<td>General for text or icons on a dark background</td>
</tr>
<tr>
<td>BorderBrush</td>
<td>Border</td>
</tr>
<tr>
<td>SecondaryBorderBrush</td>
<td>Secondary Border</td>
</tr>
<tr>
<td>BackgroundBrush</td>
<td>Main Background Color</td>
</tr>
<tr>
<td>RegionBrush</td>
<td>Region Block Background</td>
</tr>
<tr>
<td>SecondaryRegionBrush</td>
<td>Secondary Block Background</td>
</tr>
<tr>
<td>ThirdlyRegionBrush</td>
<td>Final Block Background</td>
</tr>
<tr>
<td>TitleBrush</td>
<td>Title Background</td>
</tr>
<tr>
<td>DefaultBrush</td>
<td>Default Color</td>
</tr>
<tr>
<td>DarkDefaultBrush</td>
<td>Secondary default color</td>
</tr>
<tr>
<td>AccentBrush</td>
<td>Reminder</td>
</tr>
<tr>
<td>DarkAccentBrush</td>
<td>Reminder (Dark)</td>
</tr>
<tr>
<td>DarkMaskBrush</td>
<td>Use as a mask</td>
</tr>
<tr>
<td>DarkOpacityBrush</td>
<td>Translucent Background</td>
</tr>
<tr>
<td>MainContentBackgroundBrush</td>
<td><code>Only Custom Version</code></td>
</tr>
<tr>
<td>MainContentForegroundBrush</td>
<td><code>Only Custom Version</code></td>
</tr>
<tr>
<td>MainContentForegroundDrawingBrush</td>
<td><code>Only Custom Version</code></td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example：<code>Foreground=&quot;{DynamicResource PrimaryBrush}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Converter</title>
    <url>/handycontrol/basic_xaml/converters/index.html</url>
    <content><![CDATA[<h1 id="Boolean2BooleanReConverter"><a href="#Boolean2BooleanReConverter" class="headerlink" title="Boolean2BooleanReConverter"></a>Boolean2BooleanReConverter</h1><p>This converter is used to invert Boolean types</p>
<h1 id="Boolean2StrConverter"><a href="#Boolean2StrConverter" class="headerlink" title="Boolean2StrConverter"></a>Boolean2StrConverter</h1><p>The converter needs to provide a string as a parameter. The general form of the string is: <code>[string0];[string1]</code>, when the value obtained by the converter is <code>true</code>, it will return <code>[character String 0]</code>, otherwise return <code>[string 1]</code>.</p>
<h1 id="Boolean2VisibilityConverter"><a href="#Boolean2VisibilityConverter" class="headerlink" title="Boolean2VisibilityConverter"></a>Boolean2VisibilityConverter</h1><p>The converter will convert <code>true</code> to <code>Visible</code>, which will convert <code>false</code> to <code>Collapse</code>.</p>
<h1 id="Boolean2VisibilityReConverter"><a href="#Boolean2VisibilityReConverter" class="headerlink" title="Boolean2VisibilityReConverter"></a>Boolean2VisibilityReConverter</h1><p>The converter case is the opposite of <code>Boolean2VisibilityConverter</code>.</p>
<h1 id="BooleanArr2VisibilityConverter"><a href="#BooleanArr2VisibilityConverter" class="headerlink" title="BooleanArr2VisibilityConverter"></a>BooleanArr2VisibilityConverter</h1><p>The converter will convert the Boolean array to <code>Visibility</code>, returning <code>Visible</code> when all the arrays are <code>true</code>, otherwise return <code>Collapse</code>.</p>
<h1 id="BorderCircularClipConverter"><a href="#BorderCircularClipConverter" class="headerlink" title="BorderCircularClipConverter"></a>BorderCircularClipConverter</h1><p>The converter is exclusive to the Border and accepts an array of objects of length 3, corresponding to the length, width and fillet radius of the Border, which returns a circular geometry as a Clip to trim the Border.</p>
<h1 id="BorderCircularConverter"><a href="#BorderCircularConverter" class="headerlink" title="BorderCircularConverter"></a>BorderCircularConverter</h1><p>The converter is exclusive to Border and accepts an array of objects of length 3, corresponding to the length, width and fillet radius of the Border. It returns a rounded rectangle as a Clip to trim the Border.</p>
<h1 id="BorderClipConverter"><a href="#BorderClipConverter" class="headerlink" title="BorderClipConverter"></a>BorderClipConverter</h1><p>The converter is exclusive to the Border and accepts an array of objects of length 3, corresponding to the length, width and fillet radius of the Border, which returns a circular geometry as a Clip to trim the Border.</p>
<h1 id="ColLayoutConverter"><a href="#ColLayoutConverter" class="headerlink" title="ColLayoutConverter"></a>ColLayoutConverter</h1><p>When the converter is used in xaml design, the main function is to convert the string to a valid <code>ColLayout</code> value.</p>
<h1 id="Color2ChannelAConverter-internal-use"><a href="#Color2ChannelAConverter-internal-use" class="headerlink" title="Color2ChannelAConverter (internal use)"></a>Color2ChannelAConverter (internal use)</h1><p>The converter will extract the value of the transparent channel (A) of <code>SolidColorBrush.Color</code>.</p>
<h1 id="CornerRadiusSplitConverter"><a href="#CornerRadiusSplitConverter" class="headerlink" title="CornerRadiusSplitConverter"></a>CornerRadiusSplitConverter</h1><p>The converter needs to provide a string as a parameter. The general form of the string is: <code>[0/1], [0/1], [0/1], [0/1]</code>, 4 separated by commas The values correspond to <code>Left</code>, <code>Top</code>, <code>Right</code>, <code>Bottom</code> attributes of <code>CornerRadius</code>, and the value of 1 returns the value of the corresponding attribute, otherwise it returns 0.</p>
<h1 id="Color2HexStrConverter"><a href="#Color2HexStrConverter" class="headerlink" title="Color2HexStrConverter"></a>Color2HexStrConverter</h1><p>The converter will convert <code>SolidColorBrush</code> to a hexadecimal string (with “#”).</p>
<h1 id="Double2GridLengthConverter"><a href="#Double2GridLengthConverter" class="headerlink" title="Double2GridLengthConverter"></a>Double2GridLengthConverter</h1><p>This converter will convert <code>double</code> values to <code>GridLength</code>.</p>
<h1 id="DoubleMinConverter-internal-use"><a href="#DoubleMinConverter-internal-use" class="headerlink" title="DoubleMinConverter (internal use)"></a>DoubleMinConverter (internal use)</h1><p>The converter can be provided with a string as the minimum value (if not provided, the minimum value defaults to 0). When the value passed in is less than the minimum value, the minimum value is returned, otherwise the value returned is returned.</p>
<h1 id="Int2StrConverter"><a href="#Int2StrConverter" class="headerlink" title="Int2StrConverter"></a>Int2StrConverter</h1><p>The converter needs to provide a string as a parameter, the general form of the string is: <code>[string 0]; [string 1];...[string n]</code>, the converter will be an integer The value is used as an index to get the string at the specified location and return.</p>
<h1 id="Long2FileSizeConverter"><a href="#Long2FileSizeConverter" class="headerlink" title="Long2FileSizeConverter"></a>Long2FileSizeConverter</h1><p>The converter converts long integers to a file-sized string.</p>
<h1 id="Number2PercentageConverter"><a href="#Number2PercentageConverter" class="headerlink" title="Number2PercentageConverter"></a>Number2PercentageConverter</h1><p>The converter accepts a numeric array of length 2 and returns a percentage of the two numbers.</p>
<h1 id="Object2BooleanConverter"><a href="#Object2BooleanConverter" class="headerlink" title="Object2BooleanConverter"></a>Object2BooleanConverter</h1><p>Returns <code>false</code> if the converter gets a value of <code>null</code>, otherwise returns <code>true</code>.</p>
<h1 id="Object2VisibilityConverter"><a href="#Object2VisibilityConverter" class="headerlink" title="Object2VisibilityConverter"></a>Object2VisibilityConverter</h1><p>Returns <code>Collapsed</code> if the value obtained by the converter is <code>null</code>, otherwise returns <code>Visible</code>.</p>
<h1 id="Object2VisibilityReConverter"><a href="#Object2VisibilityReConverter" class="headerlink" title="Object2VisibilityReConverter"></a>Object2VisibilityReConverter</h1><p>Returns <code>Visible</code> if the value obtained by the converter is <code>null</code>, otherwise returns <code>Collapsed</code>.</p>
<h1 id="Object2StringConverter"><a href="#Object2StringConverter" class="headerlink" title="Object2StringConverter"></a>Object2StringConverter</h1><p>Returns <code>String</code></p>
<h1 id="RectangleCircularConverter"><a href="#RectangleCircularConverter" class="headerlink" title="RectangleCircularConverter"></a>RectangleCircularConverter</h1><p>The converter is Rectangle-specific and accepts an integer array of the length and width of the <code>Rectangle</code>, returning half of their minimum as the radius of the circular Rectangle.</p>
<h1 id="String2VisibilityConverter"><a href="#String2VisibilityConverter" class="headerlink" title="String2VisibilityConverter"></a>String2VisibilityConverter</h1><p>The converter accepts a string and returns <code>Collapse</code> if the string is empty or null, otherwise returns <code>Visible</code>.</p>
<h1 id="String2VisibilityReConverter"><a href="#String2VisibilityReConverter" class="headerlink" title="String2VisibilityReConverter"></a>String2VisibilityReConverter</h1><p>The converter case is the opposite of <code>String2VisibilityConverter</code>.</p>
<h1 id="ThicknessSplitConverter"><a href="#ThicknessSplitConverter" class="headerlink" title="ThicknessSplitConverter"></a>ThicknessSplitConverter</h1><p>The converter needs to provide a string as a parameter. The general form of the string is: <code>[0/1], [0/1], [0/1], [0/1]</code>, 4 separated by commas The values correspond to the <code>Left</code>, <code>Top</code>, <code>Right</code>, <code>Bottom</code> attributes of <code>Thickness</code>, and the value of 1 returns the value of the corresponding attribute, otherwise it returns 0.</p>
<h1 id="TreeViewItemMarginConverter-internal-use"><a href="#TreeViewItemMarginConverter-internal-use" class="headerlink" title="TreeViewItemMarginConverter (internal use)"></a>TreeViewItemMarginConverter (internal use)</h1><p>This converter is used to provide the appropriate left margin for the TreeViewItem.</p>
<h1 id="Color2HexStringConverter"><a href="#Color2HexStringConverter" class="headerlink" title="Color2HexStringConverter"></a>Color2HexStringConverter</h1><h1 id="Boolean2StringConverter"><a href="#Boolean2StringConverter" class="headerlink" title="Boolean2StringConverter"></a>Boolean2StringConverter</h1><h1 id="Int2StringConverter"><a href="#Int2StringConverter" class="headerlink" title="Int2StringConverter"></a>Int2StringConverter</h1><h1 id="SpeedConverter-Only-Custom-Version-Internal-use"><a href="#SpeedConverter-Only-Custom-Version-Internal-use" class="headerlink" title="SpeedConverter Only Custom Version (Internal use)"></a>SpeedConverter <code>Only Custom Version</code> (Internal use)</h1><h1 id="Positive2Nagative-Only-Custom-Version-Internal-use"><a href="#Positive2Nagative-Only-Custom-Version-Internal-use" class="headerlink" title="Positive2Nagative Only Custom Version (Internal use)"></a>Positive2Nagative <code>Only Custom Version</code> (Internal use)</h1><p>Convert positive value to negative</p>
<h1 id="ValueToBrushConverter-Only-Custom-Version-Internal-use"><a href="#ValueToBrushConverter-Only-Custom-Version-Internal-use" class="headerlink" title="ValueToBrushConverter Only Custom Version (Internal use)"></a>ValueToBrushConverter <code>Only Custom Version</code> (Internal use)</h1><p>Convert Value to Brush </p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Visibility&#x3D;&quot;&#123;Binding ShowButton,Converter&#x3D;&#123;StaticResource Boolean2VisibilityConverter&#125;&#125;&quot;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="StringRepeatConverter-Only-Custom-Version"><a href="#StringRepeatConverter-Only-Custom-Version" class="headerlink" title="StringRepeatConverter Only Custom Version"></a>StringRepeatConverter <code>Only Custom Version</code></h1><p>repeat text</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;hc:OutlineText Text&#x3D;&quot;&#123;Binding Text, Converter&#x3D;&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter&#x3D;2&#125;&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<h1 id="ConverterBindableBinding-Only-Custom-Version"><a href="#ConverterBindableBinding-Only-Custom-Version" class="headerlink" title="ConverterBindableBinding Only Custom Version"></a>ConverterBindableBinding <code>Only Custom Version</code></h1><p>if you need to use binding in Converter Parameter you can use this converter type</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Foreground&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:ConverterBindableBinding</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding ElementName=arc, Path=Tag&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                                    <span class="attr">Converter</span>=<span class="string">&quot;&#123;StaticResource ValueToBrushConverter&#125;&quot;</span> <span class="attr">ConverterParameterBinding</span>=<span class="string">&quot;&#123;Binding ElementName=arc, Path=EndAngle&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="DataGridSelectAllButtonVisibilityConverter"><a href="#DataGridSelectAllButtonVisibilityConverter" class="headerlink" title="DataGridSelectAllButtonVisibilityConverter"></a>DataGridSelectAllButtonVisibilityConverter</h1><h1 id="BooleanArr2BooleanConverter"><a href="#BooleanArr2BooleanConverter" class="headerlink" title="BooleanArr2BooleanConverter"></a>BooleanArr2BooleanConverter</h1>]]></content>
  </entry>
  <entry>
    <title>BorderElement</title>
    <url>/handycontrol/attach/borderElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>CornerRadius</td>
<td>Set border fillet values</td>
</tr>
<tr>
<td>Circular</td>
<td>Whether it is rendered as a circle True is Yes, False is No</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="CornerRadius-Set-the-border-fillet-value"><a href="#CornerRadius-Set-the-border-fillet-value" class="headerlink" title="CornerRadius Set the border fillet value"></a>CornerRadius Set the border fillet value</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Button&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Text</span>=<span class="string">&quot;TextBox&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/BorderElement.CornerRadius.png" alt="BorderElement.CornerRadius"></p>
<h2 id="Circular"><a href="#Circular" class="headerlink" title="Circular"></a>Circular</h2><p>Implement a circular border with the attached property of <code>BorderElement.Circular</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderCircular&#125;&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/BorderElement.Circular.png" alt="BorderElement.Circular"></p>
]]></content>
  </entry>
  <entry>
    <title>ImageAttach</title>
    <url>/handycontrol/attach/imageAttach/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>SourceFailed</td>
<td>The image displayed after the image failed to load</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Image</span> <span class="attr">hc:ImageAttach.SourceFailed</span>=<span class="string">&quot;/Resources/Img/chrome_dragon.png&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;Binding Source&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Font Size</title>
    <url>/handycontrol/basic_xaml/fonts/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Name</th>
<th>Size</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>LargeFontSize</td>
<td>24</td>
<td>Page Title</td>
</tr>
<tr>
<td>HeadFontSize</td>
<td>20</td>
<td>Feature Title</td>
</tr>
<tr>
<td>SubHeadFontSize</td>
<td>16</td>
<td>Subfunction Title</td>
</tr>
<tr>
<td>TextFontSize</td>
<td>12</td>
<td>Text</td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example: <code>FontSize=&quot;{StaticResource LargeFontSize}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Path</title>
    <url>/handycontrol/basic_xaml/paths/index.html</url>
    <content><![CDATA[<p>Like geometric shapes, we are not prepared to be all-inclusive. All paths in the control library are listed in the following table:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>PathBaseStyle</td>
<td>Path Base Style</td>
</tr>
<tr>
<td>SearchPathStyle</td>
<td>Search</td>
</tr>
<tr>
<td>FullScreenReturnPathStyle</td>
<td>Full Screen Back</td>
</tr>
<tr>
<td>FullScreenPathStyle</td>
<td>Full Screen</td>
</tr>
<tr>
<td>WindowsPathStyle</td>
<td>Window</td>
</tr>
<tr>
<td>SavePathStyle</td>
<td>Save</td>
</tr>
<tr>
<td>DownloadPathStyle</td>
<td>Download</td>
</tr>
<tr>
<td>EnlargePathStyle</td>
<td>Zoom</td>
</tr>
<tr>
<td>ReducePathStyle</td>
<td>Zoom out</td>
</tr>
<tr>
<td>RotatePathStyle</td>
<td>Rotate Left (default)</td>
</tr>
<tr>
<td>CalendarPathStyle</td>
<td>Calendar</td>
</tr>
<tr>
<td>DeletePathStyle</td>
<td>Delete</td>
</tr>
<tr>
<td>ClosePathStyle</td>
<td>Close</td>
</tr>
<tr>
<td>DownPathStyle</td>
<td>Next</td>
</tr>
<tr>
<td>ClockPathStyle</td>
<td>Clock</td>
</tr>
<tr>
<td>LeftPathStyle</td>
<td>Left</td>
</tr>
<tr>
<td>RightPathStyle</td>
<td>Right</td>
</tr>
<tr>
<td>UpDownPathStyle</td>
<td>Upper and lower combinations</td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example: <code>Style=&quot;{StaticResource SearchPathStyle}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Size</title>
    <url>/handycontrol/basic_xaml/sizes/index.html</url>
    <content><![CDATA[<p>| Name | Type | Value | Description |<br>|-|-|<br>| DefaultControlHeight | System.Double | 30 | Default Control Height |<br>| DefaultControlPadding | System.Windows.Thickness | 10,6 | Default Control Pitch |<br>| DefaultInputPadding | System.Windows.Thickness | 8,6 | Default input control padding |<br>| DefaultCornerRadius | System.Windows.CornerRadius | 4 | Default Fillet |</p>
<div class="note info no-icon">
            <p>Example: <code>CornerRadius=&quot;{StaticResource DefaultCornerRadius}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Geometric shape</title>
    <url>/handycontrol/basic_xaml/geometries/index.html</url>
    <content><![CDATA[<p>HandyControl comes with some geometric shape definitions, but it is obviously not enough to apply to production. We are not prepared to be all-encompassing. There is never a bottom, so we will do the opposite. It only contains the control library itself (of course users can also use it), and the rest should expand on its own. All shape definitions in the control library are listed in the following table:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>CalendarGeometry</td>
<td>Calendar</td>
</tr>
<tr>
<td>DeleteGeometry</td>
<td>Delete</td>
</tr>
<tr>
<td>DeleteFillCircleGeometry</td>
<td>Delete (Circular Fill)</td>
</tr>
<tr>
<td>CloseGeometry</td>
<td>Close</td>
</tr>
<tr>
<td>DownGeometry</td>
<td>Next</td>
</tr>
<tr>
<td>UpGeometry</td>
<td>On</td>
</tr>
<tr>
<td>ClockGeometry</td>
<td>Clock</td>
</tr>
<tr>
<td>LeftGeometry</td>
<td>Left</td>
</tr>
<tr>
<td>RightGeometry</td>
<td>Right</td>
</tr>
<tr>
<td>RotateLeftGeometry</td>
<td>Rotate Left</td>
</tr>
<tr>
<td>RotateRightGeometry</td>
<td>Rotate Right</td>
</tr>
<tr>
<td>EnlargeGeometry</td>
<td>Zoom</td>
</tr>
<tr>
<td>ReduceGeometry</td>
<td>Zoom out</td>
</tr>
<tr>
<td>DownloadGeometry</td>
<td>Download</td>
</tr>
<tr>
<td>SaveGeometry</td>
<td>Save</td>
</tr>
<tr>
<td>WindowsGeometry</td>
<td>Window</td>
</tr>
<tr>
<td>FullScreenGeometry</td>
<td>Full Screen</td>
</tr>
<tr>
<td>FullScreenReturnGeometry</td>
<td>Full Screen Back</td>
</tr>
<tr>
<td>SearchGeometry</td>
<td>Search</td>
</tr>
<tr>
<td>UpDownGeometry</td>
<td>Upper and lower combinations</td>
</tr>
<tr>
<td>WindowMinGeometry</td>
<td>Window Minimization</td>
</tr>
<tr>
<td>WindowRestoreGeometry</td>
<td>Window Restore</td>
</tr>
<tr>
<td>WindowMaxGeometry</td>
<td>Window Maximization</td>
</tr>
<tr>
<td>PageModeGeometry</td>
<td>Single page mode</td>
</tr>
<tr>
<td>TwoPageModeGeometry</td>
<td>Double page mode</td>
</tr>
<tr>
<td>ScrollModeGeometry</td>
<td>Scroll mode</td>
</tr>
<tr>
<td>AudioGeometry</td>
<td>Sound</td>
</tr>
<tr>
<td>BubbleTailGeometry</td>
<td>Bubble Tail</td>
</tr>
<tr>
<td>StarGeometry</td>
<td>Love</td>
</tr>
<tr>
<td>AddGeometry</td>
<td>Add</td>
</tr>
<tr>
<td>SubGeometry</td>
<td>Subtract</td>
</tr>
<tr>
<td>WarningGeometry</td>
<td>Warning</td>
</tr>
<tr>
<td>InfoGeometry</td>
<td>Information</td>
</tr>
<tr>
<td>ErrorGeometry</td>
<td>Error</td>
</tr>
<tr>
<td>SuccessGeometry</td>
<td>Success</td>
</tr>
<tr>
<td>FatalGeometry</td>
<td>Critical</td>
</tr>
<tr>
<td>AskGeometry</td>
<td>Inquiry</td>
</tr>
<tr>
<td>AllGeometry</td>
<td>All</td>
</tr>
<tr>
<td>DragVerticalGeometry</td>
<td>Drag and Drop Vertically (for toolbars)</td>
</tr>
<tr>
<td>DragHorizontalGeometry</td>
<td>Drag and Drop Horizontally (for toolbars)</td>
</tr>
<tr>
<td>CheckedGeometry</td>
<td>Selected</td>
</tr>
<tr>
<td>EyeOpenGeometry</td>
<td>Open eyes</td>
</tr>
<tr>
<td>EyeCloseGeometry</td>
<td>Close eyes</td>
</tr>
<tr>
<td>DropperGeometry</td>
<td>Select Color from Shell</td>
</tr>
<tr>
<td>VisualStudioGeometry</td>
<td>Visual Studio Icon</td>
</tr>
<tr>
<td>ConfigGeometry</td>
<td>Gear Icon</td>
</tr>
<tr>
<td>NewGeometry</td>
<td>New Icon</td>
</tr>
<tr>
<td>RemoveGeometry</td>
<td>Remove Icon</td>
</tr>
<tr>
<td>AlignLeftGeometry</td>
<td></td>
</tr>
<tr>
<td>AlignRightGeometry</td>
<td></td>
</tr>
<tr>
<td>AlignHCenterGeometry</td>
<td></td>
</tr>
<tr>
<td>AlignHStretchGeometry</td>
<td></td>
</tr>
<tr>
<td>AlignTopGeometry</td>
<td></td>
</tr>
<tr>
<td>AlignBottomGeometry</td>
<td></td>
</tr>
<tr>
<td>AlignVCenterGeometry</td>
<td></td>
</tr>
<tr>
<td>AlignVStretchGeometry</td>
<td></td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example: <code>Data=&quot;{StaticResource ErrorGeometry}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Effect</title>
    <url>/handycontrol/basic_xaml/effects/index.html</url>
    <content><![CDATA[<h1 id="Shadow"><a href="#Shadow" class="headerlink" title="Shadow"></a>Shadow</h1><p>Currently only contains 5 levels of shadow effects:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Radius</th>
</tr>
</thead>
<tbody><tr>
<td>EffectShadow1</td>
<td>5</td>
</tr>
<tr>
<td>EffectShadow2</td>
<td>8</td>
</tr>
<tr>
<td>EffectShadow3</td>
<td>14</td>
</tr>
<tr>
<td>EffectShadow4</td>
<td>25</td>
</tr>
<tr>
<td>EffectShadow5</td>
<td>35</td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example：<code>Effect=&quot;{StaticResource EffectShadow5}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Enum</title>
    <url>/handycontrol/data/Enum/index.html</url>
    <content><![CDATA[<div class="note info no-icon">
            <p>enum(int)</p>
          </div>

<h1 id="BadgeStatus"><a href="#BadgeStatus" class="headerlink" title="BadgeStatus"></a>BadgeStatus</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Text</td>
</tr>
<tr>
<td>Dot</td>
</tr>
<tr>
<td>Processing</td>
</tr>
</tbody></table>
<h1 id="ChatMessageType"><a href="#ChatMessageType" class="headerlink" title="ChatMessageType"></a>ChatMessageType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>String</td>
</tr>
<tr>
<td>Image</td>
</tr>
<tr>
<td>Audio</td>
</tr>
<tr>
<td>Custom</td>
</tr>
</tbody></table>
<h1 id="ChatRoleType"><a href="#ChatRoleType" class="headerlink" title="ChatRoleType"></a>ChatRoleType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Sender</td>
</tr>
<tr>
<td>Receiver</td>
</tr>
</tbody></table>
<h1 id="ColLayoutStatus"><a href="#ColLayoutStatus" class="headerlink" title="ColLayoutStatus"></a>ColLayoutStatus</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Xs</td>
</tr>
<tr>
<td>Sm</td>
</tr>
<tr>
<td>Md</td>
</tr>
<tr>
<td>Lg</td>
</tr>
<tr>
<td>Xl</td>
</tr>
<tr>
<td>Xxl</td>
</tr>
<tr>
<td>Auto</td>
</tr>
</tbody></table>
<h1 id="DrawerShowMode"><a href="#DrawerShowMode" class="headerlink" title="DrawerShowMode"></a>DrawerShowMode</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Cover</td>
</tr>
<tr>
<td>Push</td>
</tr>
<tr>
<td>Press</td>
</tr>
</tbody></table>
<h1 id="EnumDataProvider-ObjectDataProvider"><a href="#EnumDataProvider-ObjectDataProvider" class="headerlink" title="EnumDataProvider : ObjectDataProvider"></a>EnumDataProvider : ObjectDataProvider</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Type</td>
</tr>
</tbody></table>
<h1 id="ExpandMode"><a href="#ExpandMode" class="headerlink" title="ExpandMode"></a>ExpandMode</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>ShowOne</td>
</tr>
<tr>
<td>ShowAll</td>
</tr>
<tr>
<td>Accordion</td>
</tr>
<tr>
<td>Freedom</td>
</tr>
</tbody></table>
<h1 id="HatchStyle"><a href="#HatchStyle" class="headerlink" title="HatchStyle"></a>HatchStyle</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Horizontal</td>
</tr>
<tr>
<td>Vertical</td>
</tr>
<tr>
<td>ForwardDiagonal</td>
</tr>
<tr>
<td>BackwardDiagonal</td>
</tr>
<tr>
<td>Cross</td>
</tr>
<tr>
<td>DiagonalCross</td>
</tr>
<tr>
<td>Percent05</td>
</tr>
<tr>
<td>Percent10</td>
</tr>
<tr>
<td>Percent20</td>
</tr>
<tr>
<td>Percent25</td>
</tr>
<tr>
<td>Percent30</td>
</tr>
<tr>
<td>Percent40</td>
</tr>
<tr>
<td>Percent50</td>
</tr>
<tr>
<td>Percent60</td>
</tr>
<tr>
<td>Percent70</td>
</tr>
<tr>
<td>Percent75</td>
</tr>
<tr>
<td>Percent80</td>
</tr>
<tr>
<td>Percent90</td>
</tr>
<tr>
<td>LightDownwardDiagonal</td>
</tr>
<tr>
<td>LightUpwardDiagonal</td>
</tr>
<tr>
<td>DarkDownwardDiagonal</td>
</tr>
<tr>
<td>DarkUpwardDiagonal</td>
</tr>
<tr>
<td>WideDownwardDiagonal</td>
</tr>
<tr>
<td>WideUpwardDiagonal</td>
</tr>
<tr>
<td>LightVertical</td>
</tr>
<tr>
<td>LightHorizontal</td>
</tr>
<tr>
<td>NarrowVertical</td>
</tr>
<tr>
<td>NarrowHorizontal</td>
</tr>
<tr>
<td>DarkVertical</td>
</tr>
<tr>
<td>DarkHorizontal</td>
</tr>
<tr>
<td>DashedDownwardDiagonal</td>
</tr>
<tr>
<td>DashedUpwardDiagonal</td>
</tr>
<tr>
<td>DashedHorizontal</td>
</tr>
<tr>
<td>DashedVertical</td>
</tr>
<tr>
<td>SmallConfetti</td>
</tr>
<tr>
<td>LargeConfetti</td>
</tr>
<tr>
<td>ZigZag</td>
</tr>
<tr>
<td>Wave</td>
</tr>
<tr>
<td>DiagonalBrick</td>
</tr>
<tr>
<td>HorizontalBrick</td>
</tr>
<tr>
<td>Weave</td>
</tr>
<tr>
<td>Plaid</td>
</tr>
<tr>
<td>Divot</td>
</tr>
<tr>
<td>DottedGrid</td>
</tr>
<tr>
<td>DottedDiamond</td>
</tr>
<tr>
<td>Shingle</td>
</tr>
<tr>
<td>Trellis</td>
</tr>
<tr>
<td>Sphere</td>
</tr>
<tr>
<td>SmallGrid</td>
</tr>
<tr>
<td>SmallCheckerBoard</td>
</tr>
<tr>
<td>LargeCheckerBoard</td>
</tr>
<tr>
<td>OutlinedDiamond</td>
</tr>
<tr>
<td>SolidDiamond</td>
</tr>
</tbody></table>
<h1 id="HitMode"><a href="#HitMode" class="headerlink" title="HitMode"></a>HitMode</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Click</td>
</tr>
<tr>
<td>Hover</td>
</tr>
<tr>
<td>Focus</td>
</tr>
<tr>
<td>None</td>
</tr>
</tbody></table>
<h1 id="ImageCodecFlags-Flags"><a href="#ImageCodecFlags-Flags" class="headerlink" title="ImageCodecFlags : Flags"></a>ImageCodecFlags : Flags</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Encoder</td>
</tr>
<tr>
<td>Decoder</td>
</tr>
<tr>
<td>SupportBitmap</td>
</tr>
<tr>
<td>SupportVector</td>
</tr>
<tr>
<td>SeekableEncode</td>
</tr>
<tr>
<td>BlockingDecode</td>
</tr>
<tr>
<td>Builtin</td>
</tr>
<tr>
<td>System</td>
</tr>
<tr>
<td>User</td>
</tr>
</tbody></table>
<h1 id="InfoType"><a href="#InfoType" class="headerlink" title="InfoType"></a>InfoType</h1><div class="note info no-icon">
            <p>Message type</p>
          </div>

<table>
<thead>
<tr>
<th>Member Name</th>
<th>Value</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Success</td>
<td>0</td>
<td>Success</td>
</tr>
<tr>
<td>Info</td>
<td>1</td>
<td>Information</td>
</tr>
<tr>
<td>Warning</td>
<td>2</td>
<td>Warning</td>
</tr>
<tr>
<td>Error</td>
<td>3</td>
<td>Error</td>
</tr>
<tr>
<td>Fatal</td>
<td>4</td>
<td>Serious</td>
</tr>
<tr>
<td>Ask</td>
<td>5</td>
<td>Ask</td>
</tr>
</tbody></table>
<h1 id="IpType"><a href="#IpType" class="headerlink" title="IpType"></a>IpType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
</tr>
<tr>
<td>B</td>
</tr>
<tr>
<td>C</td>
</tr>
<tr>
<td>D</td>
</tr>
<tr>
<td>E</td>
</tr>
</tbody></table>
<h1 id="MouseHookMessageType"><a href="#MouseHookMessageType" class="headerlink" title="MouseHookMessageType"></a>MouseHookMessageType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>LeftButtonDown</td>
</tr>
<tr>
<td>LeftButtonUp</td>
</tr>
<tr>
<td>MouseMove</td>
</tr>
<tr>
<td>MouseWheel</td>
</tr>
<tr>
<td>RightButtonDown</td>
</tr>
<tr>
<td>RightButtonUp</td>
</tr>
</tbody></table>
<h1 id="NotifyIconInfoType"><a href="#NotifyIconInfoType" class="headerlink" title="NotifyIconInfoType"></a>NotifyIconInfoType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>None</td>
</tr>
<tr>
<td>Info</td>
</tr>
<tr>
<td>Warning</td>
</tr>
<tr>
<td>Error</td>
</tr>
</tbody></table>
<h1 id="PlacementType"><a href="#PlacementType" class="headerlink" title="PlacementType"></a>PlacementType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>LeftTop</td>
</tr>
<tr>
<td>Left</td>
</tr>
<tr>
<td>LeftBottom</td>
</tr>
<tr>
<td>TopLeft</td>
</tr>
<tr>
<td>Top</td>
</tr>
<tr>
<td>TopRight</td>
</tr>
<tr>
<td>RightTop</td>
</tr>
<tr>
<td>Right</td>
</tr>
<tr>
<td>RightBottom</td>
</tr>
<tr>
<td>BottomLeft</td>
</tr>
<tr>
<td>Bottom</td>
</tr>
<tr>
<td>BottomRight</td>
</tr>
</tbody></table>
<h1 id="ResultType"><a href="#ResultType" class="headerlink" title="ResultType"></a>ResultType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Success</td>
</tr>
<tr>
<td>Failed</td>
</tr>
<tr>
<td>None</td>
</tr>
</tbody></table>
<h1 id="ShowAnimation"><a href="#ShowAnimation" class="headerlink" title="ShowAnimation"></a>ShowAnimation</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>None</td>
</tr>
<tr>
<td>HorizontalMove</td>
</tr>
<tr>
<td>VerticalMove</td>
</tr>
<tr>
<td>Fade</td>
</tr>
</tbody></table>
<h1 id="SideMenuItemRole"><a href="#SideMenuItemRole" class="headerlink" title="SideMenuItemRole"></a>SideMenuItemRole</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Header</td>
</tr>
<tr>
<td>Item</td>
</tr>
</tbody></table>
<h1 id="StepStatus"><a href="#StepStatus" class="headerlink" title="StepStatus"></a>StepStatus</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Complete</td>
</tr>
<tr>
<td>UnderWay</td>
</tr>
<tr>
<td>Waiting</td>
</tr>
</tbody></table>
<h1 id="StrokePosition"><a href="#StrokePosition" class="headerlink" title="StrokePosition"></a>StrokePosition</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Center</td>
</tr>
<tr>
<td>Outside</td>
</tr>
<tr>
<td>Inside</td>
</tr>
</tbody></table>
<h1 id="TextType"><a href="#TextType" class="headerlink" title="TextType"></a>TextType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Common</td>
</tr>
<tr>
<td>Phone</td>
</tr>
<tr>
<td>Mail</td>
</tr>
<tr>
<td>Url</td>
</tr>
<tr>
<td>Chinese</td>
</tr>
<tr>
<td>Number</td>
</tr>
<tr>
<td>Digits</td>
</tr>
<tr>
<td>PInt</td>
</tr>
<tr>
<td>NInt</td>
</tr>
<tr>
<td>Int</td>
</tr>
<tr>
<td>NnInt</td>
</tr>
<tr>
<td>NpInt</td>
</tr>
<tr>
<td>PDouble</td>
</tr>
<tr>
<td>NDouble</td>
</tr>
<tr>
<td>Double</td>
</tr>
<tr>
<td>NnDouble</td>
</tr>
<tr>
<td>NpDouble</td>
</tr>
<tr>
<td>Persian</td>
</tr>
<tr>
<td>IranNationalCode</td>
</tr>
</tbody></table>
<h1 id="TitlePlacementType"><a href="#TitlePlacementType" class="headerlink" title="TitlePlacementType"></a>TitlePlacementType</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Left</td>
</tr>
<tr>
<td>Top</td>
</tr>
</tbody></table>
<h1 id="TransitionMode"><a href="#TransitionMode" class="headerlink" title="TransitionMode"></a>TransitionMode</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Right2Left</td>
</tr>
<tr>
<td>Left2Right</td>
</tr>
<tr>
<td>Bottom2Top</td>
</tr>
<tr>
<td>Top2Bottom</td>
</tr>
<tr>
<td>Right2LeftWithFade</td>
</tr>
<tr>
<td>Left2RightWithFade</td>
</tr>
<tr>
<td>Bottom2TopWithFade</td>
</tr>
<tr>
<td>Top2BottomWithFade</td>
</tr>
<tr>
<td>Fade</td>
</tr>
<tr>
<td>Custom</td>
</tr>
</tbody></table>
<h1 id="VisualWrapping"><a href="#VisualWrapping" class="headerlink" title="VisualWrapping"></a>VisualWrapping</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>NoWrap</td>
</tr>
<tr>
<td>Wrap</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Color</title>
    <url>/handycontrol/basic_xaml/colors/index.html</url>
    <content><![CDATA[<p>There are three built-in color xaml definitions, as described in the following table:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Colors.xaml</td>
<td>Default configuration</td>
</tr>
<tr>
<td>ColorsDark.xaml</td>
<td>Dark Configuration</td>
</tr>
<tr>
<td>ColorsViolet.xaml</td>
<td>Purple Configuration</td>
</tr>
</tbody></table>
<p>The same color name is defined in each file, except that the color values are different. The description of the color names is shown in the following table:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>PrimaryColor</td>
<td>Main Color</td>
</tr>
<tr>
<td>LightPrimaryColor</td>
<td>Main Color (Light)</td>
</tr>
<tr>
<td>DarkPrimaryColor</td>
<td>Main Color (Dark)</td>
</tr>
<tr>
<td>DangerColor</td>
<td>Error, danger</td>
</tr>
<tr>
<td>LightDangerColor</td>
<td>Error, danger (Light)</td>
</tr>
<tr>
<td>DarkDangerColor</td>
<td>Error, Danger (Dark)</td>
</tr>
<tr>
<td>WarningColor</td>
<td>Warning</td>
</tr>
<tr>
<td>LightWarningColor</td>
<td>Warning (Light)</td>
</tr>
<tr>
<td>DarkWarningColor</td>
<td>Warning (Dark)</td>
</tr>
<tr>
<td>InfoColor</td>
<td>Information</td>
</tr>
<tr>
<td>LightInfoColor</td>
<td>Information (Light)</td>
</tr>
<tr>
<td>DarkInfoColor</td>
<td>Information (Dark)</td>
</tr>
<tr>
<td>SuccessColor</td>
<td>Success</td>
</tr>
<tr>
<td>LightSuccessColor</td>
<td>Success (Light)</td>
</tr>
<tr>
<td>DarkSuccessColor</td>
<td>Success (Dark)</td>
</tr>
<tr>
<td>VioletColor</td>
<td>Main Color (Violet) <code>Only Custom Version</code></td>
</tr>
<tr>
<td>DarkVioletColor</td>
<td>Main Color (Violet) <code>Only Custom Version</code></td>
</tr>
<tr>
<td>PrimaryTextColor</td>
<td>Main Text</td>
</tr>
<tr>
<td>SecondaryTextColor</td>
<td>Secondary Text</td>
</tr>
<tr>
<td>ThirdlyTextColor</td>
<td>Last Text</td>
</tr>
<tr>
<td>ReverseTextColor</td>
<td>Inverted Text</td>
</tr>
<tr>
<td>TextIconColor</td>
<td>General for text or icons on a dark background</td>
</tr>
<tr>
<td>BorderColor</td>
<td>Border</td>
</tr>
<tr>
<td>SecondaryBorderColor</td>
<td>Secondary Border</td>
</tr>
<tr>
<td>BackgroundColor</td>
<td>Main Background Color</td>
</tr>
<tr>
<td>RegionColor</td>
<td>Block Background</td>
</tr>
<tr>
<td>SecondaryRegionColor</td>
<td>Secondary Block Background</td>
</tr>
<tr>
<td>ThirdlyRegionColor</td>
<td>Final Block Background</td>
</tr>
<tr>
<td>TitleColor</td>
<td>Title Background</td>
</tr>
<tr>
<td>SecondaryTitleColor</td>
<td>Subtitle Background</td>
</tr>
<tr>
<td>DefaultColor</td>
<td>Default Color</td>
</tr>
<tr>
<td>DarkDefaultColor</td>
<td>Secondary default color</td>
</tr>
<tr>
<td>AccentColor</td>
<td>Reminder</td>
</tr>
<tr>
<td>DarkAccentColor</td>
<td>Reminder (Dark)</td>
</tr>
<tr>
<td>DarkMaskColor</td>
<td>Use as a mask</td>
</tr>
<tr>
<td>DarkOpacityColor</td>
<td>Translucent Background</td>
</tr>
<tr>
<td>BlurGradientValue</td>
<td>Background for blurry windows only</td>
</tr>
<tr>
<td>MainContentForegroundColor</td>
<td><code>Only Custom Version</code></td>
</tr>
<tr>
<td>MainContentBackgroundColor</td>
<td><code>Only Custom Version</code></td>
</tr>
<tr>
<td>ForthlyRegionColor</td>
<td><code>Only Custom Version</code></td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example：<code>Color=&quot;{DynamicResource PrimaryColor}&quot;</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Args</title>
    <url>/handycontrol/data/Args/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>CancelRoutedEventArgs</td>
<td></td>
</tr>
<tr>
<td>FunctionEventArgs!1</td>
<td></td>
</tr>
<tr>
<td>KeyboardHookEventArgs</td>
<td></td>
</tr>
<tr>
<td>MouseHookEventArgs</td>
<td></td>
</tr>
</tbody></table>
<p>You can use <code>FunctionEventArgs!1</code> to create a custom event args</p>
<p>step 1: create a EventHandler</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">event</span> EventHandler&lt;FunctionEventArgs&lt;myArgument&gt;&gt; myEventChanged;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">myArgument</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> OldValue &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> NewValue &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>step2: Notify change where necessary</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">myEventChanged?.Invoke(<span class="keyword">this</span>, <span class="keyword">new</span> FunctionEventArgs&lt;myArgument&gt;(OldValue = <span class="string">&quot;Old&quot;</span>, NewValue = <span class="string">&quot;New&quot;</span>));</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>GlowWindow</title>
    <url>/handycontrol/data/GlowWindow/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ChangeScope</td>
<td>Internal</td>
</tr>
<tr>
<td>GlowBitmap</td>
<td>Internal</td>
</tr>
<tr>
<td>GlowBitmapPart</td>
<td>Internal</td>
</tr>
<tr>
<td>GlowDrawingContext</td>
<td>Internal</td>
</tr>
<tr>
<td>GlowEdge</td>
<td>Internal</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Info</title>
    <url>/handycontrol/data/Info/index.html</url>
    <content><![CDATA[<div class="note info no-icon">
            <p>class</p>
          </div>

<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>GrowlInfo</td>
<td></td>
</tr>
<tr>
<td>ImageCodecInfo</td>
<td>Internal</td>
</tr>
<tr>
<td>MessageBoxInfo</td>
<td></td>
</tr>
<tr>
<td>SystemVersionInfo</td>
<td></td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Growl message initialization model</p>
          </div>

<table>
<thead>
<tr>
<th>Member Name</th>
<th>Type</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>
<tbody><tr>
<td>Message</td>
<td>string</td>
<td>Notification content</td>
<td>-</td>
</tr>
<tr>
<td>ShowDateTime</td>
<td>bool</td>
<td>Whether to show notification time</td>
<td>true</td>
</tr>
<tr>
<td>ShowPersianDateTime</td>
<td>bool</td>
<td>Whether to show notification persian date time (Only available in Custom Version)</td>
<td>false</td>
</tr>
<tr>
<td>FlowDirection</td>
<td>FlowDirection</td>
<td>(Only available in Custom Version)</td>
<td>LeftToRight</td>
</tr>
<tr>
<td>Time</td>
<td>int</td>
<td>Waiting for automatic shutdown time</td>
<td>6</td>
</tr>
<tr>
<td>CancelStr</td>
<td>string</td>
<td>Cancel String</td>
<td>Lang.Cancel</td>
</tr>
<tr>
<td>ConfirmStr</td>
<td>string</td>
<td>Confirm String</td>
<td>Lang.Confirm</td>
</tr>
<tr>
<td>ActionBeforeClose</td>
<td>Func&lt;bool, bool&gt;</td>
<td>Delegate before closing</td>
<td>-</td>
</tr>
<tr>
<td>StaysOpen</td>
<td>bool</td>
<td>Keep open</td>
<td>false</td>
</tr>
<tr>
<td>IsCustom</td>
<td>bool</td>
<td>Whether to customize behavior</td>
<td>false</td>
</tr>
<tr>
<td>Type</td>
<td>InfoType</td>
<td>Message Type</td>
<td>InfoType.Success</td>
</tr>
<tr>
<td>Icon</td>
<td>string</td>
<td>Icon key name</td>
<td>-</td>
</tr>
<tr>
<td>IconBrush</td>
<td>string</td>
<td>Icon Paint Key Name</td>
<td>-</td>
</tr>
<tr>
<td>ShowCloseButton</td>
<td>bool</td>
<td>Whether to show the close button</td>
<td>true</td>
</tr>
<tr>
<td>Token</td>
<td>string</td>
<td>Message tag</td>
<td>-</td>
</tr>
<tr>
<td>GrowlParent</td>
<td>bool</td>
<td>set Growl Panel</td>
<td>false</td>
</tr>
</tbody></table>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><div class="note info no-icon">
            <p>What should I fill in Icon and IconBrush here?</p>
          </div>

<p>Icon must fill in the Key name of the resource type <code>Geometry</code>, for example, the following resource, its Key name <code>GitterGeometry</code> can be used as Icon:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Geometry</span> <span class="attr">x:Key</span>=<span class="string">&quot;GitterGeometry&quot;</span>&gt;</span>M260.8 645H160V0h100.8v645zM461.8 152.2h-100.8V1024h100.8V152.2z m201.2 0h-100.8V1024h100.8V152.2zM864 152h-100.8v494H864V152z<span class="tag">&lt;/<span class="name">Geometry</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>IconBrushKey must be filled with the Key name of the resource type <code>Brush</code>, such as the following resource, its Key name <code>ToolBarBackground</code> can be used as IconBrushKey:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearGradientBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;ToolBarBackground&quot;</span> <span class="attr">EndPoint</span>=<span class="string">&quot;0.5,1&quot;</span> <span class="attr">StartPoint</span>=<span class="string">&quot;0.5,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">&quot;#F5F4F5&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">&quot;#D1CFD1&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearGradientBrush</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Operation</title>
    <url>/handycontrol/data/Operation/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>OperationResult</td>
<td></td>
</tr>
<tr>
<td>OperationResult!1</td>
<td>OperationResult<T> : OperationResult</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Range</title>
    <url>/handycontrol/data/Range/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ColorRange</td>
<td></td>
</tr>
<tr>
<td>DateTimeRange</td>
<td></td>
</tr>
<tr>
<td>DoubleRange</td>
<td></td>
</tr>
<tr>
<td>IValueRange</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Media</title>
    <url>/handycontrol/expression/Media/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ArcGeometrySource</td>
<td>Internal</td>
</tr>
<tr>
<td>DrawingPropertyChangedEventArgs</td>
<td></td>
</tr>
<tr>
<td>DrawingPropertyMetadata</td>
<td>Internal</td>
</tr>
<tr>
<td>DrawingPropertyMetadataOptions</td>
<td>Internal</td>
</tr>
<tr>
<td>GeometryEffect</td>
<td></td>
</tr>
<tr>
<td>GeometryEffectConverter</td>
<td></td>
</tr>
<tr>
<td>GeometrySource!1</td>
<td></td>
</tr>
<tr>
<td>IArcGeometrySourceParameters</td>
<td></td>
</tr>
<tr>
<td>IGeometrySource</td>
<td></td>
</tr>
<tr>
<td>IGeometrySourceExtensions</td>
<td>Internal</td>
</tr>
<tr>
<td>IGeometrySourceParameters</td>
<td></td>
</tr>
<tr>
<td>InvalidateGeometryReasons</td>
<td></td>
</tr>
<tr>
<td>IShape</td>
<td></td>
</tr>
<tr>
<td>SketchGeometryEffect</td>
<td></td>
</tr>
<tr>
<td>UnitType</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Shapes</title>
    <url>/handycontrol/expression/Shapes/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Arc</td>
<td></td>
</tr>
<tr>
<td>PrimitiveShape</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Arc</span> <span class="attr">StartAngle</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;None&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;20&quot;</span> <span class="attr">StrokeDashArray</span>=<span class="string">&quot;.25&quot;</span> <span class="attr">EndAngle</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Drawing</title>
    <url>/handycontrol/expression/Drawing/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>BezierCurveFlattener</td>
<td>Internal</td>
</tr>
<tr>
<td>ExceptionStringTable</td>
<td>Internal</td>
</tr>
<tr>
<td>GeometryHelper</td>
<td></td>
</tr>
<tr>
<td>MarchLocation</td>
<td>Internal</td>
</tr>
<tr>
<td>MarchStopReason</td>
<td>Internal</td>
</tr>
<tr>
<td>MathHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>PathFigureHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>PathGeometryHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>PathSegmentData</td>
<td>Internal</td>
</tr>
<tr>
<td>PathSegmentHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>PolylineData</td>
<td>Internal</td>
</tr>
<tr>
<td>PolylineHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>RandomEngine</td>
<td>Internal</td>
</tr>
<tr>
<td>SimpleSegment</td>
<td>Internal</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Badge</title>
    <url>/handycontrol/extend_controls/badge/index.html</url>
    <content><![CDATA[<p>The badge control, as a specific state content badge of other controls, can minimize the invasion of the original control. It can be regarded as a content control. The internal <code>Content</code> is the modified control corresponding to the badge that needs to be displayed. The inheritance relationship is as follows:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Badge</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Badge.gif" alt="Badge"></p>
<h1 id="Basic-attributes"><a href="#Basic-attributes" class="headerlink" title="Basic attributes"></a>Basic attributes</h1><table>
<thead>
<tr>
<th>Property Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Text</td>
<td>Gets or sets the badge display content</td>
</tr>
<tr>
<td>Value</td>
<td>Get or set display value, support dynamic change of value</td>
</tr>
<tr>
<td>Status</td>
<td>Gets or sets the type of tag status, Text (Dot), Processing (Dynamic Tag) defaults to text display</td>
</tr>
<tr>
<td>Maximum</td>
<td>Gets or sets the maximum display value. When the value is displayed, the maximum value is displayed</td>
</tr>
<tr>
<td>BadgeMargin</td>
<td>Gets or sets the margin of the badge relative to the decorated control</td>
</tr>
<tr>
<td>ShowBadge</td>
<td>Gets or sets whether to display the flag, the default is True</td>
</tr>
</tbody></table>
<p>In <code>xaml</code>, remember to introduce the <code>handycontrol</code> namespace</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;</span><br></pre></td></tr></table></figure>
<h2 id="Text-and-Value"><a href="#Text-and-Value" class="headerlink" title="Text and Value"></a><code>Text</code> and <code>Value</code></h2><p>You may be confused when you see the property explanation. <code>Text</code> and <code>Value</code> have the same effect and value. What is the difference? In the markup control, the text and numeric types are distinguished. The numeric types can be dynamically changed and the data statistics displayed. When both are present at the same time, <code>Text</code> is displayed by default.</p>
<h3 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Value</span>=<span class="string">&quot;12&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;New&quot;</span> <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Default style&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Value</span>=<span class="string">&quot;12&quot;</span> <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Default style&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="effect"><a href="#effect" class="headerlink" title="effect"></a>effect</h3><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Badge-TextValue.png" alt="Badge-TextValue"></p>
<h2 id="Maximum"><a href="#Maximum" class="headerlink" title="Maximum"></a><code>Maximum</code></h2><p>Use the <code>Value</code> property to add the maximum display value to limit the maximum display effect of the badge display</p>
<h3 id="Case-1"><a href="#Case-1" class="headerlink" title="Case"></a>Case</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Value</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;99&quot;</span> <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Maximum&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;99&quot;</span> <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Maximum&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="effect-1"><a href="#effect-1" class="headerlink" title="effect"></a>effect</h3><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Badge-Maximum.png" alt="Badge-Maximum"></p>
<h2 id="Status"><a href="#Status" class="headerlink" title="Status"></a><code>Status</code></h2><p>badge status type, divided into three types, default is text display</p>
<h3 id="Case-2"><a href="#Case-2" class="headerlink" title="Case"></a>Case</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Status</span>=<span class="string">&quot;Text&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;text&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeSuccess&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Status</span>=<span class="string">&quot;Dot&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeSuccess&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Dot&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Status</span>=<span class="string">&quot;Processing&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeSuccess&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Processing&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="effect-2"><a href="#effect-2" class="headerlink" title="effect"></a>effect</h3><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Badge-Status.png" alt="Badge-Status"></p>
<h2 id="BadgeMargin"><a href="#BadgeMargin" class="headerlink" title="BadgeMargin"></a><code>BadgeMargin</code></h2><p><code>BadgeMargin</code> is used to set the margin relative to the decorated control. Generally, this property is not modified. It is recommended to use <code>0, -14, -20,0</code></p>
<h3 id="Case-3"><a href="#Case-3" class="headerlink" title="Case"></a>Case</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeSuccess&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;BadgeMargin&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">BadgeMargin</span>=<span class="string">&quot;30,0,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeSuccess&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;BadgeMargin&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="effect-3"><a href="#effect-3" class="headerlink" title="effect"></a>effect</h3><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Badge-BadgeMargin.png" alt="Badge-BadgeMargin"></p>
<h1 id="event"><a href="#event" class="headerlink" title="event"></a>event</h1><table>
<thead>
<tr>
<th>event</th>
<th>use</th>
</tr>
</thead>
<tbody><tr>
<td><code>ValueChanged </code></td>
<td>Trigger event after value change</td>
</tr>
</tbody></table>
<h1 id="Related-styles"><a href="#Related-styles" class="headerlink" title="Related styles"></a>Related styles</h1><table>
<thead>
<tr>
<th>Style name</th>
<th>use</th>
<th>Inherited style</th>
</tr>
</thead>
<tbody><tr>
<td>BadgeBaseStyle</td>
<td>Default style, used as BaseOn inheritance</td>
<td>-</td>
</tr>
<tr>
<td>BadgePrimary</td>
<td>Theme color badge style</td>
<td>BadgeBaseStyle</td>
</tr>
<tr>
<td>BadgeSuccess</td>
<td>Success color badge style</td>
<td>BadgeBaseStyle</td>
</tr>
<tr>
<td>BadgeInfo</td>
<td>Information color badge style</td>
<td>BadgeBaseStyle</td>
</tr>
<tr>
<td>BadgeWarning</td>
<td>Warning color badge style</td>
<td>BadgeBaseStyle</td>
</tr>
<tr>
<td>BadgeDanger</td>
<td>Anomalous badge style</td>
<td>BadgeBaseStyle</td>
</tr>
</tbody></table>
<h2 id="Case-4"><a href="#Case-4" class="headerlink" title="Case"></a>Case</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Default&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgePrimary&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Primary&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeInfo&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Info&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeSuccess&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Success&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeWarning&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Warning&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgeDanger&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Danger&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="effect-4"><a href="#effect-4" class="headerlink" title="effect"></a>effect</h2><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Badge-Styles.png" alt="Badge-Styles"></p>
<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><h2 id="Coordinate-offset-problem-version-less-than-or-equal-to-2-4"><a href="#Coordinate-offset-problem-version-less-than-or-equal-to-2-4" class="headerlink" title="Coordinate offset problem [version less than or equal to 2.4]"></a>Coordinate offset problem [version less than or equal to 2.4]</h2><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>When the parent container is not the default arrangement of <code>stackpanel</code>, the badge and decorated control are offset</p>
<h3 id="status-quo"><a href="#status-quo" class="headerlink" title="status quo"></a>status quo</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Default&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgePrimary&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Primary&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Badge-Error01.png" alt="Badge-Error01"></p>
<h3 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h3><p>Set the properties <code>VerticalAlignment</code> and<code> HorizontalAlignment</code> in the property <code>Badge</code> to <code>Center</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Default&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:Badge</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>  <span class="attr">BadgeMargin</span>=<span class="string">&quot;0,-14,-20,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource BadgePrimary&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Primary&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Badge</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Badge-ErrorCorrection01.png" alt="Badge-ErrorCorrection01"></p>
]]></content>
  </entry>
  <entry>
    <title>AutoCompleteTextBox</title>
    <url>/handycontrol/extend_controls/autoCompleteTextBox/index.html</url>
    <content><![CDATA[<p>The AutoCompleteTextBox is similar to TextBox with auto complete behavior.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AutoCompleteTextBox</span> : <span class="title">ComboBox</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:AutoCompleteTextBox</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Items&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding SearchText&#125;&quot;</span> <span class="attr">DisplayMemberPath</span>=<span class="string">&quot;Name&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/AutoCompleteTextBox.gif" alt="AutoCompleteTextBox"></p>
]]></content>
  </entry>
  <entry>
    <title>AnimationPath</title>
    <url>/handycontrol/extend_controls/animationPath/index.html</url>
    <content><![CDATA[<p><code>AnimationPath</code> Set the data for the geometry of the <code>Geometry</code> that derived as <code>PathGeometry</code>, <code>LineGeometry</code> to achieve a fixed path animation effect</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimationPath</span> : <span class="title">Shape</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><h2 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h2><p>Geometry data to be displayed for the animation path</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Geometry</span> <span class="attr">x:Key</span>=<span class="string">&quot;GithubGeometry&quot;</span>&gt;</span>M512 0C229.12 0 0 229.12 0 512c0 226.56 146.56 417.92 350.08 485.76 25.6 4.48 35.2-10.88 35.2-24.32 0-12.16-0.64-52.48-0.64-95.36-128.64 23.68-161.92-31.36-172.16-60.16-5.76-14.72-30.72-60.16-52.48-72.32-17.92-9.6-43.52-33.28-0.64-33.92 40.32-0.64 69.12 37.12 78.72 52.48 46.08 77.44 119.68 55.68 149.12 42.24 4.48-33.28 17.92-55.68 32.64-68.48-113.92-12.8-232.96-56.96-232.96-252.8 0-55.68 19.84-101.76 52.48-137.6-5.12-12.8-23.04-65.28 5.12-135.68 0 0 42.88-13.44 140.8 52.48 40.96-11.52 84.48-17.28 128-17.28 43.52 0 87.04 5.76 128 17.28 97.92-66.56 140.8-52.48 140.8-52.48 28.16 70.4 10.24 122.88 5.12 135.68 32.64 35.84 52.48 81.28 52.48 137.6 0 196.48-119.68 240-233.6 252.8 18.56 16 34.56 46.72 34.56 94.72 0 68.48-0.64 123.52-0.64 140.8 0 13.44 9.6 29.44 35.2 24.32A512.832 512.832 0 0 0 1024 512c0-282.88-229.12-512-512-512z<span class="tag">&lt;/<span class="name">Geometry</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:AnimationPath</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;DynamicResource GithubGeometry&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">                          <span class="attr">Duration</span>=<span class="string">&quot;00:00:05&quot;</span> </span></span><br><span class="line"><span class="tag">                          <span class="attr">Stretch</span>=<span class="string">&quot;Uniform&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">Stroke</span>=<span class="string">&quot;Black&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hc:AnimationPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/AnimationPath-Default.gif" alt="Animation-Default"></p>
<h2 id="PathLength"><a href="#PathLength" class="headerlink" title="PathLength"></a>PathLength</h2><p>The default is 0 and the property is set to 50. The effect is as follows:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/AnimationPath-PathLength.gif" alt="AnimationPath-PathLength"></p>
<h2 id="Duration"><a href="#Duration" class="headerlink" title="Duration"></a>Duration</h2><p>Path animation execution interval. This property must be set, otherwise the animation path effect will not be displayed.</p>
<h2 id="IsPlaying"><a href="#IsPlaying" class="headerlink" title="IsPlaying"></a>IsPlaying</h2><p>Determines the current animation playback status, which is often used as the control behavior identification flag of the control. This property can be used to pause the path animation.</p>
<h2 id="RepeatBehavior"><a href="#RepeatBehavior" class="headerlink" title="RepeatBehavior"></a>RepeatBehavior</h2><p>Set the animation repeat behavior, the default is <code>Forever</code>, you can set the repeat behavior as needed.</p>
<h2 id="FillBehavior"><a href="#FillBehavior" class="headerlink" title="FillBehavior"></a>FillBehavior</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">FillBehavior=<span class="string">&quot;HoldEnd&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Inherited-from-the-common-properties-of-Shape"><a href="#Inherited-from-the-common-properties-of-Shape" class="headerlink" title="Inherited from the common properties of Shape"></a>Inherited from the common properties of Shape</h2><table>
<thead>
<tr>
<th>Property Name</th>
<th>Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>Stretch</td>
<td>Stretch properties</td>
</tr>
<tr>
<td>StrokeThickness</td>
<td>Edge width</td>
</tr>
</tbody></table>
<h1 id="Related-events"><a href="#Related-events" class="headerlink" title="Related events"></a>Related events</h1><h2 id="Completed"><a href="#Completed" class="headerlink" title="Completed"></a>Completed</h2><p>This event is fired when the animation is complete.</p>
]]></content>
  </entry>
  <entry>
    <title>BlurWindow</title>
    <url>/handycontrol/extend_controls/blurWindow/index.html</url>
    <content><![CDATA[<p>The background blur window can be used to enhance the UI effect, but it will sacrifice some performance.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BlurWindow</span> : <span class="title">Window</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>Operating system support : windows 10</p>
          </div>
<div class="note warning">
            <p>Rewrite the resource <code>BlurGradientValue</code> to customize the blur color</p>
          </div>

<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">system:UInt32</span> <span class="attr">x:Key</span>=<span class="string">&quot;BlurGradientValue&quot;</span>&gt;</span>0x99FFFFFF<span class="tag">&lt;/<span class="name">system:UInt32</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:BlurWindow</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.Window.BlurWindow&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Title</span>=<span class="string">&quot;Title&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Height</span>=<span class="string">&quot;450&quot;</span> </span></span><br><span class="line"><span class="tag">               <span class="attr">Width</span>=<span class="string">&quot;800&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:BlurWindow</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/BlurWindow.gif" alt="BlurWindow"></p>
]]></content>
  </entry>
  <entry>
    <title>ButtonGroup</title>
    <url>/handycontrol/extend_controls/buttonGroup/index.html</url>
    <content><![CDATA[<h1 id="RadioGroupItemBaseStyle"><a href="#RadioGroupItemBaseStyle" class="headerlink" title="RadioGroupItemBaseStyle"></a>RadioGroupItemBaseStyle</h1><p>Subset <code>RadioButton</code> style base class in <code>ButtonGroup</code> control. It is not recommended to use it directly. It is often used as <code>Item</code> style base class in <code>ButtonGroup</code>. It is also used in conjunction with <code>ButtonGroup</code> control.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--The internal Item style is automatically attached by the ButtonGroup control-the default is the horizontal item style--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:ButtonGroup</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:ButtonGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:ButtonGroup</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonGroupSolid&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:ButtonGroup</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/RadioButton.RadioButtonItemDefaultStyle.png" alt="RadioButton.RadioButtonItemDefaultStyle"></p>
<h1 id="RadioGroup-association-style"><a href="#RadioGroup-association-style" class="headerlink" title="RadioGroup association style"></a>RadioGroup association style</h1><table>
<thead>
<tr>
<th>Style Key</th>
<th>use</th>
<th>Base class style</th>
</tr>
</thead>
<tbody><tr>
<td>RadioGroupItemDefault</td>
<td>RadioGroupItem default style</td>
<td>RadioGroupItemBaseStyle</td>
</tr>
<tr>
<td>RadioGroupItemHorizontalFirst</td>
<td>RadioGroupItem horizontal head style (from left to right)</td>
<td>RadioGroupItemBaseStyle</td>
</tr>
<tr>
<td>RadioGroupItemHorizontalLast</td>
<td>RadioGroupItem horizontal tail style (from left to right)</td>
<td>RadioGroupItemBaseStyle</td>
</tr>
<tr>
<td>RadioGroupItemSingle</td>
<td>RadioGroupItem single item style</td>
<td>RadioGroupItemBaseStyle</td>
</tr>
<tr>
<td>RadioGroupItemVerticalFirst</td>
<td>RadioGroupItem vertical header style (from top to bottom)</td>
<td>RadioGroupItemBaseStyle</td>
</tr>
<tr>
<td>RadioGroupItemVerticalLast</td>
<td>RadioGroupItem vertical tail style (from top to bottom)</td>
<td>RadioGroupItemBaseStyle</td>
</tr>
</tbody></table>
<p>Case:</p>
<p>Single <code>RadioButton</code> style:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource RadioGroupItemSingle&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">Margin</span>=<span class="string">&quot;0,16,8,0&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">Content</span>=<span class="string">&quot;RadioGroupItemSingle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">RadioButton</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/RadioButton.RadioButtonItemSingleStyle.png" alt="RadioButton.RadioButtonItemSingleStyle"></p>
<p>Multiple <code>RadioButton</code> vertical styles:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ButtonGroup</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,8,0&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ButtonGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ButtonGroup</span> <span class="attr">Margin</span>=<span class="string">&quot;8,16,0,0&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonGroupSolid&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ButtonGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/RadioButton.RadioButtonItemVerticalStyle.png" alt="RadioButton.RadioButtonItemVerticalStyle"></p>
]]></content>
  </entry>
  <entry>
    <title>Gif</title>
    <url>/handycontrol/data/Gif/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>GifFrameDimension</td>
<td>Internal</td>
</tr>
<tr>
<td>GifImageInfo</td>
<td></td>
</tr>
<tr>
<td>GifPropertyItem</td>
<td></td>
</tr>
<tr>
<td>GifPropertyItemInternal</td>
<td></td>
</tr>
<tr>
<td>GPStream</td>
<td>Internal</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Card</title>
    <url>/handycontrol/extend_controls/card/index.html</url>
    <content><![CDATA[<p>It is used to display data in a card. It is a derived class of <code>ContentControl</code>.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Card</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>use</th>
</tr>
</thead>
<tbody><tr>
<td>Header</td>
<td>Card header content for displaying synchronized text</td>
</tr>
<tr>
<td>HeaderTemplate</td>
<td>Card header template</td>
</tr>
<tr>
<td>HeaderTemplateSelector</td>
<td>Card template style selector</td>
</tr>
<tr>
<td>HeaderStringFormat</td>
<td>Card header template content display format</td>
</tr>
<tr>
<td>Footer</td>
<td>Card footer content</td>
</tr>
<tr>
<td>FooterTemplate</td>
<td>Card footer template</td>
</tr>
<tr>
<td>FooterTemplateSelector</td>
<td>Card footer Style Selector</td>
</tr>
<tr>
<td>FooterStringFormat</td>
<td>Card footer content display format</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><h2 id="Single-card-use"><a href="#Single-card-use" class="headerlink" title="Single card use"></a>Single card use</h2><h3 id="xamlUse"><a href="#xamlUse" class="headerlink" title="xamlUse"></a><code>xaml</code>Use</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Card</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;240&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;DynamicResource EffectShadow2&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Card Content section--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4,4,0,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;160&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;160&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;Wrap&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;test&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Card Footer part--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Card.Footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;160&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Card First-level content--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;NoWrap&quot;</span>  <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">TextTrimming</span>=<span class="string">&quot;CharacterEllipsis&quot;</span> </span></span><br><span class="line"><span class="tag">                                       <span class="attr">Text</span>=<span class="string">&quot;Title&quot;</span> </span></span><br><span class="line"><span class="tag">                                       <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Card Secondary content--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;NoWrap&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource TextBlockDefault&#125;&quot;</span> <span class="attr">TextTrimming</span>=<span class="string">&quot;CharacterEllipsis&quot;</span> </span></span><br><span class="line"><span class="tag">                                       <span class="attr">Text</span>=<span class="string">&quot;Description&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span></span></span><br><span class="line"><span class="tag">                                       <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Card.Footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Card</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="effect"><a href="#effect" class="headerlink" title="effect"></a>effect</h3><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Card-SampleCase.png" alt="Card-SampleCase"></p>
<h2 id="As-a-data-template"><a href="#As-a-data-template" class="headerlink" title="As a data template"></a>As a data template</h2><h3 id="type-of-data"><a href="#type-of-data" class="headerlink" title="type of data"></a>type of data</h3><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CardModel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Header &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Content &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Footer &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="View-entity"><a href="#View-entity" class="headerlink" title="View entity"></a>View entity</h3><p>This entity is not designed according to the standard <code>mvvm</code> method, but is only used as a display for ordinary data sources.</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CardDemoViewModel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> IList&lt;CardModel&gt; _dataList;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CardDemoViewModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        DataList = GetCardDataList();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">internal</span> ObservableCollection&lt;CardModel&gt; <span class="title">GetCardDataList</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ObservableCollection&lt;CardModel&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Atomic&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;1.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Stive Morgan&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Zinderlong&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;2.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Zonderling&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Busy Doin&#x27; Nothin&#x27;&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;3.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Ace Wilder&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Wrong&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;4.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Blaxy Girls&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;The Lights&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;5.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Panda Eyes&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;EA7-50-Cent Disco&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;6.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;еяхат музыка&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Monsters&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;7.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Different Heaven&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Gangsta Walk&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;8.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Illusionize&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Won&#x27;t Back Down&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;9.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Boehm&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> CardModel</span><br><span class="line">            &#123;</span><br><span class="line">                Header = <span class="string">&quot;Katchi&quot;</span>,</span><br><span class="line">                Content = <span class="string">&quot;10.jpg&quot;</span>,</span><br><span class="line">                Footer = <span class="string">&quot;Ofenbach&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> IList&lt;CardModel&gt; DataList &#123; <span class="keyword">get</span> =&gt; _dataList; <span class="keyword">set</span> =&gt; _dataList = <span class="keyword">value</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="xamlUse-1"><a href="#xamlUse-1" class="headerlink" title="xamlUse"></a><code>xaml</code>Use</h3><p><code>handycontrol</code> namespace and <code>DataContext</code> need to be introduced by themselves</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;</span><br><span class="line">xmlns:data=&quot;CardModel namespace&quot;</span><br><span class="line">xmlns:vm=&quot;CardDemoViewModel namespace&quot;</span><br><span class="line">........</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Used in the parent of listbox--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">listbox.Resources</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">vm:CardDemoViewModel</span> <span class="attr">x:Key</span>=<span class="string">&quot;Card&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">vm:CardDemoViewModel</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">listbox.Resources</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">listbox.DataContext</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;StaticResource Card&#125;&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">listbox.DataContext</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource WrapPanelHorizontalListBox&#125;&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataTemplate</span> <span class="attr">DataType</span>=<span class="string">&quot;data:CardModel&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Card</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;240&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;DynamicResource EffectShadow2&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Footer</span>=<span class="string">&quot;&#123;Binding Footer&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--Card Content section template--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4,4,0,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;160&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;160&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;Wrap&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Content&#125;&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--Card Footer section template--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hc:Card.FooterTemplate</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;160&quot;</span>&gt;</span></span><br><span class="line">                                <span class="comment">&lt;!--Card First-level content--&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;NoWrap&quot;</span>  <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">TextTrimming</span>=<span class="string">&quot;CharacterEllipsis&quot;</span> </span></span><br><span class="line"><span class="tag">                                           <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding DataContext.Header,RelativeSource=&#123;RelativeSource AncestorType=hc:Card&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">                                           <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                                <span class="comment">&lt;!--Card Secondary content--&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;NoWrap&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource TextBlockDefault&#125;&quot;</span> <span class="attr">TextTrimming</span>=<span class="string">&quot;CharacterEllipsis&quot;</span> </span></span><br><span class="line"><span class="tag">                                           <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span></span></span><br><span class="line"><span class="tag">                                           <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">hc:Card.FooterTemplate</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">hc:Card</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="effect-1"><a href="#effect-1" class="headerlink" title="effect"></a>effect</h3><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Card-Case01.png" alt="Card-Case01"></p>
]]></content>
  </entry>
  <entry>
    <title>Carousel</title>
    <url>/handycontrol/extend_controls/carousel/index.html</url>
    <content><![CDATA[<p>Carousel control allows you to display the Data in a proper way and navigate between them.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Carousel</span> : <span class="title">SimpleItemsControl</span>, <span class="title">IDisposable</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>AutoRun</td>
<td>Whether to rotate automatically</td>
</tr>
<tr>
<td>IsCenter</td>
<td>Whether the carousel item is displayed in the center</td>
</tr>
<tr>
<td>PageButtonStyle</td>
<td>Page button style</td>
</tr>
<tr>
<td>Interval</td>
<td>Carousel interval time</td>
</tr>
<tr>
<td>ExtendWidth</td>
<td>Item content expansion width</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><h2 id="Show-filled-carousel-items"><a href="#Show-filled-carousel-items" class="headerlink" title="Show filled carousel items"></a>Show filled carousel items</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Carousel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">IsCenter</span>=<span class="string">&quot;True&quot;</span> <span class="attr">AutoRun</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;330&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;UniformToFill&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/1.jpg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;UniformToFill&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/2.jpg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Stretch</span>=<span class="string">&quot;UniformToFill&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/3.jpg&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Demo Text&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;100&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;UniformToFill&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/4.jpg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;UniformToFill&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/5.jpg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Carousel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Carousel.gif" alt="Carousel"></p>
<h2 id="Use-bindings-to-generate-carousel-items"><a href="#Use-bindings-to-generate-carousel-items" class="headerlink" title="Use bindings to generate carousel items"></a>Use bindings to generate carousel items</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Carousel</span> <span class="attr">AutoRun</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Images&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Carousel.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;Binding&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Carousel.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Carousel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p><code>ExtendWidth</code> It will extend a certain distance after the last carousel item. Please note that this is not the concept of offset, but the concept of extension.</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>ChatBubble</title>
    <url>/handycontrol/extend_controls/chatBubble/index.html</url>
    <content><![CDATA[<p>Dialogue bubbles often appear in communication software. Compared with the contextual dialogue in the form of plain text, the use of dialogue bubbles can make the chat interface more vivid and interesting. Through extension, bubble skin can also be made, which can make the software personalized functions more abundant.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChatBubble</span> : <span class="title">SelectableItem</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Role</td>
<td>Dialogue role</td>
</tr>
<tr>
<td>Type</td>
<td>Message type</td>
</tr>
<tr>
<td>IsRead</td>
<td>Read</td>
</tr>
<tr>
<td>ReadAction</td>
<td>Triggered when the bubble is selected</td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Event</th>
</tr>
</thead>
<tbody><tr>
<td>hc:ChatBubble.Selected</td>
</tr>
<tr>
<td>hc:ChatBubble.Deselected</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ChatBubble.png" alt="ChatBubble"></p>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><p>example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Name</span>=<span class="string">&quot;ListBoxChat&quot;</span> <span class="attr">ScrollViewer.HorizontalScrollBarVisibility</span>=<span class="string">&quot;Disabled&quot;</span> <span class="attr">ScrollViewer.CanContentScroll</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Transparent&quot;</span> <span class="attr">hc:ChatBubble.MaxWidth</span>=<span class="string">&quot;300&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource StackPanelVerticalListBox&#125;&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding ChatInfos&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:ChatBubble</span> <span class="attr">Role</span>=<span class="string">&quot;&#123;Binding Role&#125;&quot;</span> <span class="attr">Type</span>=<span class="string">&quot;&#123;Binding Type&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding Message&#125;&quot;</span> <span class="attr">Tag</span>=<span class="string">&quot;&#123;Binding&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>we need to create a model called <code>ChatInfoModel</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> ChatInfoModel</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">object</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> SenderId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> ChatRoleType Role &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> ChatMessageType Type &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">object</span> Enclosure &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>we need a list for holding our items:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ObservableCollection</span>&lt;<span class="title">ChatInfoModel</span>&gt; ChatInfos</span> &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="keyword">new</span> ObservableCollection&lt;ChatInfoModel&gt;();</span><br></pre></td></tr></table></figure>
<p>for sending string chat:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> info = <span class="keyword">new</span> ChatInfoModel</span><br><span class="line">&#123;</span><br><span class="line">    Message = <span class="string">&quot;Hello&quot;</span>,</span><br><span class="line">    SenderId = _id,</span><br><span class="line">    Type = ChatMessageType.String,</span><br><span class="line">    Role = ChatRoleType.Sender</span><br><span class="line">&#125;;</span><br><span class="line">ChatInfos.Add(info);</span><br></pre></td></tr></table></figure>
<p>sending image:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dialog = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line">    <span class="keyword">if</span> (dialog.ShowDialog() == <span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> fileName = dialog.FileName;</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(fileName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> info = <span class="keyword">new</span> ChatInfoModel</span><br><span class="line">            &#123;</span><br><span class="line">                Message = BitmapFrame.Create(<span class="keyword">new</span> Uri(fileName)),</span><br><span class="line">                SenderId = _id,</span><br><span class="line">                Type = ChatMessageType.Image,</span><br><span class="line">                Role = ChatRoleType.Sender,</span><br><span class="line">                Enclosure = fileName</span><br><span class="line">            &#125;;</span><br><span class="line">            ChatInfos.Add(info);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>sending audio:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> info = <span class="keyword">new</span> ChatInfoModel</span><br><span class="line">    &#123;</span><br><span class="line">        Message = <span class="string">&quot;Audio&quot;</span>,</span><br><span class="line">        SenderId = _id,</span><br><span class="line">        Type = ChatMessageType.Audio,</span><br><span class="line">        Role = ChatRoleType.Sender,</span><br><span class="line">        Enclosure = fileName</span><br><span class="line">    &#125;;</span><br><span class="line">    ChatInfos.Add(info);</span><br></pre></td></tr></table></figure>
<p>for reading audio and image message we need to create a event called <code>hc:ChatBubble.Selected</code>:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Name</span>=<span class="string">&quot;ListBoxChat&quot;</span> <span class="attr">hc:ChatBubble.Selected</span>=<span class="string">&quot;ListBoxChat_Selected&quot;</span><span class="attr">...</span></span></span><br></pre></td></tr></table></figure>
<p>now in <code>hc:ChatBubble.Selected</code> event:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ListBoxChat_Selected</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.OriginalSource <span class="keyword">is</span> FrameworkElement element &amp;&amp; element.Tag <span class="keyword">is</span> ChatInfoModel info)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (info.Type == ChatMessageType.Image)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">new</span> ImageBrowser(<span class="keyword">new</span> Uri(info.Enclosure.ToString()))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Owner = WindowHelper.GetActiveWindow()</span><br><span class="line">                    &#125;.Show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (info.Type == ChatMessageType.Audio)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> player = <span class="keyword">new</span> SoundPlayer(info.Enclosure.ToString());</span><br><span class="line">                    player.PlaySync();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<div class="note info">
            <ul><li>You must specify the <code>ChatRoleType</code> to specify the <code>Receiver</code> and <code>Sender</code></li><li>You must specify the <code>ChatMessageType</code> to specify the <code>Message Type</code> (String, Image, Audio, Custom)</li></ul>
          </div>

]]></content>
  </entry>
  <entry>
    <title>CalendarWithClock</title>
    <url>/handycontrol/extend_controls/calendarWithClock/index.html</url>
    <content><![CDATA[<p>The CalendarWithClock control consists of a calendar and a clock, allowing the user to select the date and time with the mouse.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonConfirm, Type = typeof(Button))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementClockPresenter, Type = typeof(ContentPresenter))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementCalendarPresenter, Type = typeof(ContentPresenter))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CalendarWithClock</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-Date-Picker"><a href="#Create-Date-Picker" class="headerlink" title="Create Date Picker"></a>Create Date Picker</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:CalendarWithClock</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dateTimePicker = <span class="keyword">new</span> CalendarWithClock();</span><br></pre></td></tr></table></figure>
<p>The generated CalendarWithClock is shown below:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/CalendarWithClock_1.png" alt="DateTimePicker"></p>
<h1 id="Select-date-and-time"><a href="#Select-date-and-time" class="headerlink" title="Select date and time"></a>Select date and time</h1><p>Select the date and time on the calendar and clock with the mouse, and then click the <strong>OK</strong> button to update the date and time of the CalendarWithClock control.</p>
<p>You can also set the date like this in a XAML clock or code.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:CalendarWithClock</span> <span class="attr">SelectedDateTime</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">calendarWithClock.SelectedDateTime = DateTime.Now;</span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedDateTime</td>
<td>Get or set the currently selected date and time</td>
</tr>
<tr>
<td>DateTimeFormat</td>
<td>Gets or sets the format used to display the selected date and time</td>
</tr>
<tr>
<td>DisplayDateTime</td>
<td>Get or set the date to be displayed</td>
</tr>
<tr>
<td>ShowConfirmButton</td>
<td>Gets or sets a value indicating whether to show <strong>OK</strong> button</td>
</tr>
<tr>
<td>VerifyFunc</td>
<td>Get or Set Data Validation Delegation</td>
</tr>
<tr>
<td>IsError</td>
<td>Get or set whether the data is wrong</td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Get or Set Error Alert</td>
</tr>
<tr>
<td>TextType</td>
<td>Get or Set Text Type</td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Gets or sets whether to show the clear button</td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData ()</td>
<td>Verify Data</td>
</tr>
</tbody></table>
<div class="note info">
            <p>you can change calendarwithclock ui culture:</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;en&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>CheckComboBox</title>
    <url>/handycontrol/extend_controls/checkComboBox/index.html</url>
    <content><![CDATA[<p>Optionally select combo boxes for multiple items.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementPanel, Type = typeof(Panel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementSelectAll, Type = typeof(CheckComboBoxItem))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CheckComboBox</span> : <span class="title">ListBox</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyFunc</td>
<td>Data Verification Delegation</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IsError</td>
<td>Is the data wrong</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Error prompt</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TextType</td>
<td>Text Type</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Whether to show the clear button</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>MaxDropDownHeight</td>
<td>The maximum height of the drop-down content</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IsDropDownOpen</td>
<td>Whether the drop-down box is expanded</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>TagStyle</td>
<td>Check mark style</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowSelectAllButton</td>
<td>Whether to show all selected buttons</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Additional-attributes"><a href="#Additional-attributes" class="headerlink" title="Additional attributes"></a>Additional attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>InfoElement.Placeholder</td>
<td>Placeholder</td>
<td></td>
<td></td>
</tr>
<tr>
<td>InfoElement.Necessary</td>
<td>Is it required</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>InfoElement.Symbol</td>
<td>Required mark</td>
<td>●</td>
<td></td>
</tr>
<tr>
<td>InfoElement.ContentHeight</td>
<td>Content Height</td>
<td>30</td>
<td>Available when the title is above</td>
</tr>
<tr>
<td>InfoElement.MinContentHeight</td>
<td>Minimum content height</td>
<td>30</td>
<td>Available when the title is on the top</td>
</tr>
<tr>
<td>TitleElement.Title</td>
<td>Title</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TitleElement.TitlePlacement</td>
<td>Title Alignment</td>
<td>TitlePlacementType.Top</td>
<td></td>
</tr>
<tr>
<td>TitleElement.TitleWidth</td>
<td>TitleWidth</td>
<td>120</td>
<td></td>
</tr>
<tr>
<td>DropDownElement.ConsistentWidth</td>
<td>Whether the drop-down content is the same as the width of the drop-down box</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData</td>
<td>Verify Data</td>
<td>Verification can be triggered manually</td>
</tr>
</tbody></table>
<h1 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h1><table>
<thead>
<tr>
<th>Style</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>CheckComboBoxBaseStyle</td>
<td>Default Style</td>
</tr>
<tr>
<td>CheckComboBoxExtendBaseStyle</td>
<td>Default extended style</td>
</tr>
<tr>
<td>CheckComboBoxPlusBaseStyle</td>
<td>Default Enhanced Style</td>
</tr>
<tr>
<td>CheckComboBoxExtend</td>
<td>Extended Style</td>
</tr>
<tr>
<td>CheckComboBoxPlus</td>
<td>Enhanced Style</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:CheckComboBox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CheckComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CheckComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CheckComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:CheckComboBox</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">ShowSelectAllButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxExtend&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>  <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">ShowSelectAllButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">ShowSelectAllButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr2&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">ShowSelectAllButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxPlus&#125;&quot;</span> <span class="attr">ShowSelectAllButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxPlus&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxPlus&#125;&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">ShowSelectAllButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr2&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxPlus&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxPlus&#125;&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">ShowSelectAllButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CheckComboBox</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;380&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CheckComboBoxPlus&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CheckComboBox.png" alt="CheckComboBox"></p>
]]></content>
  </entry>
  <entry>
    <title>CircleProgressBar</title>
    <url>/handycontrol/extend_controls/circleProgressBar/index.html</url>
    <content><![CDATA[<p>CircleProgressBar Control displays a value in a certain range using a cicular sector that grows clockwise until it becomes a full ring.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = IndicatorTemplateName, Type = typeof(Arc))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CircleProgressBar</span> : <span class="title">RangeBase</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ArcThickness</td>
<td>Circle thickness</td>
<td>4</td>
<td>The default value is provided by the theme</td>
</tr>
<tr>
<td>ShowText</td>
<td>Whether to display text</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>Text</td>
<td>Text content</td>
<td><empty></td>
<td>Progress text</td>
</tr>
<tr>
<td>IsIndeterminate</td>
<td></td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Style</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ProgressBarCircleBaseStyle</td>
<td>Default style</td>
</tr>
<tr>
<td>ProgressBarSuccessCircle</td>
<td>Success style</td>
</tr>
<tr>
<td>ProgressBarInfoCircle</td>
<td>Info style</td>
</tr>
<tr>
<td>ProgressBarWarningCircle</td>
<td>Warning style</td>
</tr>
<tr>
<td>ProgressBarDangerCircle</td>
<td>Danger style</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CircleProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CircleProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CircleProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">ShowText</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">ArcThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarSuccessCircle&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CircleProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">ShowText</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">ArcThickness</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarInfoCircle&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CircleProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">ShowText</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;40&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;40&quot;</span> <span class="attr">ArcThickness</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarWarningCircle&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CircleProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarDangerCircle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CircleProgressBar.gif" alt="CircleProgressBar"></p>
]]></content>
  </entry>
  <entry>
    <title>Clock</title>
    <url>/handycontrol/extend_controls/clock/index.html</url>
    <content><![CDATA[<p>Clock control displays a virtual clock, allowing the user to select the time on this clock.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonAm, Type = typeof(RadioButton))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonPm, Type = typeof(RadioButton))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementCanvas, Type = typeof(Canvas))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderTitle, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderClock, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanelNum, Type = typeof(CirclePanel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTimeStr, Type = typeof(TextBlock))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Clock</span> : <span class="title">ClockBase</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-Clock"><a href="#Create-Clock" class="headerlink" title="Create Clock"></a>Create Clock</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Clock</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> clock = <span class="keyword">new</span> Clock();</span><br></pre></td></tr></table></figure>
<p>The generated Clock is shown below:<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Clock_1.png" alt="Clock"></p>
<h1 id="Choose-time"><a href="#Choose-time" class="headerlink" title="Choose time"></a>Choose time</h1><p>You can select the time by clicking the clock on the left, or by clicking the hour, minute, and second list on the right. You can also set the date like this in a XAML clock or code.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Clock</span> <span class="attr">SelectedTime</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">clock.SelectedTime = DateTime.Now;</span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedTime</td>
<td>Gets or sets the currently selected time.</td>
</tr>
<tr>
<td>DisplayTime</td>
<td>Gets or sets the current display time.</td>
</tr>
<tr>
<td>TimeFormat</td>
<td>Get or set the format used to display the selected time</td>
</tr>
<tr>
<td>ClockRadioButtonStyle</td>
<td>Get or set the style of RadioButton in Clock control</td>
</tr>
<tr>
<td>ShowConfirmButton</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h1><table>
<thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>DisplayTimeChanged</td>
<td>Occurs when the displayed time changes.</td>
</tr>
</tbody></table>
<h1 id="ListClock"><a href="#ListClock" class="headerlink" title="ListClock"></a>ListClock</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ListClock</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>ColorPicker</title>
    <url>/handycontrol/extend_controls/colorPicker/index.html</url>
    <content><![CDATA[<p>Imitate Chrome’s color picker, related blog post: <a href="https://www.cnblogs.com/nabian/p/9267646.html">“WPF Control Library-Imitate Chrome’s ColorPicker”</a></p>
<p>The ColorPicker is an editor that allows a user to pick a color from predefined color palettes.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderColor, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderPicker, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderDrag, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanelColor, Type = typeof(Panel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementSliderColor, Type = typeof(Panel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementSliderOpacity, Type = typeof(Panel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanelRgb, Type = typeof(Panel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonDropper, Type = typeof(ToggleButton))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ColorPicker</span> : <span class="title">Control</span>, <span class="title">ISingleOpen</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedBrush</td>
<td>Selected color</td>
<td>Brushes.White</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Event</th>
<th>Description</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedColorChanged</td>
<td>Color change event</td>
<td></td>
</tr>
<tr>
<td>Canceled</td>
<td>Cancel event</td>
<td></td>
</tr>
<tr>
<td>Confirmed</td>
<td>Confirm event</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ColorPicker</span> <span class="attr">Name</span>=<span class="string">&quot;ColorPicker&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>you can use in Code-behind without using xaml</p>
          </div>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">var picker = SingleOpenHelper.CreateControl<span class="tag">&lt;<span class="name">ColorPicker</span>&gt;</span>();</span><br><span class="line">            var window = new PopupWindow</span><br><span class="line">            &#123;</span><br><span class="line">                PopupElement = picker</span><br><span class="line">            &#125;;</span><br><span class="line">            picker.SelectedColorChanged += delegate &#123; window.Close(); &#125;;</span><br><span class="line">            picker.Canceled += delegate &#123; window.Close(); &#125;;</span><br><span class="line"> window.Show(OpenButton, false);</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ColorPicker.gif" alt="ColorPicker"></p>
]]></content>
  </entry>
  <entry>
    <title>ComboBox</title>
    <url>/handycontrol/extend_controls/comboBox/index.html</url>
    <content><![CDATA[<p>HC extension of native combobox.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ComboBox</span> : <span class="title">System.Windows.Controls.ComboBox</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyFunc</td>
<td>Data Verification Delegation</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IsError</td>
<td>Is the data wrong</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Error prompt</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TextType</td>
<td>Text Type</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Whether to show the clear button</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AutoComplete</td>
<td>Whether to automatically complete the input</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>SelectionTextBrush</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CaretBrushProperty</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Additional-attributes"><a href="#Additional-attributes" class="headerlink" title="Additional attributes"></a>Additional attributes</h1><table>
<thead>
<tr>
<th>Attribute</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>InfoElement.Placeholder</td>
<td>Placeholder</td>
<td></td>
<td></td>
</tr>
<tr>
<td>InfoElement.Necessary</td>
<td>Is it required</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>InfoElement.Symbol</td>
<td>Required mark</td>
<td>●</td>
<td></td>
</tr>
<tr>
<td>InfoElement.ContentHeight</td>
<td>Content Height</td>
<td>30</td>
<td>Available when the title is above</td>
</tr>
<tr>
<td>InfoElement.MinContentHeight</td>
<td>Minimum content height</td>
<td>30</td>
<td>Available when the title is on top</td>
</tr>
<tr>
<td>TitleElement.Title</td>
<td>Title</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TitleElement.TitlePlacement</td>
<td>Title Alignment</td>
<td>TitlePlacementType.Top</td>
<td></td>
</tr>
<tr>
<td>TitleElement.TitleWidth</td>
<td>TitleWidth</td>
<td>120</td>
<td></td>
</tr>
<tr>
<td>DropDownElement.ConsistentWidth</td>
<td>Whether the drop-down content is the same as the width of the drop-down box</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData</td>
<td>Verify Data</td>
<td>Verification can be triggered manually</td>
</tr>
</tbody></table>
<h1 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h1><table>
<thead>
<tr>
<th>Style</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ComboBoxPlusBaseStyle</td>
<td>Default Style</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><p>The native functions behave the same on the extended ComboBox.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ComboBox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:ComboBox</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">IsEditable</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;This is placeholder&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">IsEditable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">AutoComplete</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">IsEditable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;This is placeholder&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;This is placeholder&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">IsEditable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">AutoComplete</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">IsEditable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;This is placeholder&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/ComboBox_1.png" alt="ComboBox"></p>
]]></content>
  </entry>
  <entry>
    <title>ContextMenuButton</title>
    <url>/handycontrol/extend_controls/contextMenuButton/index.html</url>
    <content><![CDATA[<p>HC provides two context menu buttons, namely <code>ContextMenuButton</code> and <code>ContextMenuToggleButton</code>. Their usage is the same as ordinary <code>Button</code> and <code>ToggleButton</code>. The only difference is that they provide the <code>Menu</code> property, which can be used to click the button. The effect of popping up the context menu.</p>
]]></content>
  </entry>
  <entry>
    <title>CirclePanel</title>
    <url>/handycontrol/extend_controls/circlePanel/index.html</url>
    <content><![CDATA[<p>The circular layout is often used as a container for direction buttons and function buttons.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CirclePanel</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Diameter</td>
<td>The size of the panel can be specified by its diameter</td>
</tr>
<tr>
<td>KeepVertical</td>
<td>Whether the element remains vertical</td>
</tr>
<tr>
<td>OffsetAngle</td>
<td>Overall angular offset</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:Key</span>=<span class="string">&quot;CirclePanelButton&quot;</span> <span class="attr">BasedOn</span>=<span class="string">&quot;&#123;StaticResource ButtonCustom&#125;&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;Button&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;UseLayoutRounding&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Height&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;77&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Width&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;36.06&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Template&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">TargetType</span>=<span class="string">&quot;Button&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">hc:SimplePanel</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource CirclePanelDemoGeometry&#125;&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;77&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;36.06&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource CirclePanelRightGeometry&#125;&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;Uniform&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;12&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ControlTemplate.Triggers</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsMouseOver&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;.9&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsPressed&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;.6&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsEnabled&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;0.4&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ControlTemplate.Triggers</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:CirclePanel</span> <span class="attr">Margin</span>=<span class="string">&quot;64&quot;</span> <span class="attr">Diameter</span>=<span class="string">&quot;170&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource CirclePanelButton&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:CirclePanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CirclePanel.png" alt="CirclePanel"></p>
]]></content>
  </entry>
  <entry>
    <title>CoverView</title>
    <url>/handycontrol/extend_controls/coverView/index.html</url>
    <content><![CDATA[<p>Copy the album view of Itunes.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CoverView</span> : <span class="title">RegularItemsControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>CoverViewContentStyle</td>
<td>CoverViewContentStyle</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemContentHeight</td>
<td>Item ContentHeight</td>
<td>300</td>
<td></td>
</tr>
<tr>
<td>ItemContentHeightFixed</td>
<td>Is the item content height fixed</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>ItemHeaderTemplate</td>
<td>Item Header Template</td>
<td></td>
<td></td>
</tr>
<tr>
<td>SourceContent</td>
<td>Source Content (Current Content)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Groups</td>
<td>Number of Groups</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemWidth</td>
<td>Specifies the width of the item</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemHeight</td>
<td>Specifies the Height of the item</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemSource</td>
<td>if you want to bind your data to ItemsSource</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContentHeight</td>
<td>Height of the CoverViewContent</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowContent</td>
<td>Show or Hide Content when selected items, Only Available in <a href="https://github.com/ghost1372/handyControls">Custom Version</a></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:CoverView</span> <span class="attr">Margin</span>=<span class="string">&quot;27&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;880&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;432&quot;</span> <span class="attr">ItemWidth</span>=<span class="string">&quot;160&quot;</span> <span class="attr">ItemHeight</span>=<span class="string">&quot;160&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CoverView.ItemHeaderTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;Binding ImgPath&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:CoverView.ItemHeaderTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CoverView.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;Binding BackgroundToken,Converter=&#123;StaticResource String2BrushConverter&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.ContentDemoStr&#125;&#125;&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:CoverView.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:CoverView</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:CoverView</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:CoverViewItem</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:CoverViewItem.Header</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/1.jpg&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">hc:CoverViewItem.Header</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:CoverViewItem</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:CoverViewItem</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:CoverViewItem.Header</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/2.jpg&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">hc:CoverViewItem.Header</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:CoverViewItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:CoverView</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CoverView.gif" alt="CoverView"></p>
]]></content>
  </entry>
  <entry>
    <title>DashBorder</title>
    <url>/handycontrol/extend_controls/dashBorder/index.html</url>
    <content><![CDATA[<p>A decorative element that can provide a dotted border to achieve some special effects.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DashedBorder</span> : <span class="title">Decorator</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>roperty</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>BorderThickness</td>
<td>Border Thickness</td>
<td></td>
<td></td>
</tr>
<tr>
<td>BorderDashThickness</td>
<td>Border DashThickness</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Padding</td>
<td>Padding</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CornerRadius</td>
<td>Round Corner</td>
<td></td>
<td></td>
</tr>
<tr>
<td>BorderBrush</td>
<td>Border color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Background</td>
<td>Background color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>BorderDashArray</td>
<td>Border DashArray</td>
<td></td>
<td></td>
</tr>
<tr>
<td>BorderDashCap</td>
<td>Border dashed line cap style</td>
<td>PenLineCap.Flat</td>
<td></td>
</tr>
<tr>
<td>BorderDashOffset</td>
<td>Border dash offset</td>
<td>0</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:DashedBorder</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">BorderDashThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">BorderDashArray</span>=<span class="string">&quot;3, 1&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;0,50,0,0&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/DashedBorder.png" alt="DashedBorder"></p>
<div class="note warning">
            <p>Pay attention when you need to set the border thickness. If the four rounded corners have the same value, please use <code>BorderThickness</code>, otherwise please use <code>BorderDashThickness</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>DatePicker</title>
    <url>/handycontrol/extend_controls/datePicker/index.html</url>
    <content><![CDATA[<p>The DatePicker control allows the user to select a date by typing the date in the textbox or using the drop-down calendar control.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementTextBox, Type = typeof(DatePickerTextBox))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DatePicker</span> : <span class="title">System.Windows.Controls.DatePicker</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-DatePicker"><a href="#Create-DatePicker" class="headerlink" title="Create DatePicker"></a>Create DatePicker</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:DatePicker</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> datePicker = <span class="keyword">new</span> DatePicker();</span><br></pre></td></tr></table></figure>
<p>The generated DatePicker is shown below:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/DatePicker_1.png" alt="DatePicker"></p>
<h1 id="Select-date"><a href="#Select-date" class="headerlink" title="Select date"></a>Select date</h1><p>You can enter the date through the textbox, or click the button to the right of the text box to open the drop-down calendar control to select the date.</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/DatePicker_2.png" alt="DatePicker"></p>
<p>You can also set the date like this in a XAML clock or code.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:DatePicker</span> <span class="attr">SelectedDate</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">datePicker.SelectedDate = DateTime.Now;</span><br></pre></td></tr></table></figure>
<h1 id="Set-title-and-placeholder-text"><a href="#Set-title-and-placeholder-text" class="headerlink" title="Set title and placeholder text"></a>Set title and placeholder text</h1><p>You can add Headers and Placeholders to the DatePicker to indicate to the user what they do.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:DatePicker</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;Title&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedDate</td>
<td>Get or set the currently selected date</td>
</tr>
<tr>
<td>VerifyFunc</td>
<td>Get or Set Data Validation Delegation</td>
</tr>
<tr>
<td>IsError</td>
<td>Get or set whether the data is wrong</td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Get or Set Error Alert</td>
</tr>
<tr>
<td>TextType</td>
<td>Get or Set Text Type</td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Gets or sets whether to show the clear button</td>
</tr>
<tr>
<td>SelectionTextBrush</td>
<td></td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
</tr>
<tr>
<td>CaretBrushProperty</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData ()</td>
<td>Verify Data</td>
</tr>
</tbody></table>
<div class="note info">
            <p>you can change datepicker ui culture:</p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;en&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>CoverFlow</title>
    <url>/handycontrol/extend_controls/coverFlow/index.html</url>
    <content><![CDATA[<p>This control displays the cover in 3D and can be used to enhance the interface effect.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementViewport3D, Type = typeof(Viewport3D))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementCamera, Type = typeof(ProjectionCamera))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementVisualParent, Type = typeof(ModelVisual3D))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CoverFlow</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>PageIndex</td>
<td>Page Number</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Loop</td>
<td>Whether to loop display</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Add(string)</td>
<td>Add a resource</td>
</tr>
<tr>
<td>Add(Uri)</td>
<td>Add a resource</td>
</tr>
<tr>
<td>AddRange(IEnumerable<object>)</td>
<td>Add resources in batches</td>
</tr>
<tr>
<td>JumpTo(int)</td>
<td>Jump</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">CoverFlowMain.AddRange(<span class="keyword">new</span> []</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/1.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/2.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/3.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/4.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/5.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/6.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/7.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/8.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/9.jpg&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span> Uri(<span class="string">@&quot;pack://application:,,,/Resources/Img/Album/10.jpg&quot;</span>)</span><br><span class="line">&#125;);</span><br><span class="line">CoverFlowMain.JumpTo(<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:CoverFlow</span> <span class="attr">x:Name</span>=<span class="string">&quot;CoverFlowMain&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CoverFlow.gif" alt="CoverFlow"></p>
]]></content>
  </entry>
  <entry>
    <title>CompareSlider</title>
    <url>/handycontrol/extend_controls/compareSlider/index.html</url>
    <content><![CDATA[<p>With the help of the comparison slider, you can easily see the difference before and after the element changes.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CompareSlider</span> : <span class="title">Slider</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>TargetContent</td>
<td>Target Content</td>
<td></td>
<td></td>
</tr>
<tr>
<td>SourceContent</td>
<td>Source content (current content)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Value</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Orientation</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">WrapPanel</span> <span class="attr">ItemHeight</span>=<span class="string">&quot;384&quot;</span> <span class="attr">ItemWidth</span>=<span class="string">&quot;632&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CompareSlider</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;352&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CompareSlider.TargetContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageBrush</span> <span class="attr">ImageSource</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/b1.jpg&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:CompareSlider.TargetContent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CompareSlider.SourceContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageBrush</span> <span class="attr">ImageSource</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/b2.jpg&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:CompareSlider.SourceContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:CompareSlider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:CompareSlider</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;352&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CompareSlider.TargetContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageBrush</span> <span class="attr">ImageSource</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/b1.jpg&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:CompareSlider.TargetContent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:CompareSlider.SourceContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageBrush</span> <span class="attr">ImageSource</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/b2.jpg&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:CompareSlider.SourceContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:CompareSlider</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">WrapPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CompareSlider-v.gif" alt="CompareSlider"><br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CompareSlider-h.gif" alt="CompareSlider"></p>
]]></content>
  </entry>
  <entry>
    <title>DateTimePicker</title>
    <url>/handycontrol/extend_controls/dateTimePicker/index.html</url>
    <content><![CDATA[<p>The DatePicker control allows users to select a date and time by typing the date and time in a textbox, or using the drop-down calendar control.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementRoot, Type = typeof(Grid))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTextBox, Type = typeof(WatermarkTextBox))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButton, Type = typeof(Button))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPopup, Type = typeof(Popup))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DateTimePicker</span> : <span class="title">Control</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-DateTimePicker"><a href="#Create-DateTimePicker" class="headerlink" title="Create DateTimePicker"></a>Create DateTimePicker</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:DateTimePicker</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dateTimePicker = <span class="keyword">new</span> DateTimePicker();</span><br></pre></td></tr></table></figure>
<p>The generated DateTimePicker is shown below:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/DateTimePicker_1.png" alt="DateTimePicker"></p>
<h1 id="Select-date-and-time"><a href="#Select-date-and-time" class="headerlink" title="Select date and time"></a>Select date and time</h1><p>You can enter the date and time through the textbox, or click the button to the right of the text box to open the drop-down calendar and clock controls to select the date and time.</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/DateTimePicker_2.png" alt="DateTimePicker"></p>
<p>You can also set the date like this in XAML or code.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:DateTimePicker</span> <span class="attr">SelectedDateTime</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">dateTimePicker.SelectedDateTime = DateTime.Now;</span><br></pre></td></tr></table></figure>
<h1 id="Set-title-and-placeholder-text"><a href="#Set-title-and-placeholder-text" class="headerlink" title="Set title and placeholder text"></a>Set title and placeholder text</h1><p>You can add Headers and Placeholders to the DatePicker to indicate to the user what they do. To use these two properties, you first need to apply the <strong>DateTimePickerExtend</strong> or <strong>DateTimePickerPlus</strong> styles.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:DateTimePicker</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource DateTimePickerExtend&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedDateTime</td>
<td>Get or set the currently selected date and time</td>
</tr>
<tr>
<td>DateTimeFormat</td>
<td>Gets or sets the format used to display the selected date and time</td>
</tr>
<tr>
<td>CalendarStyle</td>
<td>Gets or sets the style used when rendering the calendar</td>
</tr>
<tr>
<td>DisplayDateTime</td>
<td>Get or set the date to be displayed</td>
</tr>
<tr>
<td>IsDropDownOpen</td>
<td>Gets or sets a value indicating whether the drop-down is on or off Calendar</td>
</tr>
<tr>
<td>Text</td>
<td>Get the text displayed by <strong>DateTimePicker</strong>, or set the selected date and time</td>
</tr>
<tr>
<td>VerifyFunc</td>
<td>Get or Set Data Validation Delegation</td>
</tr>
<tr>
<td>IsError</td>
<td>Get or set whether the data is wrong</td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Get or Set Error Alert</td>
</tr>
<tr>
<td>TextType</td>
<td>Get or Set Text Type</td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Gets or sets whether to show the clear button</td>
</tr>
<tr>
<td>SelectionTextBrush</td>
<td></td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
</tr>
<tr>
<td>CaretBrushProperty</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData ()</td>
<td>Verify Data</td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Event</th>
</tr>
</thead>
<tbody><tr>
<td>PickerClosed</td>
</tr>
<tr>
<td>PickerOpened</td>
</tr>
<tr>
<td>SelectedDateTimeChanged</td>
</tr>
</tbody></table>
<div class="note info">
            <p>you can change datetimepicker ui culture:</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;en&quot;</span>);</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Divider</title>
    <url>/handycontrol/extend_controls/divider/index.html</url>
    <content><![CDATA[<p>The dividing line that separates the content.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Divider</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Content</td>
<td>Content</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Orientation</td>
<td>Orientation</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContentTemplate</td>
<td>Content Template</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContentStringFormat</td>
<td>Content String Format</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContentTemplateSelector</td>
<td>Content Template</td>
<td></td>
<td></td>
</tr>
<tr>
<td>LineStroke</td>
<td>Dividing line color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>LineStrokeThickness</td>
<td>Dividing line thickness</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>LineStrokeDashArray</td>
<td>Dividing line gap</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">WrapPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Divider</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Title&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Title&#125;&#125;&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">LineStroke</span>=<span class="string">&quot;&#123;DynamicResource DarkPrimaryBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeDashArray</span>=<span class="string">&quot;2,2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Title&#125;&#125;&quot;</span> <span class="attr">HorizontalContentAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Title&#125;&#125;&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span>  <span class="attr">HorizontalContentAlignment</span>=<span class="string">&quot;Right&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">MaxHeight</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">MaxHeight</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">MaxHeight</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">MaxHeight</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">LineStroke</span>=<span class="string">&quot;&#123;DynamicResource DarkPrimaryBrush&#125;&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">MaxHeight</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">LineStroke</span>=<span class="string">&quot;&#123;DynamicResource DarkPrimaryBrush&#125;&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">MaxHeight</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Button&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">WrapPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Divider.png" alt="Divider"></p>
]]></content>
  </entry>
  <entry>
    <title>Dialog</title>
    <url>/handycontrol/extend_controls/dialog/index.html</url>
    <content><![CDATA[<p>In the case of retaining the current page status, notify the user and carry related operations.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dialog</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>IsClosed</td>
<td>Is it closed</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Additional-attributes"><a href="#Additional-attributes" class="headerlink" title="Additional attributes"></a>Additional attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Token</td>
<td>Used to set the message token</td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Show(object, string)</td>
<td>Show carried content</td>
</tr>
<tr>
<td>Show<T>(string)</td>
<td>Display the bearer content (automatically instantiate the bearer content)</td>
</tr>
<tr>
<td>Close()</td>
<td>Close</td>
</tr>
<tr>
<td>Register(string, FrameworkElement)</td>
<td>Register a message tag for the specified element</td>
</tr>
<tr>
<td>Unregister(string, Panel)</td>
<td>Unregister the message mark for the specified element</td>
</tr>
<tr>
<td>Unregister(Panel)</td>
<td>Unregister if the element is registered with a message mark</td>
</tr>
<tr>
<td>Unregister(string)</td>
<td>Unregister if the message is marked with the corresponding element</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><h2 id="Basic-usage"><a href="#Basic-usage" class="headerlink" title="Basic usage"></a>Basic usage</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.UserControl.TextDialog&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:langs</span>=<span class="string">&quot;clr-namespace:HandyControlDemo.Properties.Langs&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:ex</span>=<span class="string">&quot;clr-namespace:HandyControlDemo.Tools.Extension&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">CornerRadius</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Height</span>=<span class="string">&quot;247&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SimplePanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.PleaseWait&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Width</span>=<span class="string">&quot;22&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;22&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.Close&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ErrorGeometry&#125;&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,4,4,0&quot;</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">HandyControlDemo.UserControl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">TextDialog</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TextDialog</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Dialog.Show(<span class="keyword">new</span> TextDialog());</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Dialog.png" alt="Dialog"></p>
<h2 id="Asynchronously-wait-for-the-result-to-return"><a href="#Asynchronously-wait-for-the-result-to-return" class="headerlink" title="Asynchronously wait for the result to return"></a>Asynchronously wait for the result to return</h2><p>After initializing the vm through the <code>Initialize</code> extension method, you can use the <code>GetResultAsync</code> method to achieve asynchronous wait on this basis:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Dialog.Show&lt;InteractiveDialog&gt;()</span><br><span class="line">    .Initialize&lt;InteractiveDialogViewModel&gt;(vm =&gt; vm.Message = DialogResult)</span><br><span class="line">    .GetResultAsync&lt;<span class="built_in">string</span>&gt;()</span><br><span class="line">    .ContinueWith(str =&gt; DialogResult = str.Result);</span><br></pre></td></tr></table></figure>
<h2 id="A-simpler-asynchronous-way"><a href="#A-simpler-asynchronous-way" class="headerlink" title="A simpler asynchronous way"></a>A simpler asynchronous way</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> d = Dialog.Show&lt;ProgressDialog&gt;();</span><br><span class="line"><span class="keyword">await</span> Task.Delay(<span class="number">5</span> * <span class="number">1000</span>);</span><br><span class="line">d.Close();</span><br></pre></td></tr></table></figure>
<h1 id="Pop-up-behavior"><a href="#Pop-up-behavior" class="headerlink" title="Pop-up behavior"></a>Pop-up behavior</h1><p>If the <code>token</code> parameter is not given when calling the <code>Show</code> method, it will pop up the currently active window by default. If the value of <code>token</code> is given, the type of the target element will be judged internally. If the type is a window, it will pop up in the decoration layer under the window, otherwise it will look for the child elements of the target element until it finds the type of <code>DialogContainer</code> The child element of will finally pop up inside the child element.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">&lt;UserControl hc:Dialog.Token=<span class="string">&quot;DialogContainer&quot;</span>&gt;</span><br><span class="line">    &lt;hc:DialogContainer&gt;</span><br><span class="line">        <span class="comment">// Internal controls</span></span><br><span class="line">    &lt;/hc:DialogContainer&gt;</span><br><span class="line">&lt;/UserControl&gt;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Drawer</title>
    <url>/handycontrol/extend_controls/drawer/index.html</url>
    <content><![CDATA[<p>When the <code>Dialog</code> component cannot meet our needs (for example, to display some documents), you can use <code>Drawer</code>.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">ContentProperty(<span class="meta-string">&quot;Content&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Drawer</span> : <span class="title">FrameworkElement</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>IsOpen</td>
<td>Is it closed</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MaskCanClose</td>
<td>Click whether the mask layer can be closed Drawer</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>ShowMask</td>
<td>Whether to show the mask layer</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>Dock</td>
<td>Location</td>
<td>Dock.Left</td>
<td></td>
</tr>
<tr>
<td>ShowMode</td>
<td>Display Mode</td>
<td>DrawerShowMode.Cover</td>
<td></td>
</tr>
<tr>
<td>MaskBrush</td>
<td>Mask layer color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Content</td>
<td>Content</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Opened</td>
<td>Triggered when the drawer is opened</td>
</tr>
<tr>
<td>Closed</td>
<td>Triggered when the drawer is closed</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Margin</span>=<span class="string">&quot;22&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ColumnDefinition</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ColumnDefinition</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ColumnDefinition</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsOpen,ElementName=DrawerLeft&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsOpen,ElementName=DrawerTop&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsOpen,ElementName=DrawerRight&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Bottom&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsOpen,ElementName=DrawerBottom&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Drawer</span> <span class="attr">Name</span>=<span class="string">&quot;DrawerLeft&quot;</span> <span class="attr">Dock</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">ShowMode</span>=<span class="string">&quot;Push&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0,1,0,0&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Header&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.Close&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource DeleteFillCircleGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Drawer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Drawer</span> <span class="attr">Name</span>=<span class="string">&quot;DrawerTop&quot;</span> <span class="attr">Dock</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">ShowMode</span>=<span class="string">&quot;Press&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0,1,0,0&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Header&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.Close&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource DeleteFillCircleGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Drawer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Drawer</span> <span class="attr">Name</span>=<span class="string">&quot;DrawerRight&quot;</span> <span class="attr">MaskCanClose</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0,1,0,0&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Header&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.Close&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource DeleteFillCircleGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Drawer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Drawer</span> <span class="attr">Name</span>=<span class="string">&quot;DrawerBottom&quot;</span> <span class="attr">Dock</span>=<span class="string">&quot;Bottom&quot;</span> <span class="attr">ShowMask</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0,1,0,0&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Header&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.Close&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource DeleteFillCircleGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Drawer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Drawer.gif" alt="Drawer"></p>
]]></content>
  </entry>
  <entry>
    <title>Effect</title>
    <url>/handycontrol/extend_controls/effect/index.html</url>
    <content><![CDATA[<p>All effects are inherited from the EffectBase class The following property is available in all effects</p>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>Input</td>
</tr>
</tbody></table>
<h1 id="GrayScaleEffect"><a href="#GrayScaleEffect" class="headerlink" title="GrayScaleEffect"></a>GrayScaleEffect</h1><h2 id="Attributes-1"><a href="#Attributes-1" class="headerlink" title="Attributes"></a>Attributes</h2><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>Scale</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/10.jpg&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:GrayScaleEffect</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">Image</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="ColorComplementEffect"><a href="#ColorComplementEffect" class="headerlink" title="ColorComplementEffect"></a>ColorComplementEffect</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/10.jpg&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">hc:ColorComplementEffect</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">Image</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="ColorMatrixEffect"><a href="#ColorMatrixEffect" class="headerlink" title="ColorMatrixEffect"></a>ColorMatrixEffect</h1><h2 id="Attributes-2"><a href="#Attributes-2" class="headerlink" title="Attributes"></a>Attributes</h2><table>
<thead>
<tr>
<th>Property</th>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>M11</td>
<td>M12</td>
</tr>
<tr>
<td>M21</td>
<td>M22</td>
</tr>
<tr>
<td>M31</td>
<td>M32</td>
</tr>
<tr>
<td>M41</td>
<td>M42</td>
</tr>
<tr>
<td>M51</td>
<td>M52</td>
</tr>
<tr>
<td>M13</td>
<td>M14</td>
</tr>
<tr>
<td>M23</td>
<td>M24</td>
</tr>
<tr>
<td>M33</td>
<td>M34</td>
</tr>
<tr>
<td>M43</td>
<td>M44</td>
</tr>
<tr>
<td>M53</td>
<td>M54</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/10.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:ColorMatrixEffect</span> <span class="attr">M11</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">M22</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">M33</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">M41</span>=<span class="string">&quot;1&quot;</span> <span class="attr">M42</span>=<span class="string">&quot;1&quot;</span> <span class="attr">M43</span>=<span class="string">&quot;1&quot;</span> <span class="attr">M44</span>=<span class="string">&quot;1&quot;</span> <span class="attr">M51</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Image</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Image</span> <span class="attr">Width</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/10.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:ColorMatrixEffect</span> <span class="attr">M11</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M21</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M31</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M12</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M22</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M32</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M13</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M23</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M33</span>=<span class="string">&quot;1.5&quot;</span> <span class="attr">M51</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">M52</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">M53</span>=<span class="string">&quot;-1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Image.Effect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Image</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="ContrastEffect"><a href="#ContrastEffect" class="headerlink" title="ContrastEffect"></a>ContrastEffect</h1><h2 id="Attributes-3"><a href="#Attributes-3" class="headerlink" title="Attributes"></a>Attributes</h2><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>Contrast</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:ContrastEffect</span> <span class="attr">Contrast</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="BrightnessEffect"><a href="#BrightnessEffect" class="headerlink" title="BrightnessEffect"></a>BrightnessEffect</h1><h2 id="Attributes-4"><a href="#Attributes-4" class="headerlink" title="Attributes"></a>Attributes</h2><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>Brightness</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:BrightnessEffect</span> <span class="attr">Brightness</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="GooeyEffect"><a href="#GooeyEffect" class="headerlink" title="GooeyEffect"></a>GooeyEffect</h1><p>add this to resources</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">UserControl.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Storyboard</span> <span class="attr">x:Key</span>=<span class="string">&quot;StoryboardLoaded&quot;</span> <span class="attr">RepeatBehavior</span>=<span class="string">&quot;Forever&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">DoubleAnimationUsingKeyFrames</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(RotateTransform.Angle)&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;TransformRotate1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">EasingDoubleKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:3&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;90&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">EasingDoubleKeyFrame</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">DoubleAnimationUsingKeyFrames</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">DoubleAnimationUsingKeyFrames</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(RotateTransform.Angle)&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;TransformRotate2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">EasingDoubleKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:3&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;90&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">EasingDoubleKeyFrame</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">DoubleAnimationUsingKeyFrames</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">DoubleAnimationUsingKeyFrames</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(RotateTransform.Angle)&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;TransformRotate3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">EasingDoubleKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:3&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;-90&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">EasingDoubleKeyFrame</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">DoubleAnimationUsingKeyFrames</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UserControl.Resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">UserControl.Triggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EventTrigger</span> <span class="attr">RoutedEvent</span>=<span class="string">&quot;FrameworkElement.Loaded&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">BeginStoryboard</span> <span class="attr">Storyboard</span>=<span class="string">&quot;&#123;StaticResource StoryboardLoaded&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">EventTrigger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UserControl.Triggers</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>then</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:ContrastEffect</span> <span class="attr">Contrast</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:BrightnessEffect</span> <span class="attr">Brightness</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BlurEffect</span> <span class="attr">Radius</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border.Effect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RotateTransform</span> <span class="attr">Angle</span>=<span class="string">&quot;0&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;TransformRotate1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Margin</span>=<span class="string">&quot;30,0,0,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RotateTransform</span> <span class="attr">Angle</span>=<span class="string">&quot;0&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;TransformRotate2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RotateTransform</span> <span class="attr">Angle</span>=<span class="string">&quot;0&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;TransformRotate3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="BlendEffectBox"><a href="#BlendEffectBox" class="headerlink" title="BlendEffectBox"></a>BlendEffectBox</h1><h2 id="Attributes-5"><a href="#Attributes-5" class="headerlink" title="Attributes"></a>Attributes</h2><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>Content</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">hc:BlendEffectBox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:BlendEffectBox.Effects</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">BlurEffect</span> <span class="attr">Radius</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:BrightnessEffect</span> <span class="attr">Brightness</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hc:ContrastEffect</span> <span class="attr">Contrast</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:BlendEffectBox.Effects</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RotateTransform</span> <span class="attr">Angle</span>=<span class="string">&quot;0&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;TransformRotate1&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Margin</span>=<span class="string">&quot;30,0,0,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RotateTransform</span> <span class="attr">Angle</span>=<span class="string">&quot;0&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;TransformRotate2&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RotateTransform</span> <span class="attr">Angle</span>=<span class="string">&quot;0&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;TransformRotate3&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border.RenderTransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:BlendEffectBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/GooeyEffect.gif" alt="GooeyEffect"></p>
<p><img src="https://github.com/HandyOrg/HandyOrgResource/raw/master/HandyControl/Resources/Effects.png" alt="Effects"></p>
]]></content>
  </entry>
  <entry>
    <title>Empty</title>
    <url>/handycontrol/extend_controls/empty/index.html</url>
    <content><![CDATA[<p>A simple ContentControl to display on a page where there is no information</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Empty</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>Description</td>
<td>Get or set Description Text</td>
</tr>
<tr>
<td>Logo</td>
<td>Get or set Logo</td>
</tr>
<tr>
<td>ShowEmpty</td>
<td>Show or Hide Empty View</td>
</tr>
</tbody></table>
<div class="note info">
            <p>These controls will display an empty view if you set <code>hc:Empty.ShowEmpty=&quot;true&quot;</code></p><ul><li>ListBox</li><li>DataGrid</li><li>TreeView</li><li>ComboBox</li><li>CheckComboBox</li><li>ListView</li></ul>
          </div>

<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">hc:Empty.ShowEmpty</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>or </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ToggleBlock</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding ElementName=lst, Path=HasItems, Mode=OneWay&#125;&quot;</span> <span class="attr">VerticalContentAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">HorizontalContentAlignment</span>=<span class="string">&quot;Stretch&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ToggleBlock.CheckedContent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Name</span>=<span class="string">&quot;lst&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ToggleBlock.CheckedContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ToggleBlock.UnCheckedContent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Empty</span> <span class="attr">hc:Empty.ShowEmpty</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- OR --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">         &lt;hc:Empty Description=&quot;No Data&quot; hc:Empty.ShowEmpty=&quot;true&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;hc:Empty.Logo&gt;</span></span><br><span class="line"><span class="comment">                &lt;Path Data=&quot;&#123;DynamicResource EmptyGeometry&#125;&quot;/&gt;</span></span><br><span class="line"><span class="comment">            &lt;/hc:Empty.Logo&gt;</span></span><br><span class="line"><span class="comment">        &lt;/hc:Empty&gt;</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ToggleBlock.UnCheckedContent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:ToggleBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/9213496/104848126-cbd80e00-58f8-11eb-9a79-6e9285cbd06e.png" alt="Empty"></p>
]]></content>
  </entry>
  <entry>
    <title>FlexPanel</title>
    <url>/handycontrol/extend_controls/flexPanel/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>FlexGrow</td>
<td></td>
<td></td>
<td>Item</td>
</tr>
<tr>
<td>Order</td>
<td></td>
<td></td>
<td>Item</td>
</tr>
<tr>
<td>FlexShrink</td>
<td></td>
<td></td>
<td>Item</td>
</tr>
<tr>
<td>FlexBasis</td>
<td></td>
<td></td>
<td>Item</td>
</tr>
<tr>
<td>AlignSelf</td>
<td></td>
<td></td>
<td>Item</td>
</tr>
<tr>
<td>FlexDirection</td>
<td></td>
<td></td>
<td>Panel</td>
</tr>
<tr>
<td>FlexWrap</td>
<td></td>
<td></td>
<td>Panel</td>
</tr>
<tr>
<td>JustifyContent</td>
<td></td>
<td></td>
<td>Panel</td>
</tr>
<tr>
<td>AlignItems</td>
<td></td>
<td></td>
<td>Panel</td>
</tr>
<tr>
<td>AlignContent</td>
<td></td>
<td></td>
<td>Panel</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UserControl</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.UserControl.FlexPanelDemoCtl&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">UserControl.Resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:Key</span>=<span class="string">&quot;Border4FlexPanelDemoStyle&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;Border&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Width&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Background&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Margin&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;CornerRadius&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">UserControl.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ScrollViewer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:FlexPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">AlignItems</span>=<span class="string">&quot;FlexStart&quot;</span> <span class="attr">AlignContent</span>=<span class="string">&quot;SpaceBetween&quot;</span> <span class="attr">JustifyContent</span>=<span class="string">&quot;SpaceAround&quot;</span> <span class="attr">FlexWrap</span>=<span class="string">&quot;WrapReverse&quot;</span> <span class="attr">FlexDirection</span>=<span class="string">&quot;RowReverse&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">hc:FlexPanel.Order</span>=<span class="string">&quot;99&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">hc:FlexPanel.FlexBasis</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">hc:FlexPanel.AlignSelf</span>=<span class="string">&quot;FlexEnd&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;7&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource Border4FlexPanelDemoStyle&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;9&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:FlexPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ScrollViewer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UserControl</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/FlexPanel.gif" alt="FlexPanel"></p>
]]></content>
  </entry>
  <entry>
    <title>FlipClock</title>
    <url>/handycontrol/extend_controls/flipClock/index.html</url>
    <content><![CDATA[<p>A clock scheme in 3D form.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FlipClock</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>NumberList</td>
<td>Number Collection</td>
<td></td>
<td></td>
</tr>
<tr>
<td>DisplayTime</td>
<td>Display Time</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:FlipClock</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/FlipClock.gif" alt="FlipClock"></p>
<div class="note warning">
            <p>When you no longer use <code>FlipClock</code>, remember to call the <code>Dispose</code> method to clean up resources.</p>
          </div>
<div class="note warning">
            <p>The size of <code>FlipClock</code> can be adjusted with the help of <code>ViewBox</code>.</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>FloatingBlock</title>
    <url>/handycontrol/extend_controls/floatingBlock/index.html</url>
    <content><![CDATA[<p>Special click effects can be achieved with the help of floating blocks.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FloatingBlock</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ToX</td>
<td>X-axis disappearing position</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>ToY</td>
<td>Y-axis disappearing position</td>
<td>-100</td>
<td></td>
</tr>
<tr>
<td>Duration</td>
<td>Animation duration</td>
<td>2s</td>
<td></td>
</tr>
<tr>
<td>HorizontalOffset</td>
<td>Horizontal Offset</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>VerticalOffset</td>
<td>Vertical Offset</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>ContentTemplate</td>
<td>Floating Content Template</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Content</td>
<td>Floating Content</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ThumbsUpGeometry&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:FloatingBlock.ContentTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource ThumbsUpGeometry&#125;&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:FloatingBlock.ContentTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Good&quot;</span> <span class="attr">hc:FloatingBlock.Content</span>=<span class="string">&quot;Good&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ThumbsUpGeometry&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span> <span class="attr">hc:FloatingBlock.Duration</span>=<span class="string">&quot;0:0:1&quot;</span> <span class="attr">hc:FloatingBlock.VerticalOffset</span>=<span class="string">&quot;-20&quot;</span> <span class="attr">hc:FloatingBlock.ToX</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:FloatingBlock.ToY</span>=<span class="string">&quot;-80&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:FloatingBlock.ContentTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource ThumbsUpGeometry&#125;&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:FloatingBlock.ContentTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/FloatingBlock.gif" alt="FloatingBlock"></p>
]]></content>
  </entry>
  <entry>
    <title>GotoTop</title>
    <url>/handycontrol/extend_controls/gotoTop/index.html</url>
    <content><![CDATA[<p>You can scroll the <code>ScrollView</code> or the control with <code>ScrollView</code> to the top position by clicking <code>GotoTop</code>.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GotoTop</span> : <span class="title">Button</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Target</td>
<td><code>ScrollView</code> or controls with <code>ScrollView</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Animated</td>
<td>Whether to use animation</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>AnimationTime</td>
<td>Animation duration</td>
<td>0.2s</td>
<td></td>
</tr>
<tr>
<td>HidingHeight</td>
<td>When <code>ScrollView</code> scrolls this height, <code>GotoTop</code> will be hidden</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>AutoHiding</td>
<td>Whether to automatically hide</td>
<td>true</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ScrollViewer</span> <span class="attr">Name</span>=<span class="string">&quot;ScrollViewerDemo&quot;</span> <span class="attr">IsInertiaEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;2000&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;8,0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">LinearGradientBrush</span> <span class="attr">EndPoint</span>=<span class="string">&quot;0.5,1&quot;</span> <span class="attr">StartPoint</span>=<span class="string">&quot;0.5,0&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">&quot;White&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">LinearGradientBrush</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border.Background</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ScrollViewer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:GotoTop</span> <span class="attr">Animated</span>=<span class="string">&quot;True&quot;</span> <span class="attr">AutoHiding</span>=<span class="string">&quot;True&quot;</span> <span class="attr">AnimationTime</span>=<span class="string">&quot;500&quot;</span> <span class="attr">Target</span>=<span class="string">&quot;&#123;Binding ElementName=ScrollViewerDemo&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Bottom&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,20,20&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/GoToTop.gif" alt="GotoTop"></p>
]]></content>
  </entry>
  <entry>
    <title>GifImage</title>
    <url>/handycontrol/extend_controls/gifImage/index.html</url>
    <content><![CDATA[<p>Wpf implementation of Gif.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GifImage</span> : <span class="title">Image</span>, <span class="title">IDisposable</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Uri</td>
<td>Picture Uri</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">x:Name</span>=<span class="string">&quot;GifImageMain&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;None&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/car_chase.gif&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:GifImage</span>  <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">hc:GifImage.Source</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">BitmapImage</span> <span class="attr">UriSource</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/car_chase.gif&quot;</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">hc:GifImage.Source</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">hc:GifImage</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/GifImage.gif" alt="GifImage"></p>
<div class="note warning">
            <p>When you no longer use <code>GifImage</code>, remember to call the <code>Dispose</code> method to clean up resources.</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Flex</title>
    <url>/handycontrol/data/Flex/index.html</url>
    <content><![CDATA[<div class="note info no-icon">
            <p>enum(int)</p>
          </div>

<h1 id="FlexContentAlignment"><a href="#FlexContentAlignment" class="headerlink" title="FlexContentAlignment"></a>FlexContentAlignment</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Stretch</td>
</tr>
<tr>
<td>FlexStart</td>
</tr>
<tr>
<td>FlexEnd</td>
</tr>
<tr>
<td>Center</td>
</tr>
<tr>
<td>SpaceBetween</td>
</tr>
<tr>
<td>SpaceAround</td>
</tr>
</tbody></table>
<h1 id="FlexContentJustify"><a href="#FlexContentJustify" class="headerlink" title="FlexContentJustify"></a>FlexContentJustify</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>FlexStart</td>
</tr>
<tr>
<td>FlexEnd</td>
</tr>
<tr>
<td>Center</td>
</tr>
<tr>
<td>SpaceBetween</td>
</tr>
<tr>
<td>SpaceAround</td>
</tr>
</tbody></table>
<h1 id="FlexDirection"><a href="#FlexDirection" class="headerlink" title="FlexDirection"></a>FlexDirection</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Row</td>
</tr>
<tr>
<td>RowReverse</td>
</tr>
<tr>
<td>Column</td>
</tr>
<tr>
<td>ColumnReverse</td>
</tr>
</tbody></table>
<h1 id="FlexItemAlignment"><a href="#FlexItemAlignment" class="headerlink" title="FlexItemAlignment"></a>FlexItemAlignment</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Auto</td>
</tr>
<tr>
<td>FlexStart</td>
</tr>
<tr>
<td>FlexEnd</td>
</tr>
<tr>
<td>Center</td>
</tr>
<tr>
<td>Baseline</td>
</tr>
<tr>
<td>Stretch</td>
</tr>
</tbody></table>
<h1 id="FlexItemsAlignment"><a href="#FlexItemsAlignment" class="headerlink" title="FlexItemsAlignment"></a>FlexItemsAlignment</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>Stretch</td>
</tr>
<tr>
<td>FlexStart</td>
</tr>
<tr>
<td>FlexEnd</td>
</tr>
<tr>
<td>Center</td>
</tr>
<tr>
<td>Baseline</td>
</tr>
</tbody></table>
<h1 id="FlexWrap"><a href="#FlexWrap" class="headerlink" title="FlexWrap"></a>FlexWrap</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>NoWrap</td>
</tr>
<tr>
<td>Wrap</td>
</tr>
<tr>
<td>WrapReverse</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>GlowWindow</title>
    <url>/handycontrol/extend_controls/glowWindow/index.html</url>
    <content><![CDATA[<p>A window with a glow effect on the border, the code is extracted from Visual Studio</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GlowWindow</span> : <span class="title">Window</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ActiveGlowColor</td>
<td>Glow color when the window is activated</td>
<td></td>
<td></td>
</tr>
<tr>
<td>InactiveGlowColor</td>
<td>Glow color when the window is inactive</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:GlowWindow</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.Window.GlowWindow&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:langs</span>=<span class="string">&quot;clr-namespace:HandyControlDemo.Properties.Langs&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:ex</span>=<span class="string">&quot;clr-namespace:HandyControlDemo.Tools.Extension&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource WindowGlow&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource MainContentBackgroundBrush&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">WindowStartupLocation</span>=<span class="string">&quot;CenterScreen&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Title</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.Title&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">ActiveGlowColor</span>=<span class="string">&quot;&#123;DynamicResource PrimaryColor&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Height</span>=<span class="string">&quot;450&quot;</span> </span></span><br><span class="line"><span class="tag">               <span class="attr">Width</span>=<span class="string">&quot;800&quot;</span> </span></span><br><span class="line"><span class="tag">               <span class="attr">Icon</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/icon.ico&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource MainContentForegroundDrawingBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:GlowWindow</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/GlowWindow.png" alt="GlowWindow"></p>
]]></content>
  </entry>
  <entry>
    <title>Grid</title>
    <url>/handycontrol/extend_controls/grid/index.html</url>
    <content><![CDATA[<p>Wpf implementation of grid system, web version can refer to <a href="https://element.eleme.cn/#/en-US/component/layout">element/layout</a></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Row</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Col</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><h2 id="Row"><a href="#Row" class="headerlink" title="Row"></a>Row</h2><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Gutter</td>
<td>Grid Interval</td>
<td>0</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Col-column"><a href="#Col-column" class="headerlink" title="Col column"></a>Col column</h2><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Layout</td>
<td>Layout Method</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Offset</td>
<td>The number of intervals on the left side of the grid</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Span</td>
<td>Number of columns occupied by the grid</td>
<td>24</td>
<td></td>
</tr>
<tr>
<td>IsFixed</td>
<td>Is the column fixed</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.BasicLayout&#125;&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.ColumnSpacing&#125;&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.HybridLayout&#125;&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.ColumnOffset&#125;&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;ex:Lang Key=&#123;x:Static langs:LangKeys.ResponsiveLayout&#125;&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Row</span> <span class="attr">Margin</span>=<span class="string">&quot;0,20,0,0&quot;</span> <span class="attr">Gutter</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Layout</span>=<span class="string">&quot;8,6,4,3,1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Layout</span>=<span class="string">&quot;4 6 8 9 11&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Layout</span>=<span class="string">&quot;&#123;extension:ColLayout Xs=4, Sm=6, Md=8, Lg=9, Xl=11&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Layout</span>=<span class="string">&quot;&#123;extension:ColLayout Xs=8, Sm=6, Md=4, Lg=3, Xl=1&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryBorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Grid.gif" alt="Grid"></p>
<div class="note info">
            <p>3 ways to write <code>Layout</code> in xaml:<br>Layout=”{extension:ColLayout Xs=4, Sm=6, Md=8, Lg=9, Xl=11}”<br>Layout=”4,6,8,9,11”<br>Layout=”4 6 8 9 11”</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Gravatar</title>
    <url>/handycontrol/extend_controls/gravatar/index.html</url>
    <content><![CDATA[<p>A way to implement random avatars for users.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Gravatar</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Generator</td>
<td>Avatar Generator</td>
<td>GithubGravatarGenerator</td>
<td></td>
</tr>
<tr>
<td>Id</td>
<td>UserId</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Source</td>
<td>User Profile</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h1><table>
<thead>
<tr>
<th>Style</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>GravatarBaseStyle</td>
<td>Default Style</td>
</tr>
<tr>
<td>GravatarCircle</td>
<td>Circle Head</td>
</tr>
<tr>
<td>GravatarCircleImg</td>
<td>Circle picture avatar</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;240&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;240&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Id</span>=<span class="string">&quot;User1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Id</span>=<span class="string">&quot;User2&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource GravatarCircleImg&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/2.jpg&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Gravatar</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Id</span>=<span class="string">&quot;User4&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Id</span>=<span class="string">&quot;User5&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource GravatarCircle&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Id</span>=<span class="string">&quot;User6&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource GravatarCircle&#125;&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/1.jpg&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Id</span>=<span class="string">&quot;User8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Id</span>=<span class="string">&quot;User9&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;220&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Text</span>=<span class="string">&quot;User1&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;TextBoxName&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Height</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Id</span>=<span class="string">&quot;&#123;Binding Text,ElementName=TextBoxName&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Gravatar.gif" alt="Gravatar"></p>
]]></content>
  </entry>
  <entry>
    <title>Growl Information notification</title>
    <url>/handycontrol/extend_controls/growl/index.html</url>
    <content><![CDATA[<p>This control can be used when you want to arrange notification information from top to bottom in the right area of the window.</p>
<h1 id="Control-effect"><a href="#Control-effect" class="headerlink" title="Control effect"></a>Control effect</h1><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Growl.gif" alt="Growl"></p>
<h1 id="Ready-to-work"><a href="#Ready-to-work" class="headerlink" title="Ready to work"></a>Ready to work</h1><p>Add a <code>StackPanel</code> container to the right side of the specified window</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrollViewer</span> <span class="attr">VerticalScrollBarVisibility</span>=<span class="string">&quot;Hidden&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,10,10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ScrollViewer</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In order to facilitate scrolling, a <code>ScrollViewer</code> is usually wrapped in the outer layer. At the same time, for the sake of beauty, we set <code>VerticalScrollBarVisibility=&quot;Hidden&quot;</code> of <code>ScrollViewer</code>. It is best to add a suitable <code>Margin</code> to <code>StackPanel</code>, which is also for aesthetics.</p>
<h1 id="Basic-usage"><a href="#Basic-usage" class="headerlink" title="Basic usage"></a>Basic usage</h1><p>Step 1: Set <code>StackPanel</code> to the container of <code>Growl</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrollViewer</span> <span class="attr">VerticalScrollBarVisibility</span>=<span class="string">&quot;Hidden&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">hc:Growl.GrowlParent</span>=<span class="string">&quot;True&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,10,10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ScrollViewer</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>Note the code <code>hc:Growl.GrowlParent=&quot;True&quot;</code>。</p>
          </div>

<div class="note warning">
            <p>If user do not set <code>hc:Growl.GrowlParent=&quot;True&quot;</code>, growl will create a default panel.</p>
          </div>

<p>Step 2: Call the relevant interface of <code>Growl</code> to display the specified message.</p>
<div class="note info no-icon">
            <p>Use case: <code>Growl.Success(&quot;File saved successfully!&quot;);</code></p>
          </div>

<h1 id="Display-information-notification-only-in-the-active-window"><a href="#Display-information-notification-only-in-the-active-window" class="headerlink" title="Display information notification only in the active window"></a>Display information notification only in the active window</h1><p>Rewrite <code>OnActivated</code> and <code>OnDeactivated</code> methods for windows that need to display information notifications, call <code>Growl.SetGrowlParent(GrowlPanel, true);</code> in <code>OnActivated</code>, call <code>Growl.SetGrowlParent(GrowlPanel, false) in </code>OnDeactivated`</p>
<div class="note warning">
            <p>Where <code>GrowlPanel</code> is the information notification container, the type recommendation is <code>StackPanel</code></p>
          </div>

<div class="note warning">
            <p>Need to explain here, a window corresponds to a <code>StackPanel</code> container, Growl internally maintains a variable to store this container, each time the notification is triggered, the instance of Growl will be inserted into the container, that is, each call <code>Growl.SetGrowlParent(GrowlPanel, true);</code>, <code>GrowlPanel</code> will become the internal variable.</p>
          </div>

<div class="note warning">
            <p>In this case, you don’t need to set <code>hc:Growl.GrowlParent=&quot;True&quot;</code> in xaml.</p>
          </div>

<h1 id="Display-information-notifications-in-any-StackPanel-container"><a href="#Display-information-notifications-in-any-StackPanel-container" class="headerlink" title="Display information notifications in any StackPanel container"></a>Display information notifications in any <code>StackPanel</code> container</h1><p>Step 1: Give the message to the <code>StackPanel</code> container: SuccessMsg</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrollViewer</span> <span class="attr">VerticalScrollBarVisibility</span>=<span class="string">&quot;Hidden&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">hc:Growl.Token</span>=<span class="string">&quot;SuccessMsg&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,10,10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ScrollViewer</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>Note the code<code>hc:Growl.Token=&quot;SuccessMsg&quot;</code>。</p>
          </div>

<p>Step 2: Use the message tag: SuccessMsg and call the relevant interface of <code>Growl</code> to display the specified message.</p>
<div class="note info no-icon">
            <p>Example：<code>Growl.Success(&quot;File saved successfully!&quot;, &quot;SuccessMsg&quot;);</code></p>
          </div>

<div class="note warning">
            <p>Now the “File saved successfully!” message will only be sent to the <code>StackPanel</code> container with the “SuccessMsg” message tag.</p>
          </div>

<h1 id="Global-Usage"><a href="#Global-Usage" class="headerlink" title="Global Usage"></a>Global Usage</h1><p>you can use growl in desktop Not just the app itself<br>In this case you don’t need anything just use <code>Growl.XXXGlobal</code> to display the message</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Growl.InfoGlobal(<span class="string">&quot;GrowlInfo&quot;</span>);</span><br><span class="line"><span class="comment">//OR</span></span><br><span class="line">Growl.SuccessGlobal(<span class="string">&quot;GrowlSuccess&quot;</span>);</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">Growl.WarningGlobal(<span class="keyword">new</span> GrowlInfo</span><br><span class="line">            &#123;</span><br><span class="line">                Message = <span class="string">&quot;GrowlWarning&quot;</span>,</span><br><span class="line">                CancelStr = <span class="string">&quot;Ignore&quot;</span>,</span><br><span class="line">                ActionBeforeClose = isConfirmed =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    Growl.InfoGlobal(isConfirmed.ToString());</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">Growl.ErrorGlobal(<span class="string">&quot;GrowlError&quot;</span>);</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">Growl.AskGlobal(<span class="string">&quot;GrowlAsk&quot;</span>, isConfirmed =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                Growl.InfoGlobal(isConfirmed.ToString());</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">Growl.FatalGlobal(<span class="keyword">new</span> GrowlInfo</span><br><span class="line">            &#123;</span><br><span class="line">                Message = <span class="string">&quot;GrowlFatal&quot;</span>,</span><br><span class="line">                ShowDateTime = <span class="literal">false</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="comment">// And for Clearing growls</span></span><br><span class="line">Growl.ClearGlobal();</span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>GrowlPanel</td>
<td>Currently used message container</td>
</tr>
</tbody></table>
<h1 id="Additional-attribute"><a href="#Additional-attribute" class="headerlink" title="Additional attribute"></a>Additional attribute</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Token</td>
<td>Used to set message tags</td>
</tr>
<tr>
<td>GrowlParent</td>
<td>for setting up message containers</td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Success(string)</td>
<td>Show a success notification</td>
</tr>
<tr>
<td>Success(string, string)</td>
<td>Display a success notification with the specified message tag</td>
</tr>
<tr>
<td>Success(GrowlInfo)</td>
<td>Use a full message initialization model to display a success notification</td>
</tr>
<tr>
<td>SuccessGlobal(string)</td>
<td>Display a global success notification</td>
</tr>
<tr>
<td>SuccessGlobal(GrowlInfo)</td>
<td>Display a Global Success notification with the full message initialization model</td>
</tr>
<tr>
<td>Info(string)</td>
<td>Show a message notification</td>
</tr>
<tr>
<td>Info(string, string)</td>
<td>Display a message notification with the specified message tag</td>
</tr>
<tr>
<td>Info(GrowlInfo)</td>
<td>Display a message notification with the full message initialization model</td>
</tr>
<tr>
<td>InfoGlobal(string)</td>
<td>Display a global Info notification</td>
</tr>
<tr>
<td>InfoGlobal(GrowlInfo)</td>
<td>Display a Global Info notification with the full message initialization model</td>
</tr>
<tr>
<td>Warning(string)</td>
<td>Show a warning notification</td>
</tr>
<tr>
<td>Warning(string, string)</td>
<td>Display a warning notification with the specified message tag</td>
</tr>
<tr>
<td>Warning(GrowlInfo)</td>
<td>Display a warning notification with the full message initialization model</td>
</tr>
<tr>
<td>WarningGlobal(string)</td>
<td>Display a global warning notification</td>
</tr>
<tr>
<td>WarningGlobal(GrowlInfo)</td>
<td>Display a Global Warning notification with the full message initialization model</td>
</tr>
<tr>
<td>Error(string)</td>
<td>Show an error notification</td>
</tr>
<tr>
<td>Error(string, string)</td>
<td>Display an error notification with the specified message tag</td>
</tr>
<tr>
<td>Error(GrowlInfo)</td>
<td>Displaying an error notification with a full message initialization model</td>
</tr>
<tr>
<td>ErrorGlobal(string)</td>
<td>Display a global Error notification</td>
</tr>
<tr>
<td>ErrorGlobal(GrowlInfo)</td>
<td>Display a Error Fatal notification with the full message initialization model</td>
</tr>
<tr>
<td>Fatal(string)</td>
<td>Show a critical notification</td>
</tr>
<tr>
<td>Fatal(string, string)</td>
<td>Display a serious notification with the specified message tag</td>
</tr>
<tr>
<td>Fatal(GrowlInfo)</td>
<td>Display a serious notification with the full message initialization model</td>
</tr>
<tr>
<td>FatalGlobal(string)</td>
<td>Display a global Fatal notification</td>
</tr>
<tr>
<td>FatalGlobal(GrowlInfo)</td>
<td>Display a Global Fatal notification with the full message initialization model</td>
</tr>
<tr>
<td>Ask(string, Func&lt;bool, bool&gt;)</td>
<td>Show a notification</td>
</tr>
<tr>
<td>Ask(string, Func&lt;bool, bool&gt;, string)</td>
<td>Display a notification with the specified message tag</td>
</tr>
<tr>
<td>Ask(GrowlInfo)</td>
<td>Use a full message initialization model to display a notification</td>
</tr>
<tr>
<td>AskGlobal(string, Func&lt;bool, bool&gt;)</td>
<td>Show a global notification</td>
</tr>
<tr>
<td>AskGlobal(GrowlInfo)</td>
<td>Display a Global Ask notification with the full message initialization model</td>
</tr>
<tr>
<td>Register(string, Panel)</td>
<td>Register message tags for the specified container</td>
</tr>
<tr>
<td>Unregister(string, Panel)</td>
<td>Unregister the message tag for the specified container</td>
</tr>
<tr>
<td>Unregister(Panel)</td>
<td>Unregister if the container is registered with a message tag</td>
</tr>
<tr>
<td>Unregister(string)</td>
<td>Unregister if the message is marked with a corresponding container</td>
</tr>
<tr>
<td>Clear( )</td>
<td>Clear messages in the currently used message container</td>
</tr>
<tr>
<td>Clear(string)</td>
<td>Clear the message in the message container with the specified message tag</td>
</tr>
<tr>
<td>Clear(Panel)</td>
<td>Empty messages in the specified container</td>
</tr>
<tr>
<td>ClearGlobal( )</td>
<td>Empty messages in the global container</td>
</tr>
</tbody></table>
<h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><p><code>Error</code> and <code>Fatal</code> modes are not turned off automatically.</p>
<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><div class="note info no-icon">
            <p>Ask is special, what?</p>
          </div>

<p>The main focus of the Ask method is the second parameter, its type is <code>Func&lt;bool, bool&gt;</code>, let’s look at the sample code:</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Growl.Ask(<span class="string">&quot;do you want to update?&quot;</span>, isConfirmed =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    Growl.Info(isConfirmed.ToString());</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>By using the Ask method, the “confirm” and “cancel” buttons are displayed by default. When you click “confirm”, the value of <code>isConfirmed</code> in the above code is <code>true</code>, and clicking “cancel” is <code>false&quot;, which can be based on </code>isConfirmed The value of <code>takes the corresponding action. Finally, if you return</code>true<code>, the Growl notification will be closed, and if </code>false` is returned, it will not be closed.</p>
]]></content>
  </entry>
  <entry>
    <title>HatchBrushGenerator</title>
    <url>/handycontrol/extend_controls/hatchBrushGenerator/index.html</url>
    <content><![CDATA[<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Style</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Horizontal</td>
<td>Vertical</td>
<td>ForwardDiagonal</td>
<td>BackwardDiagonal</td>
</tr>
<tr>
<td>Cross</td>
<td>DiagonalCross</td>
<td>Percent05</td>
<td>Percent10</td>
</tr>
<tr>
<td>Percent20</td>
<td>Percent25</td>
<td>Percent30</td>
<td>Percent40</td>
</tr>
<tr>
<td>Percent50</td>
<td>Percent60</td>
<td>Percent70</td>
<td>Percent75</td>
</tr>
<tr>
<td>Percent80</td>
<td>Percent90</td>
<td>LightDownwardDiagonal</td>
<td>LightUpwardDiagonal</td>
</tr>
<tr>
<td>DarkDownwardDiagonal</td>
<td>DarkUpwardDiagonal</td>
<td>WideDownwardDiagonal</td>
<td>WideUpwardDiagonal</td>
</tr>
<tr>
<td>LightVertical</td>
<td>LightHorizontal</td>
<td>NarrowVertical</td>
<td>NarrowHorizontal</td>
</tr>
<tr>
<td>DarkVertical</td>
<td>DarkHorizontal</td>
<td>DashedDownwardDiagonal</td>
<td>DashedUpwardDiagonal</td>
</tr>
<tr>
<td>DashedHorizontal</td>
<td>DashedVertical</td>
<td>SmallConfetti</td>
<td>LargeConfetti</td>
</tr>
<tr>
<td>ZigZag</td>
<td>Wave</td>
<td>DiagonalBrick</td>
<td>HorizontalBrick</td>
</tr>
<tr>
<td>Weave</td>
<td>Plaid</td>
<td>Divot</td>
<td>DottedGrid</td>
</tr>
<tr>
<td>DottedDiamond</td>
<td>Shingle</td>
<td>Trellis</td>
<td>Sphere</td>
</tr>
<tr>
<td>SmallGrid</td>
<td>SmallCheckerBoard</td>
<td>LargeCheckerBoard</td>
<td>OutlinedDiamond</td>
</tr>
<tr>
<td>SolidDiamond</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h1><table>
<thead>
<tr>
<th>Method</th>
</tr>
</thead>
<tbody><tr>
<td>GetHashCode</td>
</tr>
<tr>
<td>GetHatchBrush</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><p>first create ObjectProvider in App.xaml<br><code>xmlns:sys=&quot;clr-namespace:System;assembly=mscorlib&quot;</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">ObjectDataProvider</span> <span class="attr">x:Key</span>=<span class="string">&quot;HatchStyles&quot;</span> <span class="attr">MethodName</span>=<span class="string">&quot;GetValues&quot;</span> <span class="attr">ObjectType</span>=<span class="string">&quot;sys:Enum&quot;</span>&gt;</span></span><br><span class="line">	                <span class="tag">&lt;<span class="name">ObjectDataProvider.MethodParameters</span>&gt;</span></span><br><span class="line">	                    <span class="tag">&lt;<span class="name">x:Type</span> <span class="attr">Type</span>=<span class="string">&quot;hc:HatchStyle&quot;</span>/&gt;</span></span><br><span class="line">	                <span class="tag">&lt;/<span class="name">ObjectDataProvider.MethodParameters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ObjectDataProvider</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>then create a HatchBrushConverter converter</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HatchBrushConverter</span> : <span class="title">IValueConverter</span></span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">private</span> <span class="keyword">readonly</span> HatchBrushGenerator _brushGenerator;</span><br><span class="line">	</span><br><span class="line">	        <span class="function"><span class="keyword">public</span> <span class="title">HatchBrushConverter</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>	        &#123;</span><br><span class="line">	            _brushGenerator = <span class="keyword">new</span> HatchBrushGenerator();</span><br><span class="line">	        &#125;</span><br><span class="line">	</span><br><span class="line">	        <span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">Convert</span>(<span class="params"><span class="built_in">object</span> <span class="keyword">value</span>, Type targetType, <span class="built_in">object</span> parameter, CultureInfo culture</span>)</span></span><br><span class="line"><span class="function"></span>	        &#123;</span><br><span class="line">	            <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> HatchStyle style)</span><br><span class="line">	            &#123;</span><br><span class="line">	                <span class="keyword">return</span> _brushGenerator.GetHatchBrush(style, ResourceHelper.GetResource&lt;Color&gt;(<span class="string">&quot;DarkPrimaryColor&quot;</span>), ResourceHelper.GetResource&lt;Color&gt;(<span class="string">&quot;BackgroundColor&quot;</span>));</span><br><span class="line">	            &#125;</span><br><span class="line">	            <span class="keyword">return</span> Brushes.Transparent;</span><br><span class="line">	        &#125;</span><br><span class="line">	</span><br><span class="line">	        <span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">ConvertBack</span>(<span class="params"><span class="built_in">object</span> <span class="keyword">value</span>, Type targetType, <span class="built_in">object</span> parameter, CultureInfo culture</span>)</span></span><br><span class="line"><span class="function"></span>	        &#123;</span><br><span class="line">	            <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br></pre></td></tr></table></figure>
<p>now you can use hatch</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;Binding SelectedValue,ElementName=ComboBoxDemo,Converter=&#123;StaticResource HatchBrushConverter&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;ComboBoxDemo&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Source=&#123;StaticResource HatchStyles&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>HoneycombPanel</title>
    <url>/handycontrol/extend_controls/honeycombPanel/index.html</url>
    <content><![CDATA[<p>A container that allows child elements to present a honeycomb layout.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HoneycombPanel</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<h1 id="Honeycomb-layout"><a href="#Honeycomb-layout" class="headerlink" title="Honeycomb layout"></a>Honeycomb layout</h1><p>Other elements will start from the first element and wrap around:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">         ●       ●</span><br><span class="line">        (7)     (8)</span><br><span class="line">     ●       ●       ●</span><br><span class="line">    (6)     (1)     (9)</span><br><span class="line"> ●       ●       ●       ...</span><br><span class="line">(5)     (0)     (2)</span><br><span class="line">     ●       ●       ...</span><br><span class="line">    (4)     (3)</span><br></pre></td></tr></table></figure>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Background</span>=<span class="string">&quot;Transparent&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ListBoxCustom&#125;&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemsPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ItemsPanelTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:HoneycombPanel</span> <span class="attr">hc:PanelElement.FluidMoveBehavior</span>=<span class="string">&quot;&#123;StaticResource BehaviorXY200&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ItemsPanelTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemsPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Gravatar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource GravatarCircle&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;Binding Content&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/HoneycombPanel.png" alt="HoneycombPanel"></p>
]]></content>
  </entry>
  <entry>
    <title>ImageBrowser</title>
    <url>/handycontrol/extend_controls/imageBrowser/index.html</url>
    <content><![CDATA[<p>You can easily browse a single picture with the help of <code>ImageBrowser</code>.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ImageBrowser</span> : <span class="title">Window</span></span><br></pre></td></tr></table></figure>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><p>After the constructor passes in the picture address, you can start to browse the picture:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> ImageBrowser(<span class="keyword">new</span> Uri(<span class="string">&quot;pack://application:,,,/Resources/Img/1.jpg&quot;</span>)).Show()</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ImageBrowser.gif" alt="ImageBrowser"></p>
<h1 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h1><p>The screenshot of the function panel is as follows:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/ImageBrowser_1.png" alt="ImageBrowser"></p>
<p>The functions from left to right are: <code>Save to local</code>, <code>Open the picture with the system default program</code>, <code>Zoom out the picture</code>, <code>Enlarge the picture</code>, <code>Original size</code>, <code>Turn left picture</code>, <code>Turn right picture</code> .</p>
]]></content>
  </entry>
  <entry>
    <title>HighlightTextBlock</title>
    <url>/handycontrol/extend_controls/highlightTextBlock/index.html</url>
    <content><![CDATA[<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HighlightTextBlock</span> : <span class="title">TextBlock</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>SourceText</td>
</tr>
<tr>
<td>QueriesText</td>
</tr>
<tr>
<td>HighlightBrush</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:HighlightTextBlock</span> <span class="attr">SourceText</span>=<span class="string">&quot;some text for example&quot;</span> <span class="attr">QueriesText</span>=<span class="string">&quot;text example&quot;</span> <span class="attr">HighlightBrush</span>=<span class="string">&quot;#f06632&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://user-images.githubusercontent.com/8541016/132226875-46f655a0-35a1-4ef6-90f7-f1554da6acad.png" alt="HighlightTextBlock"></p>
]]></content>
  </entry>
  <entry>
    <title>VisualElement</title>
    <url>/handycontrol/attach/visualElement/index.html</url>
    <content><![CDATA[<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Use</th>
</tr>
</thead>
<tbody><tr>
<td>HighlightBrush</td>
<td>Set Control Highlight Color</td>
</tr>
<tr>
<td>HighlightBackground</td>
<td>Set the highlight background color of the control</td>
</tr>
<tr>
<td>HighlightBorderBrush</td>
<td>Set the highlight border color of the control</td>
</tr>
<tr>
<td>HighlightForeground</td>
<td>Set the highlight foreground color of the control</td>
</tr>
<tr>
<td>Text</td>
<td>Set text content</td>
</tr>
</tbody></table>
<h1 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h1><h2 id="HighlightBrush-Set-control-highlight-color"><a href="#HighlightBrush-Set-control-highlight-color" class="headerlink" title="HighlightBrush Set control highlight color"></a>HighlightBrush Set control highlight color</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Margin</span>=<span class="string">&quot;22,22,0,0&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,0,0&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RadioButtonIcon&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">GroupName</span>=<span class="string">&quot;radio1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,0,0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RadioButtonIcon&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">hc:VisualElement.HighlightBrush</span>=<span class="string">&quot;YellowGreen&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">Content</span>=<span class="string">&quot;RadioButton&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">GroupName</span>=<span class="string">&quot;radio2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The following screenshot is a set of highlight comparison results when selected. The left picture is the style <code>default color</code>, and the right is the personal <code>custom color</code>.</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/VisualElement.HighlightBrush.png" alt="VisualElement.HighlightBrush"></p>
<h2 id="Text-Set-text-content"><a href="#Text-Set-text-content" class="headerlink" title="Text Set text content"></a>Text Set text content</h2><p>It is mainly used to set the auxiliary text of the control. When the control does not have appropriate properties for displaying the text, this additional property can be set in the custom style.</p>
<p>For example: when the custom progress bar needs to display text, it lacks the property of displaying extra text content, and the corresponding text can be displayed through a custom style, with <code>Text</code> as the text content carrying property</p>
<p>Custom style:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:</span> <span class="attr">Key</span> = <span class="string">&quot;ProgressBarBaseStyle&quot;</span> <span class="attr">TargetType</span> = <span class="string">&quot;ProgressBar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span> = <span class="string">&quot;hc: VisualElement.Text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="css">                ..... ignore <span class="selector-tag">code</span> ...</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span> = <span class="string">&quot;Template&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">TargetType</span> = <span class="string">&quot;ProgressBar&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">x:</span> <span class="attr">Name</span> = <span class="string">&quot;TemplateRoot&quot;</span>&gt;</span></span></span><br><span class="line"><span class="css">.... ignore <span class="selector-tag">code</span> ...</span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">HorizontalAlignment</span> = <span class="string">&quot;Left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="css">                            .... ignore <span class="selector-tag">code</span> ...</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span> = <span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span> = <span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span> = <span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span> <span class="attr">Text</span> = <span class="string">&quot;&#123;Binding Path = (hc: VisualElement.Text), RelativeSource = &#123;RelativeSource TemplatedParent&#125;&#125;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Use in <code>xaml</code>:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Margin</span> = <span class="string">&quot;22,22,0,0&quot;</span> <span class="attr">Rows</span> = <span class="string">&quot;2&quot;</span> <span class="attr">Columns</span> = <span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span> = <span class="string">&quot;&#123;DynamicResource ProgressBarDanger&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">hc:VisualElement.Text</span> = <span class="string">&quot;This is visual text&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">Background</span> = <span class="string">&quot;YellowGreen&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">ProgressBar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/attach/VisualElement.Text.png" alt="VisualElement.Text"></p>
]]></content>
  </entry>
  <entry>
    <title>ImageViewer</title>
    <url>/handycontrol/extend_controls/imageViewer/index.html</url>
    <content><![CDATA[<p><code>ImageViewer</code> is the core component of <code>ImageBrowser</code>, it can be used as an independent control without pop-up windows.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementPanelMain, Type = typeof(Panel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementCanvasSmallImg, Type = typeof(Canvas))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderMove, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderBottom, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementImageMain, Type = typeof(Image))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ImageViewer</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ShowImgMap</td>
<td>Whether to display the small map</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>ImageSource</td>
<td>Image Resources</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IsFullScreen</td>
<td>Is it in full screen display</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ImageViewer</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;330&quot;</span> <span class="attr">ImageSource</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/1.jpg&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/ImageViewer_1.png" alt="ImageViewer"></p>
]]></content>
  </entry>
  <entry>
    <title>Loading</title>
    <url>/handycontrol/extend_controls/loading/index.html</url>
    <content><![CDATA[<p>Display dynamic effects during time-consuming operation. Currently, it contains circular and linear loading bars. Related blog post: <a href="https://www.cnblogs.com/nabian/p/9288576.html">“WPF control library-imitating the progress bar of Windows 10”</a></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">LoadingBase</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoadingLine</span> : <span class="title">LoadingBase</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoadingCircle</span> : <span class="title">LoadingBase</span></span><br></pre></td></tr></table></figure>
<h1 id="LoadingBase-attribute"><a href="#LoadingBase-attribute" class="headerlink" title="LoadingBase attribute"></a>LoadingBase attribute</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>IsRunning</td>
<td>Is it currently loading</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>DotCount</td>
<td>Number of Dots</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>DotInterval</td>
<td>Dot Interval</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>DotBorderBrush</td>
<td>Dot border color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>DotBorderThickness</td>
<td>Dot border thickness</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>DotDiameter</td>
<td>Dot radius</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td>DotSpeed</td>
<td>The time taken for one cycle</td>
<td>4s</td>
<td></td>
</tr>
<tr>
<td>DotDelayTime</td>
<td>Animation delay of each point</td>
<td>80ms</td>
<td></td>
</tr>
</tbody></table>
<h1 id="LoadingCircle-property"><a href="#LoadingCircle-property" class="headerlink" title="LoadingCircle property"></a>LoadingCircle property</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>DotOffSet</td>
<td>Dot Offset</td>
<td>20</td>
<td></td>
</tr>
<tr>
<td>NeedHidden</td>
<td>Does the dot need to be hidden in the middle of the movement</td>
<td>true</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Style for LoadingLine</th>
<th>Style for LoadingCircle</th>
</tr>
</thead>
<tbody><tr>
<td>LoadingLineLarge</td>
<td>LoadingCircleLarge</td>
</tr>
<tr>
<td>LoadingLineLargeLight</td>
<td>LoadingCircleLargeLight</td>
</tr>
<tr>
<td>LoadingLineLight</td>
<td>LoadingCircleLight</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:LoadingLine</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:LoadingLine</span> <span class="attr">Margin</span>=<span class="string">&quot;0,30&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;BlueViolet&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource LoadingLineLarge&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:LoadingCircle</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:LoadingCircle</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource LoadingCircleLight&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Loading.gif" alt="Loading"></p>
]]></content>
  </entry>
  <entry>
    <title>Magnifier</title>
    <url>/handycontrol/extend_controls/magnifier/index.html</url>
    <content><![CDATA[<p>With the help of <code>Magnifier</code>, any control can be partially magnified.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementVisualBrush, Type = typeof(VisualBrush))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Magnifier</span> : <span class="title">AdornerElement</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>HorizontalOffset</td>
<td>Horizontal offset relative to the mouse</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>VerticalOffset</td>
<td>Vertical offset relative to the mouse</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Scale</td>
<td>Scale factor</td>
<td>5.0</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Image</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:Magnifier.Instance</span>=<span class="string">&quot;&#123;x:Static hc:Magnifier.Default&#125;&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/b1.jpg&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;None&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Image</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/b1.jpg&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;None&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Magnifier.Instance</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Magnifier</span> <span class="attr">Scale</span>=<span class="string">&quot;6&quot;</span> <span class="attr">HorizontalOffset</span>=<span class="string">&quot;-16&quot;</span> <span class="attr">VerticalOffset</span>=<span class="string">&quot;-16&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Magnifier.Instance</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Image</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Magnifier.png" alt="Magnifier"></p>
]]></content>
  </entry>
  <entry>
    <title>MessageBox</title>
    <url>/handycontrol/extend_controls/messageBox/index.html</url>
    <content><![CDATA[<p>HC has rewritten a set of message dialogs, the usage is the same as the original one.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">MessageBox</span> : <span class="title">Window</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Message</td>
<td>Message Content</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Image</td>
<td>Message Type Diagram</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ImageBrush</td>
<td>Message type diagram color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowImage</td>
<td>Whether to display the message type schematic diagram</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Success(string, string)</td>
<td>Show a success message</td>
</tr>
<tr>
<td>Info(string, string)</td>
<td>Display a notification message</td>
</tr>
<tr>
<td>Warning(string, string)</td>
<td>Display a warning message</td>
</tr>
<tr>
<td>Error(string, string)</td>
<td>Display an error message</td>
</tr>
<tr>
<td>Fatal(string, string)</td>
<td>Display a serious message</td>
</tr>
<tr>
<td>Ask(string, string)</td>
<td>Display an inquiry message</td>
</tr>
<tr>
<td>Show(MessageBoxInfo)</td>
<td>Show a custom message</td>
</tr>
<tr>
<td>Show(string, string, MessageBoxButton, MessageBoxImage, MessageBoxResult)</td>
<td>Show a message</td>
</tr>
<tr>
<td>Show(Window, string, string, MessageBoxButton, MessageBoxImage, MessageBoxResult)</td>
<td>Show a message</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">MessageBox.Show(<span class="string">&quot;a new version has been detected!Do you want to update?&quot;</span>, <span class="string">&quot;Title&quot;</span>, MessageBoxButton.YesNo, MessageBoxImage.Question);</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/MessageBox.png" alt="MessageBox"></p>
<h1 id="Override-styles"><a href="#Override-styles" class="headerlink" title="Override styles"></a>Override styles</h1><p>you can override styles like this:<br>first in your <code>app.xaml</code> add this:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">&lt;Style x:Key=<span class="string">&quot;MessageBoxCustom&quot;</span> TargetType=<span class="string">&quot;hc:MessageBox&quot;</span> BasedOn=<span class="string">&quot;&#123;StaticResource &#123;x:Type hc:MessageBox&#125;&#125;&quot;</span>&gt;</span><br><span class="line">       &lt;Setter Property=<span class="string">&quot;NonClientAreaBackground&quot;</span> Value=<span class="string">&quot;#262e2f&quot;</span>/&gt;</span><br><span class="line">       &lt;Setter Property=<span class="string">&quot;OtherButtonHoverBackground&quot;</span> Value=<span class="string">&quot;#888580&quot;</span>/&gt;</span><br><span class="line">       &lt;Setter Property=<span class="string">&quot;OtherButtonForeground&quot;</span> Value=<span class="string">&quot;White&quot;</span>/&gt;</span><br><span class="line">       &lt;Setter Property=<span class="string">&quot;OtherButtonHoverForeground&quot;</span> Value=<span class="string">&quot;White&quot;</span>/&gt;</span><br><span class="line">       &lt;Setter Property=<span class="string">&quot;NonClientAreaForeground&quot;</span> Value=<span class="string">&quot;White&quot;</span>/&gt;</span><br><span class="line">       &lt;Setter Property=<span class="string">&quot;CloseButtonForeground&quot;</span> Value=<span class="string">&quot;White&quot;</span>/&gt;</span><br><span class="line">&lt;/Style&gt;</span><br></pre></td></tr></table></figure>
<p>now you must set this style in your messagebox:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">MessageBox.Show(<span class="keyword">new</span> MessageBoxInfo</span><br><span class="line">            &#123;</span><br><span class="line">                Message = <span class="string">&quot;Ask&quot;</span>,</span><br><span class="line">                Caption = <span class="string">&quot;Title&quot;</span>,</span><br><span class="line">                Button = MessageBoxButton.YesNo,</span><br><span class="line">                IconBrushKey = ResourceToken.AccentBrush,</span><br><span class="line">                IconKey = ResourceToken.AskGeometry,</span><br><span class="line">                StyleKey = <span class="string">&quot;MessageBoxCustom&quot;</span></span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure>
<h1 id="Customize-Button-Text"><a href="#Customize-Button-Text" class="headerlink" title="Customize Button Text"></a>Customize Button Text</h1><p><code>Only Available in Custom Version</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">MessageBox.Show(<span class="keyword">new</span> MessageBoxInfo</span><br><span class="line">            &#123;</span><br><span class="line">                Message = <span class="string">&quot;Ask&quot;</span>,</span><br><span class="line">                Caption = <span class="string">&quot;Title&quot;</span>,</span><br><span class="line">                ConfirmContent = <span class="string">&quot;Ok&quot;</span></span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>MorphingAnimation</title>
    <url>/handycontrol/extend_controls/morphingAnimation/index.html</url>
    <content><![CDATA[<p>With MorphingAnimation You can change a geometry with animation to a different geometry</p>
<div class="note info no-icon">
            <p>Geometries must have the same number of points!</p>
          </div>

<p>in your xaml add resources and storyboard</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UserControl.Resources</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Storyboard</span> <span class="attr">x:Key</span>=<span class="string">&quot;StoryboardOnLoaded&quot;</span> <span class="attr">RepeatBehavior</span>=<span class="string">&quot;Forever&quot;</span> <span class="attr">AutoReverse</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">hc:GeometryAnimationUsingKeyFrames</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Data&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PathDemo&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">hc:DiscreteGeometryKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:0.7&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;StaticResource FaceBookGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">hc:EasingGeometryKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:1.2&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;StaticResource TwitterGeometry&#125;&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">hc:EasingGeometryKeyFrame.EasingFunction</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">QuarticEase</span> <span class="attr">EasingMode</span>=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">hc:EasingGeometryKeyFrame.EasingFunction</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">hc:EasingGeometryKeyFrame</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">hc:GeometryAnimationUsingKeyFrames</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">ColorAnimationUsingKeyFrames</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Fill.(SolidColorBrush.Color)&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PathDemo&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">DiscreteColorKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:0.7&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;#3b5998&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">EasingColorKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:1.2&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;#4099ff&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">EasingColorKeyFrame.EasingFunction</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">QuarticEase</span> <span class="attr">EasingMode</span>=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">EasingColorKeyFrame.EasingFunction</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">EasingColorKeyFrame</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">EasingColorKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0:0:1.9&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;#4099ff&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">ColorAnimationUsingKeyFrames</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">UserControl.Resources</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">UserControl.Triggers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">EventTrigger</span> <span class="attr">RoutedEvent</span>=<span class="string">&quot;FrameworkElement.Loaded&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">BeginStoryboard</span> <span class="attr">Storyboard</span>=<span class="string">&quot;&#123;StaticResource StoryboardOnLoaded&#125;&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">EventTrigger</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">UserControl.Triggers</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>now we need a path to display geometry</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Path</span> <span class="attr">Name</span>=<span class="string">&quot;PathDemo&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource FaceBookGeometry&#125;&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;#3b5998&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/GeometryAnimation.gif" alt="MorphingAnimation"></p>
]]></content>
  </entry>
  <entry>
    <title>NotifyIcon</title>
    <url>/handycontrol/extend_controls/notifyIcon/index.html</url>
    <content><![CDATA[<p>The wpf implementation of the system tray icon.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NotifyIcon</span> : <span class="title">FrameworkElement</span>, <span class="title">IDisposable</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Token</td>
<td>Used to set the message mark</td>
<td></td>
<td>Used to display the bubble prompt on the specified tray icon</td>
</tr>
<tr>
<td>Text</td>
<td>Mouse prompt text</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Icon</td>
<td>Icon</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContextContent</td>
<td>Right click to pop up content</td>
<td></td>
<td></td>
</tr>
<tr>
<td>BlinkInterval</td>
<td>Blink Interval</td>
<td>500ms</td>
<td></td>
</tr>
<tr>
<td>IsBlink</td>
<td>Is it blinking</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Init()</td>
<td>Initialization</td>
</tr>
<tr>
<td>Register(string, NotifyIcon)</td>
<td>Register a message mark for the specified tray icon</td>
</tr>
<tr>
<td>Unregister(string, NotifyIcon)</td>
<td>Unregister the message mark for the specified tray icon</td>
</tr>
<tr>
<td>Unregister(NotifyIcon)</td>
<td>If the tray icon is registered with a message mark, cancel the registration</td>
</tr>
<tr>
<td>Unregister(string)</td>
<td>Unregister if the message is marked with a corresponding tray icon</td>
</tr>
<tr>
<td>ShowBalloonTip(string, string, NotifyIconInfoType, string)</td>
<td>Show bubble tip</td>
</tr>
<tr>
<td>ShowBalloonTip(string, string, NotifyIconInfoType)</td>
<td>Show bubble tip</td>
</tr>
<tr>
<td>CloseContextControl()</td>
<td>Close the context control</td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Click</td>
<td>Triggered when clicked</td>
</tr>
<tr>
<td>MouseDoubleClick</td>
<td>Triggered on double click</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NotifyIcon</span> <span class="attr">Text</span>=<span class="string">&quot;HandyControl&quot;</span> <span class="attr">IsBlink</span>=<span class="string">&quot;true&quot;</span> <span class="attr">Visibility</span>=<span class="string">&quot;Visible&quot;</span> <span class="attr">Icon</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/icon-white.ico&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NotifyIcon</span> <span class="attr">Text</span>=<span class="string">&quot;HandyControl&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">hc:NotifyIcon.ContextMenu</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">ContextMenu</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.PushMainWindow2Top&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Open&quot;</span>/&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.ShutdownApp&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Exit&quot;</span>/&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">ContextMenu</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">hc:NotifyIcon.ContextMenu</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">hc:NotifyIcon</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NotifyIcon</span> <span class="attr">Text</span>=<span class="string">&quot;HandyControl&quot;</span> <span class="attr">Icon</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/icon-white.ico&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:NotifyIcon.ContextContent</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;#f06632&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource LogoGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Click</span>=<span class="string">&quot;ButtonPush_OnClick&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.PushMainWindow2Top&quot;</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;OpenPanel&quot;</span>/&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.ShutdownApp&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Exit&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">hc:NotifyIcon.ContextContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:NotifyIcon</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>you can use <code>hc:ControlCommands</code> for exit app or open it. or you can use event instead of it.</p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ButtonPush_OnClick</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span> =&gt; NotifyIconContextContent.CloseContextControl();</span><br></pre></td></tr></table></figure>
          </div>

<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/NotifyIcon.gif" alt="NotifyIcon"></p>
<h1 id="BallonTip"><a href="#BallonTip" class="headerlink" title="BallonTip"></a>BallonTip</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">NotifyIcon.ShowBalloonTip(<span class="string">&quot;HandyControl&quot;</span>, <span class="string">&quot;Hello&quot;</span>, NotifyIconInfoType.None, ContextMenuIsShow ? MessageToken.NotifyIconDemo : MessageToken.NotifyIconContextDemo);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Notification</title>
    <url>/handycontrol/extend_controls/notification/index.html</url>
    <content><![CDATA[<p>Used to display a rich content message on the desktop.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Notification</span> : <span class="title">System.Windows.Window</span></span><br></pre></td></tr></table></figure>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Show(object, ShowAnimation, bool)</td>
<td>Show desktop notifications (message content, animation effect type, whether to keep it open)</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.UserControl.AppNotification&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Background</span>=<span class="string">&quot;White&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Width</span>=<span class="string">&quot;320&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Height</span>=<span class="string">&quot;518&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SimplePanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Margin</span>=<span class="string">&quot;0,36,0,0&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;70&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;70&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource LogoGeometry&#125;&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;#f06632&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;HandyControl&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;StaticResource PrimaryBrush&#125;&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,122,0,0&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.CloseWindow&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Close&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Bottom&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,10,10&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">HandyControlDemo.UserControl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">AppNotification</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AppNotification</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Notification.Show(<span class="keyword">new</span> AppNotification(), ShowAnimation.Fade, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Notification.png" alt="Notification"></p>
]]></content>
  </entry>
  <entry>
    <title>NumericUpDown</title>
    <url>/handycontrol/extend_controls/numericUpDown/index.html</url>
    <content><![CDATA[<p>The NumericUpDown control looks like a pair of arrow buttons and a TextBox that the user can click to adjust the value. The control displays and sets a value. The user can change the Value by clicking the up and down arrows, or by typing a number in the TextBox section of the control.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementTextBox, Type = typeof(DatePickerTextBox))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DatePicker</span> : <span class="title">System.Windows.Controls.DatePicker</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-NumericUpDown-and-set-Value"><a href="#Create-NumericUpDown-and-set-Value" class="headerlink" title="Create NumericUpDown and set Value"></a>Create NumericUpDown and set Value</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NumericUpDown</span> <span class="attr">Value</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> numericUpDown = <span class="keyword">new</span> NumericUpDown();</span><br><span class="line">numericUpDown.Value = <span class="number">100</span>;</span><br></pre></td></tr></table></figure>
<p>The generated NumericUpDown is shown below:<img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/NumericUpDown_1.png" alt="NumericUpDown"></p>
<h1 id="Setting-DecimalPlaces"><a href="#Setting-DecimalPlaces" class="headerlink" title="Setting DecimalPlaces"></a>Setting DecimalPlaces</h1><p>If you need to change the number of decimal places displayed by Value, you can change DecimalPlaces. DecimalPlaces is a **int? ** Type, it does not limit the number of decimal places displayed when it is null, otherwise the displayed number of decimal places is the value of DecimalPlaces.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NumericUpDown</span> <span class="attr">DecimalPlaces</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;100.12345&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">numericUpDown.Value = <span class="number">10.12345</span>;</span><br><span class="line">numericUpDown.DecimalPlaces = <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/NumericUpDown_2.png" alt="NumericUpDown"></p>
<h1 id="Setting-Increment"><a href="#Setting-Increment" class="headerlink" title="Setting Increment"></a>Setting Increment</h1><p>You can set the Increment to increase or decrease the number when you click the button.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NumericUpDown</span> <span class="attr">Value</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Increment</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">numericUpDown.Increment = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<h1 id="Set-upper-and-lower-limits"><a href="#Set-upper-and-lower-limits" class="headerlink" title="Set upper and lower limits"></a>Set upper and lower limits</h1><p>You can set the upper and lower limits of the Value by setting the Maximum and Minimum.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NumericUpDown</span> <span class="attr">Maximum</span>=<span class="string">&quot;500&quot;</span> <span class="attr">Minimum</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">numericUpDown.Minimum = <span class="number">10</span>;</span><br><span class="line">numericUpDown.Maximum = <span class="number">1000</span>;</span><br></pre></td></tr></table></figure>
<h1 id="Set-title-and-placeholder-text"><a href="#Set-title-and-placeholder-text" class="headerlink" title="Set title and placeholder text"></a>Set title and placeholder text</h1><p>You can add Headers and Placeholders to NumericUpDown to indicate to users what they do. To use these two additional attributes, you need to apply the <strong>NumericUpDownPlus</strong> style first.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:NumericUpDown</span> <span class="attr">ValueFormat</span>=<span class="string">&quot;N2&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;100000&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;10000&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource NumericUpDownExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/NumericUpDown_3.png" alt="NumericUpDown"></p>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Value</td>
<td>Get or set the current value</td>
</tr>
<tr>
<td>Maximum</td>
<td>Get or Set the Maximum Allowed Value</td>
</tr>
<tr>
<td>Minimum</td>
<td>Get or set the minimum allowable value</td>
</tr>
<tr>
<td>Increment</td>
<td>Gets or sets the value that the digital display box (also known as an up-down control) increments or decrements when the up or down button is clicked.</td>
</tr>
<tr>
<td>DecimalPlaces</td>
<td>Gets or sets the decimal digits to be displayed in NumericUpDown. This property does not affect the Value property.</td>
</tr>
<tr>
<td>VerifyFunc</td>
<td>Get or Set Data Validation Delegation</td>
</tr>
<tr>
<td>IsError</td>
<td>Get or set whether the data is wrong</td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Get or Set Error Alert</td>
</tr>
<tr>
<td>TextType</td>
<td>Get or Set Text Type</td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Gets or sets whether to show the clear button</td>
</tr>
<tr>
<td>SelectionTextBrush</td>
<td></td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
</tr>
<tr>
<td>CaretBrushProperty</td>
<td></td>
</tr>
<tr>
<td>ValueFormat</td>
<td></td>
</tr>
<tr>
<td>ShowUpDownButton</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData ()</td>
<td>Verify Data</td>
</tr>
</tbody></table>
<h1 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h1><table>
<thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ValueChanged</td>
<td>Occurs after the Value property has been changed in some way.</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Pagination</title>
    <url>/handycontrol/extend_controls/pagination/index.html</url>
    <content><![CDATA[<p>When there is too much data, use paging to decompose the data.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonLeft, Type = typeof(Button))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonRight, Type = typeof(Button))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonFirst, Type = typeof(RadioButton))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementMoreLeft, Type = typeof(FrameworkElement))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanelMain, Type = typeof(Panel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementMoreRight, Type = typeof(FrameworkElement))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonLast, Type = typeof(RadioButton))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButtonLast, Type = typeof(NumericUpDown))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Pagination</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>MaxPageCount</td>
<td>Maximum number of pages</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>DataCountPerPage</td>
<td>The amount of data per page</td>
<td>20</td>
<td></td>
</tr>
<tr>
<td>PageIndex</td>
<td>Page Number</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>MaxPageInterval</td>
<td>The maximum distance between the currently selected button and the left and right direction buttons (4 means 4 buttons apart, if it exceeds, it will be indicated by an ellipsis)</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>IsJumpEnabled</td>
<td>Whether to display the jump box</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AutoHiding</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>PageUpdated</td>
<td>Triggered when the page number changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Pagination</span> <span class="attr">MaxPageCount</span>=<span class="string">&quot;10&quot;</span> <span class="attr">PageIndex</span>=<span class="string">&quot;5&quot;</span> <span class="attr">IsJumpEnabled</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Pagination.png" alt="Pagination"></p>
<div class="note warning">
            <p>When the page number is 1, the whole page number bar will not be displayed.</p>
          </div>

<h1 id="Full-Example"><a href="#Full-Example" class="headerlink" title="Full Example"></a>Full Example</h1><p>first we create a pagination and a datagrid also we create a <code>PageUpdated</code> event for pagiantion</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Pagination</span> <span class="attr">MaxPageCount</span>=<span class="string">&quot;10&quot;</span> <span class="attr">PageUpdated</span>=<span class="string">&quot;page_PageUpdated&quot;</span> <span class="attr">PageIndex</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">DataGrid</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">AutoGenerateColumns</span>=<span class="string">&quot;False&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGrid.Columns</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Index&#125;&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Index&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Name&quot;</span>/&gt;</span>           </span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataGrid.Columns</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DataGrid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>for example we load 100 items to a list called <code>_totalDataList</code> then we take 10 items to a another list called <code>DataList</code> Which is binded on datagrid</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">_totalDataList = dataService.GetDemoDataList(<span class="number">100</span>);</span><br><span class="line">DataList = _totalDataList.Take(<span class="number">10</span>).ToList();</span><br></pre></td></tr></table></figure>
<p>now we need update our list based on page so we do this in <code>PageUpdated</code> event:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">page_PageUpdated</span>(<span class="params"><span class="built_in">object</span> sender, HandyControl.Data.FunctionEventArgs&lt;<span class="built_in">int</span>&gt; e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DataList = _totalDataList.Skip((e.Info - <span class="number">1</span>) * <span class="number">10</span>).Take(<span class="number">10</span>).ToList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>OutlineText</title>
    <url>/handycontrol/extend_controls/outlineText/index.html</url>
    <content><![CDATA[<p><code>OutlineText</code> can make the text highlighted.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OutlineText</span>: <span class="title">FrameworkElement</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>StrokePosition</td>
<td>Outline Position</td>
<td>StrokePosition.Center</td>
<td></td>
</tr>
<tr>
<td>Text</td>
<td>Text</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TextAlignment</td>
<td>Text Alignment</td>
<td>TextAlignment.Left</td>
<td></td>
</tr>
<tr>
<td>TextTrimming</td>
<td>Text truncation method</td>
<td>TextTrimming.None</td>
<td></td>
</tr>
<tr>
<td>TextWrapping</td>
<td>Text Wrapping</td>
<td>TextWrapping.NoWrap</td>
<td></td>
</tr>
<tr>
<td>Fill</td>
<td>Text color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Stroke</td>
<td>Outline Color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>StrokeThickness</td>
<td>Outline thickness</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>FontFamily</td>
<td>Font</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontSize</td>
<td>Font Size</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontStretch</td>
<td>Font deformation method</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontStyle</td>
<td>Font Style</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontWeight</td>
<td>Font Weight</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:OutlineText</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;Wrap&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Source=&#x27;Text&#x27;, Converter=&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter=20&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:OutlineText</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Source=&#x27;Text&#x27;, Converter=&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter=8&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:OutlineText</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;30&quot;</span> <span class="attr">FontStyle</span>=<span class="string">&quot;Italic&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Source=&#x27;Text&#x27;, Converter=&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter=8&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:OutlineText</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span> <span class="attr">TextWrapping</span>=<span class="string">&quot;Wrap&quot;</span> <span class="attr">TextTrimming</span>=<span class="string">&quot;CharacterEllipsis&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;50&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Source=&#x27;Text&#x27;, Converter=&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter=5&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:OutlineText</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Source=&#x27;Text&#x27;, Converter=&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter=2&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:OutlineText</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span> <span class="attr">StrokePosition</span>=<span class="string">&quot;Outside&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Source=&#x27;Text&#x27;, Converter=&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter=2&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:OutlineText</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10,0,0&quot;</span> <span class="attr">StrokePosition</span>=<span class="string">&quot;InSide&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Source=&#x27;Text&#x27;, Converter=&#123;StaticResource StringRepeatConverter&#125;, ConverterParameter=2&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/OutlineText.png" alt="OutlineText"></p>
]]></content>
  </entry>
  <entry>
    <title>PinBox</title>
    <url>/handycontrol/extend_controls/pinBox/index.html</url>
    <content><![CDATA[<p>Another form of password box.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementPanel, Type = typeof(Panel))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PinBox</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Password</td>
<td>Password</td>
<td></td>
<td>For security reasons, cannot bind</td>
</tr>
<tr>
<td>PasswordChar</td>
<td>Mask character</td>
<td>●</td>
<td></td>
</tr>
<tr>
<td>Length</td>
<td>Password length</td>
<td>4</td>
<td>The minimum value is 4</td>
</tr>
<tr>
<td>SelectionTextBrush</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CaretBrushProperty</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemMargin</td>
<td>Cell Interval</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemWidth</td>
<td>Cell width</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemHeight</td>
<td>Cell height</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Completed</td>
<td>Triggered when input is complete</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">hc:PinBox.Completed</span>=<span class="string">&quot;PinBox_OnCompleted&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:PinBox</span> <span class="attr">Length</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Password</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:PinBox</span> <span class="attr">Length</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Password</span>=<span class="string">&quot;123456&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">PasswordChar</span>=<span class="string">&quot;❤&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/PinBox.png" alt="PinBox"></p>
]]></content>
  </entry>
  <entry>
    <title>PasswordBox</title>
    <url>/handycontrol/extend_controls/passwordBox/index.html</url>
    <content><![CDATA[<p>Represents a control for entering and processing passwords.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementPasswordBox, Type = typeof(System.Windows.Controls.PasswordBox))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTextBox, Type = typeof(System.Windows.Controls.TextBox))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PasswordBox</span> : <span class="title">Control</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-PasswordBox"><a href="#Create-PasswordBox" class="headerlink" title="Create PasswordBox"></a>Create PasswordBox</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PasswordBox</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> passwordBox = <span class="keyword">new</span> PasswordBox();</span><br></pre></td></tr></table></figure>
<h1 id="enter-password"><a href="#enter-password" class="headerlink" title="enter password"></a>enter password</h1><p>You can enter the password in the textbox, or you can set the date in the XAML clock or code.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PasswordBox</span> <span class="attr">Password</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">passwordBox.Password = <span class="string">&quot;123456&quot;</span>;</span><br></pre></td></tr></table></figure>
<h1 id="show-password"><a href="#show-password" class="headerlink" title="show password"></a>show password</h1><p>The PasswordBox control can actively display the entered password. Set <code>ShowEyeButton</code> to <code>true</code> and PasswordBox will display an “eye” button. Click this button to display the password you have entered.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PasswordBox</span> <span class="attr">ShowEyeButton</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/PasswordBox_2.gif" alt="PasswordBox"></p>
<h1 id="Set-title-and-placeholder-text"><a href="#Set-title-and-placeholder-text" class="headerlink" title="Set title and placeholder text"></a>Set title and placeholder text</h1><p>You can add Headers and Placeholders to the PasswordBox to indicate to the user what they do.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PasswordBox</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;Title&quot;</span></span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Password</td>
<td>Gets or sets the password currently reserved by PasswordBox.</td>
</tr>
<tr>
<td>PasswordChar</td>
<td>Gets or sets the mask character of the PasswordBox.</td>
</tr>
<tr>
<td>ShowEyeButton</td>
<td>Get or set whether to show an “eye” button. Click to display the password.</td>
</tr>
<tr>
<td>ShowPassword</td>
<td>Get or set whether to show the password.</td>
</tr>
<tr>
<td>Text</td>
<td>Get the text displayed by <strong>TimePicker</strong>, or set the selected time</td>
</tr>
<tr>
<td>VerifyFunc</td>
<td>Get or Set Data Validation Delegation</td>
</tr>
<tr>
<td>IsError</td>
<td>Get or set whether the data is wrong</td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Get or Set Error Alert</td>
</tr>
<tr>
<td>TextType</td>
<td>Get or Set Text Type</td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Gets or sets whether to show the clear button</td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
</tr>
<tr>
<td>CaretBrush</td>
<td></td>
</tr>
<tr>
<td>SelectionTextBrush</td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
</tr>
<tr>
<td>MaxLength</td>
<td></td>
</tr>
<tr>
<td>IsSafeEnabled</td>
<td>if this property is false, we can bind UnsagePassword</td>
</tr>
<tr>
<td>UnsafePassword</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Clear ()</td>
<td>Clears the value of the Password property.</td>
</tr>
<tr>
<td>Paste ()</td>
<td>Replaces the current selection in the PasswordBox with the contents of the clipboard.</td>
</tr>
<tr>
<td>SelectAll ()</td>
<td>Selects everything in PasswordBox.</td>
</tr>
<tr>
<td>VerifyData ()</td>
<td>Verify the data.</td>
</tr>
</tbody></table>
<h1 id="Binding"><a href="#Binding" class="headerlink" title="Binding"></a>Binding</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">hc:PasswordBox</span> <span class="attr">Name</span>=<span class="string">&quot;PasswordBoxDemo&quot;</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Password</span>=<span class="string">&quot;123456&quot;</span> <span class="attr">IsSafeEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding UnsafePassword,ElementName=PasswordBoxDemo,UpdateSourceTrigger=PropertyChanged&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>PopTip</title>
    <url>/handycontrol/extend_controls/popTip/index.html</url>
    <content><![CDATA[<p>It is often used to display the prompt information when the mouse is hovered.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Poptip</span> : <span class="title">AdornerElement</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>HitMode</td>
<td>Trigger Mode</td>
<td>HitMode.Hover</td>
<td></td>
</tr>
<tr>
<td>Content</td>
<td>Reminder content</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContentTemplate</td>
<td>Prompt content template</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContentStringFormat</td>
<td>Prompt content text format</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ContentTemplateSelector</td>
<td>Prompt Content Template Selector</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Offset</td>
<td>Offset</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td>PlacementType</td>
<td>PlacementType.Top</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IsOpen</td>
<td>Whether to open</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Poptip.Instance</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Poptip</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span> <span class="attr">PlacementType</span>=<span class="string">&quot;TopLeft&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Poptip.Instance</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">hc:Poptip.HitMode</span>=<span class="string">&quot;None&quot;</span> <span class="attr">hc:Poptip.IsOpen</span>=<span class="string">&quot;&#123;Binding IsChecked,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span> <span class="attr">hc:Poptip.Content</span>=<span class="string">&quot;Text&quot;</span> <span class="attr">hc:Poptip.Placement</span>=<span class="string">&quot;RightTop&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Poptip.gif" alt="PopTip"></p>
]]></content>
  </entry>
  <entry>
    <title>PreviewSlider</title>
    <url>/handycontrol/extend_controls/previewSlider/index.html</url>
    <content><![CDATA[<p>You can use the preview slider to feedback the status information at different locations to the user.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = TrackKey, Type = typeof(Track))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ThumbKey, Type = typeof(FrameworkElement))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PreviewSlider</span> : <span class="title">Slider</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>PreviewContent</td>
<td>Preview Content</td>
<td></td>
<td></td>
</tr>
<tr>
<td>PreviewContentOffset</td>
<td>Preview ContentOffset</td>
<td>9</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Additional-attributes"><a href="#Additional-attributes" class="headerlink" title="Additional attributes"></a>Additional attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>PreviewPosition</td>
<td>Preview position</td>
<td>0</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>PreviewPositionChanged</td>
<td>Triggered when the preview position changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PreviewSlider</span> <span class="attr">Name</span>=<span class="string">&quot;PreviewSliderHorizontal&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;500&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:PreviewSlider.PreviewContent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Label</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource LabelPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span> <span class="attr">ContentStringFormat</span>=<span class="string">&quot;#0.00&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:PreviewSlider.PreviewContent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:PreviewSlider</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/PreviewSlider.gif" alt="PreviewSlider"></p>
]]></content>
  </entry>
  <entry>
    <title>PopupWindow</title>
    <url>/handycontrol/extend_controls/popupWindow/index.html</url>
    <content><![CDATA[<p><code>PopupWindow</code> can control the position of pop-up elements more flexibly than <code>PopTip</code>.</p>
<div class="note warning">
            <p>PopupWindow may become obsolete in future versions.</p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementMainBorder, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTitleBlock, Type = typeof(TextBlock))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PopupWindow</span> : <span class="title">System.Windows.Window</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>PopupElement</td>
<td>Popup Element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowTitle</td>
<td>Whether to show the title</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>ShowCancel</td>
<td>Whether to show the cancel button</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>ShowBorder</td>
<td>Whether to show the border</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Show(FrameworkElement, bool)</td>
<td>Display window (pop-up element, with background or not)</td>
</tr>
<tr>
<td>Show(System.Windows.Window, Point)</td>
<td>Display window (relative window, offset coordinates)</td>
</tr>
<tr>
<td>Show(string)</td>
<td>Show window (pop-up message)</td>
</tr>
<tr>
<td>ShowDialog(FrameworkElement, bool)</td>
<td>Modal display window (pop-up element, whether with background)</td>
</tr>
<tr>
<td>ShowDialog(string, string title, bool)</td>
<td>Modal display window (pop-up information, title, whether to display the cancel button)</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">PopupWindow popup = <span class="keyword">new</span> PopupWindow()</span><br><span class="line">                &#123;</span><br><span class="line">                    MinWidth = <span class="number">400</span>,</span><br><span class="line">                    Title = <span class="string">&quot;Title&quot;</span>,</span><br><span class="line">                    WindowStartupLocation = WindowStartupLocation.CenterScreen,</span><br><span class="line">                    ShowInTaskbar = <span class="literal">true</span>,</span><br><span class="line">                    AllowsTransparency = <span class="literal">true</span>,</span><br><span class="line">                    WindowStyle = WindowStyle.None</span><br><span class="line">                &#125;;</span><br><span class="line">                TextBox txtUsername = <span class="keyword">new</span> TextBox();</span><br><span class="line">popup.PopupElement = mainStack;</span><br><span class="line">popup.ShowDialog();</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>PropertyGrid</title>
    <url>/handycontrol/extend_controls/propertyGrid/index.html</url>
    <content><![CDATA[<p>It can automatically generate a matching editor collection for the attributes in the model object.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementItemsControl, Type = typeof(ItemsControl))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementSearchBar, Type = typeof(SearchBar))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PropertyGrid</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>PropertyResolver</td>
<td>Property Resolver</td>
<td>new PropertyResolver</td>
<td></td>
</tr>
<tr>
<td>SelectedObject</td>
<td>Model Object</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Description</td>
<td>Description</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MaxTitleWidth</td>
<td>Max Title Width</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>MinTitleWidth</td>
<td>Minimum title width</td>
<td>0</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Bring-your-own-editor"><a href="#Bring-your-own-editor" class="headerlink" title="Bring your own editor"></a>Bring your own editor</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>DatePropertyEditor</td>
<td>Date Editor</td>
</tr>
<tr>
<td>DateTimePropertyEditor</td>
<td>Date Time Editor</td>
</tr>
<tr>
<td>EnumPropertyEditor</td>
<td>Enumeration Editor</td>
</tr>
<tr>
<td>HorizontalAlignmentPropertyEditor</td>
<td>Horizontal Alignment Editor</td>
</tr>
<tr>
<td>ImagePropertyEditor</td>
<td>Image Editor</td>
</tr>
<tr>
<td>NumberPropertyEditor</td>
<td>Number Editor</td>
</tr>
<tr>
<td>PlainTextPropertyEditor</td>
<td>Plain Text Editor</td>
</tr>
<tr>
<td>ReadOnlyTextPropertyEditor</td>
<td>Read-only text editor</td>
</tr>
<tr>
<td>SwitchPropertyEditor</td>
<td>Boolean editor (switch style)</td>
</tr>
<tr>
<td>TimePropertyEditor</td>
<td>Time Editor</td>
</tr>
<tr>
<td>VerticalAlignmentPropertyEditor</td>
<td>Vertical Alignment Editor</td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedObjectChanged</td>
<td>Triggered when the model object changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><h2 id="Basic-usage"><a href="#Basic-usage" class="headerlink" title="Basic usage"></a>Basic usage</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PropertyGridDemoModel</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Category(<span class="meta-string">&quot;Category1&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> String &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    [<span class="meta">Category(<span class="meta-string">&quot;Category2&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Integer &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    [<span class="meta">Category(<span class="meta-string">&quot;Category2&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> Boolean &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    [<span class="meta">Category(<span class="meta-string">&quot;Category1&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Gender Enum &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> HorizontalAlignment HorizontalAlignment &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> VerticalAlignment VerticalAlignment &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> ImageSource ImageSource &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> Gender</span><br><span class="line">&#123;</span><br><span class="line">    Male,</span><br><span class="line">    Female</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">DemoModel = <span class="keyword">new</span> PropertyGridDemoModel</span><br><span class="line">&#123;</span><br><span class="line">    String = <span class="string">&quot;TestString&quot;</span>,</span><br><span class="line">    Enum = Gender.Female,</span><br><span class="line">    Boolean = <span class="literal">true</span>,</span><br><span class="line">    Integer = <span class="number">98</span>,</span><br><span class="line">    VerticalAlignment = VerticalAlignment.Stretch</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PropertyGrid</span> <span class="attr">Width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">SelectedObject</span>=<span class="string">&quot;&#123;Binding DemoModel&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/PropertyGrid.png" alt="PropertyGrid"></p>
<h2 id="Custom-editor"><a href="#Custom-editor" class="headerlink" title="Custom editor"></a>Custom editor</h2><p>Let’s take <code>PlainTextPropertyEditor</code> as an example. When we need to customize the editor, we can inherit from <code>PropertyEditorBase</code> and override some methods. The definitions of these methods are shown in the following table:</p>
<h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>CreateElement</td>
<td>Create specific operation controls</td>
<td>Must be rewritten</td>
</tr>
<tr>
<td>CreateBinding</td>
<td>Create data binding for specific operation controls</td>
<td></td>
</tr>
<tr>
<td>GetDependencyProperty</td>
<td>Get the dependency property that needs to be bound in the specific operation control</td>
<td>Must be rewritten</td>
</tr>
<tr>
<td>GetBindingMode</td>
<td>Get binding mode</td>
<td></td>
</tr>
<tr>
<td>GetUpdateSourceTrigger</td>
<td>Get the trigger mode of updating the data source</td>
<td></td>
</tr>
<tr>
<td>GetConverter</td>
<td>Get the converter to be used when binding</td>
<td></td>
</tr>
</tbody></table>
<p>The specific operation control of the plain text editor can be <code>TextBox</code>:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> FrameworkElement <span class="title">CreateElement</span>(<span class="params">PropertyItem propertyItem</span>)</span> =&gt; <span class="keyword">new</span> System.Windows.Controls.TextBox</span><br><span class="line">&#123;</span><br><span class="line">    IsReadOnly = propertyItem.IsReadOnly</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>The dependency property that needs to be bound should be <code>TextProperty</code>:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> DependencyProperty <span class="title">GetDependencyProperty</span>(<span class="params"></span>)</span> =&gt; System.Windows.Controls.TextBox.TextProperty;</span><br></pre></td></tr></table></figure>
<p>The final overall code is as follows:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlainTextPropertyEditor</span> : <span class="title">PropertyEditorBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> FrameworkElement <span class="title">CreateElement</span>(<span class="params">PropertyItem propertyItem</span>)</span> =&gt; <span class="keyword">new</span> System.Windows.Controls.TextBox</span><br><span class="line">    &#123;</span><br><span class="line">        IsReadOnly = propertyItem.IsReadOnly</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> DependencyProperty <span class="title">GetDependencyProperty</span>(<span class="params"></span>)</span> =&gt; System.Windows.Controls.TextBox.TextProperty;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>ProgressButton</title>
    <url>/handycontrol/extend_controls/progressButton/index.html</url>
    <content><![CDATA[<p>A progress display is attached to the switch button.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ProgressButton</span> : <span class="title">ToggleButton</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ProgressStyle</td>
<td>Progress Bar Style</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Progress</td>
<td>Progress</td>
<td>0</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ProgressButton</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsUploading,Mode=TwoWay&#125;&quot;</span> <span class="attr">Progress</span>=<span class="string">&quot;&#123;Binding Progress&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding IsChecked,RelativeSource=&#123;RelativeSource Self&#125;,Converter=&#123;StaticResource Boolean2StringConverter&#125;,ConverterParameter=UploadStr&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ProgressButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressButtonPrimary&#125;&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsUploading,Mode=TwoWay&#125;&quot;</span> <span class="attr">Progress</span>=<span class="string">&quot;&#123;Binding Progress&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding IsChecked,RelativeSource=&#123;RelativeSource Self&#125;,Converter=&#123;StaticResource Boolean2StringConverter&#125;,ConverterParameter=UploadStr&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ProgressButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressButtonSuccess&#125;&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsUploading,Mode=TwoWay&#125;&quot;</span> <span class="attr">Progress</span>=<span class="string">&quot;&#123;Binding Progress&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding IsChecked,RelativeSource=&#123;RelativeSource Self&#125;,Converter=&#123;StaticResource Boolean2StringConverter&#125;,ConverterParameter=UploadStr&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ProgressButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressButtonInfo&#125;&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsUploading,Mode=TwoWay&#125;&quot;</span> <span class="attr">Progress</span>=<span class="string">&quot;&#123;Binding Progress&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding IsChecked,RelativeSource=&#123;RelativeSource Self&#125;,Converter=&#123;StaticResource Boolean2StringConverter&#125;,ConverterParameter=UploadStr&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ProgressButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressButtonWarning&#125;&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsUploading,Mode=TwoWay&#125;&quot;</span> <span class="attr">Progress</span>=<span class="string">&quot;&#123;Binding Progress&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding IsChecked,RelativeSource=&#123;RelativeSource Self&#125;,Converter=&#123;StaticResource Boolean2StringConverter&#125;,ConverterParameter=UploadStr&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ProgressButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressButtonDanger&#125;&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsUploading,Mode=TwoWay&#125;&quot;</span> <span class="attr">Progress</span>=<span class="string">&quot;&#123;Binding Progress&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;Binding IsChecked,RelativeSource=&#123;RelativeSource Self&#125;,Converter=&#123;StaticResource Boolean2StringConverter&#125;,ConverterParameter=UploadStr&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>you can use ToggleButton instead of ProgressButton</p>
          </div>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonLoading&#125;&quot;</span> <span class="attr">Progress</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Upload&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>[ProgressButton]</th>
<th>[ToggleButton]</th>
</tr>
</thead>
<tbody><tr>
<td>ProgressButtonPrimary</td>
<td>ToggleButtonLoading</td>
</tr>
<tr>
<td>ProgressButtonSuccess</td>
<td>ToggleButtonLoadingPrimary</td>
</tr>
<tr>
<td>ProgressButtonInfo</td>
<td>ToggleButtonLoadingSuccess</td>
</tr>
<tr>
<td>ProgressButtonWarning</td>
<td>ToggleButtonLoadingInfo</td>
</tr>
<tr>
<td>ProgressButtonDanger</td>
<td>ToggleButtonLoadingWarning</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ProgressButton.gif" alt="ProgressButton"></p>
]]></content>
  </entry>
  <entry>
    <title>RangeSlider</title>
    <url>/handycontrol/extend_controls/rangeSlider/index.html</url>
    <content><![CDATA[<p>Support to select a range of values.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TwoWayRangeBase</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DefaultEvent(<span class="meta-string">&quot;ValueChanged&quot;</span>), DefaultProperty(<span class="meta-string">&quot;Value&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTrack, Type = typeof(Track))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RangeSlider</span> : <span class="title">TwoWayRangeBase</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Minimum</td>
<td>Minimum value</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Maximum</td>
<td>Maximum</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>ValueStart</td>
<td>Start of the selected range</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>ValueEnd</td>
<td>The end of the selected range</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>LargeChange</td>
<td>Single maximum change value</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>SmallChange</td>
<td>Single minimum change value</td>
<td>0.1</td>
<td></td>
</tr>
<tr>
<td>Orientation</td>
<td>Orientation</td>
<td>Orientation.Horizontal</td>
<td></td>
</tr>
<tr>
<td>IsDirectionReversed</td>
<td>Is it reversed</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>Delay</td>
<td>Waiting time before repeated clicks</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Interval</td>
<td>Repeated click trigger time interval</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AutoToolTipPlacement</td>
<td>Auto ToolTipPlacement</td>
<td>AutoToolTipPlacement.None</td>
<td></td>
</tr>
<tr>
<td>AutoToolTipPrecision</td>
<td>Automatic tool tip decimal places</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>IsSnapToTickEnabled</td>
<td>Whether to automatically move the Thumb to the nearest tick mark</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>TickPlacement</td>
<td>The position of the tick mark</td>
<td>TickPlacement.None</td>
<td></td>
</tr>
<tr>
<td>TickFrequency</td>
<td>The interval between tick marks</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>Ticks</td>
<td>Tick Line Drawing Collection</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IsMoveToPointEnabled</td>
<td>Whether the Thumb can be moved to the position clicked by the mouse immediately</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ValueChanged</td>
<td>Triggered when the selected range changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ValueStart</span>=<span class="string">&quot;2&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span> <span class="attr">hc:TipElement.Placement</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;100&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;60&quot;</span> <span class="attr">TickFrequency</span>=<span class="string">&quot;10&quot;</span> <span class="attr">TickPlacement</span>=<span class="string">&quot;BottomRight&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span> <span class="attr">hc:TipElement.Placement</span>=<span class="string">&quot;Bottom&quot;</span> <span class="attr">hc:TipElement.StringFormat</span>=<span class="string">&quot;#0.00&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;5&quot;</span> <span class="attr">TickPlacement</span>=<span class="string">&quot;Both&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Height</span>=<span class="string">&quot;400&quot;</span> <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Height</span>=<span class="string">&quot;400&quot;</span> <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Height</span>=<span class="string">&quot;400&quot;</span> <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span> <span class="attr">hc:TipElement.Placement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;100&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;60&quot;</span> <span class="attr">TickFrequency</span>=<span class="string">&quot;10&quot;</span> <span class="attr">TickPlacement</span>=<span class="string">&quot;BottomRight&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:RangeSlider</span> <span class="attr">Height</span>=<span class="string">&quot;400&quot;</span> <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span> <span class="attr">hc:TipElement.Placement</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">hc:TipElement.StringFormat</span>=<span class="string">&quot;#0.00&quot;</span> <span class="attr">ValueEnd</span>=<span class="string">&quot;5&quot;</span> <span class="attr">TickPlacement</span>=<span class="string">&quot;Both&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/RangeSlider.png" alt="RangeSlider"></p>
]]></content>
  </entry>
  <entry>
    <title>ImageSelector</title>
    <url>/handycontrol/extend_controls/imageSelector/index.html</url>
    <content><![CDATA[<p>This control encapsulates a complete set of logic for image selection, display, and deletion.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ImageSelector</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Stretch</td>
<td>Picture stretch mode</td>
<td>Stretch.None</td>
<td></td>
</tr>
<tr>
<td>Uri</td>
<td>Picture Resources</td>
<td></td>
<td></td>
</tr>
<tr>
<td>PreviewBrush</td>
<td>Preview drawing brush</td>
<td></td>
<td></td>
</tr>
<tr>
<td>StrokeThickness</td>
<td>Border thickness</td>
<td></td>
<td></td>
</tr>
<tr>
<td>StrokeDashArray</td>
<td>Border dashed array</td>
<td></td>
<td></td>
</tr>
<tr>
<td>DefaultExt</td>
<td>Default picture suffix name</td>
<td>.jpg</td>
<td></td>
</tr>
<tr>
<td>Filter</td>
<td>Picture filter string</td>
<td>(.jpg)&#124;<em>.jpg&#124;(.png)&#124;</em>.png</td>
<td></td>
</tr>
<tr>
<td>HasValue</td>
<td>Is there a value</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h1><table>
<thead>
<tr>
<th>Style</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ImageSelectorBaseStyle</td>
<td>Default Style</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Columns</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageSelector</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageSelector</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;50&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageSelector</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;50&quot;</span> <span class="attr">StrokeDashArray</span>=<span class="string">&quot;10,5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageSelector</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;50&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageSelector</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;50&quot;</span> <span class="attr">StrokeDashArray</span>=<span class="string">&quot;10,5,10&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageSelector</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;2&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ImageSelector.png" alt="ImageSelector"></p>
]]></content>
  </entry>
  <entry>
    <title>RelativePanel</title>
    <url>/handycontrol/extend_controls/relativePanel/index.html</url>
    <content><![CDATA[<p>RelativePanel is a layout container that is useful for creating UI that do not have a clear linear pattern<br>If your UI consists of multiple nested panels, RelativePanel is a good option to consider.</p>
<p>You can use the additional properties of <code>RelativePanel</code> to relatively layout its content.<br>See: <a href="https://docs.microsoft.com/en-us/uwp/api/Windows.UI.Xaml.Controls.RelativePanel">RelativePanel Class</a></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RelativePanel</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Above</td>
<td>Make this element above the target element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AlignBottomWith</td>
<td>Align this element with the bottom of the target element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AlignBottomWithPanel</td>
<td>Align this element with the bottom of the Panel</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AlignHorizontalCenterWith</td>
<td>Align this element horizontally with the target element in the center</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AlignHorizontalCenterWithPanel</td>
<td>Align this element horizontally with the Panel in the center</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AlignLeftWith</td>
<td>Align this element with the left side of the target element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AlignLeftWithPanel</td>
<td>Align this element with the left side of the Panel</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AlignRightWith</td>
<td>Align this element with the right side of the target element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AlignRightWithPanel</td>
<td>Align this element with the right side of the Panel</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AlignTopWith</td>
<td>Align this element with the top of the target element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AlignTopWithPanel</td>
<td>Align this element with the top side of the Panel</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AlignVerticalCenterWith</td>
<td>Align this element with the target element vertically in the center</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AlignVerticalCenterWithPanel</td>
<td>Make this element and Panel vertically aligned in the center</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>Below</td>
<td>Make this element below the target element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>LeftOf</td>
<td>Make this element to the left of the target element</td>
<td></td>
<td></td>
</tr>
<tr>
<td>RightOf</td>
<td>Make this element to the right of the target element</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:RelativePanel</span> <span class="attr">Width</span>=<span class="string">&quot;620&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;700&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect1&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect1&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect2&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.AlignHorizontalCenterWithPanel</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect2&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect3&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.AlignRightWithPanel</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect3&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect4&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.AlignBottomWithPanel</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect4&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect5&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.AlignBottomWithPanel</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:RelativePanel.AlignHorizontalCenterWithPanel</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect5&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect6&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.AlignBottomWithPanel</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:RelativePanel.AlignRightWithPanel</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect6&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect7&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.RightOf</span>=<span class="string">&quot;&#123;Binding ElementName=Rect1&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect7 (RightOf Rect1)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect8&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.Below</span>=<span class="string">&quot;&#123;Binding ElementName=Rect7&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect8 (Below Rect7)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect9&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;140&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;460&quot;</span> <span class="attr">hc:RelativePanel.AlignHorizontalCenterWithPanel</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:RelativePanel.AlignVerticalCenterWithPanel</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect9&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect10&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.RightOf</span>=<span class="string">&quot;&#123;Binding ElementName=Rect9&#125;&quot;</span> <span class="attr">hc:RelativePanel.AlignVerticalCenterWith</span>=<span class="string">&quot;&#123;Binding ElementName=Rect9&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect14 (RightOf Rect9, AlignVerticalCenterWith Rect9)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock.LayoutTransform</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RotateTransform</span> <span class="attr">Angle</span>=<span class="string">&quot;-90&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">TextBlock.LayoutTransform</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect11&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.AlignBottomWith</span>=<span class="string">&quot;&#123;Binding ElementName=Rect9&#125;&quot;</span> <span class="attr">hc:RelativePanel.AlignHorizontalCenterWith</span>=<span class="string">&quot;&#123;Binding ElementName=Rect9&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect11 (AlignBottomWith Rect9, AlignHorizontalCenterWith Rect9)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect12&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.Below</span>=<span class="string">&quot;&#123;Binding ElementName=Rect8&#125;&quot;</span> <span class="attr">hc:RelativePanel.AlignLeftWith</span>=<span class="string">&quot;&#123;Binding ElementName=Rect7&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect12 (Below Rect8, AlignLeftWith Rect7)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect13&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.Below</span>=<span class="string">&quot;&#123;Binding ElementName=Rect12&#125;&quot;</span> <span class="attr">hc:RelativePanel.AlignRightWith</span>=<span class="string">&quot;&#123;Binding ElementName=Rect12&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect13 (Below Rect12, AlignRightWith Rect12)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect14&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.Above</span>=<span class="string">&quot;&#123;Binding ElementName=Rect9&#125;&quot;</span> <span class="attr">hc:RelativePanel.AlignRightWith</span>=<span class="string">&quot;&#123;Binding ElementName=Rect9&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect14 (Above Rect9, AlignRightWith Rect9)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Name</span>=<span class="string">&quot;Rect15&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:RelativePanel.LeftOf</span>=<span class="string">&quot;&#123;Binding ElementName=Rect2&#125;&quot;</span> <span class="attr">hc:RelativePanel.AlignTopWith</span>=<span class="string">&quot;&#123;Binding ElementName=Rect9&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Rect15 (LeftOf Rect2, AlignTopWith Rect9)&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:RelativePanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/RelativePanel.png" alt="RelativePanel"></p>
]]></content>
  </entry>
  <entry>
    <title>Rate</title>
    <url>/handycontrol/extend_controls/rate/index.html</url>
    <content><![CDATA[<p>You can use the Rate control when displaying reviews or performing quick grading operations on things.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DefaultProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ContentProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanel, Type = typeof(Panel))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleItemsControl</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RegularItemsControl</span> : <span class="title">SimpleItemsControl</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Rate</span> : <span class="title">RegularItemsControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>AllowHalf</td>
<td>Whether to allow half selection</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>AllowClear</td>
<td>Whether to allow clear after clicking again</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>Icon</td>
<td>Icon</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Count</td>
<td>star Total number</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>DefaultValue</td>
<td>Default Value</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Value</td>
<td>Current Rating</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Text</td>
<td>Score text</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowText</td>
<td>Whether to display the score text</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>IsReadOnly</td>
<td>Is it read-only</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>Value</td>
<td>Current Rating</td>
<td>0</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ValueChanged</td>
<td>Triggered when the score changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;170&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Rate</span> <span class="attr">Value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Rate</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Count</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Rate</span> <span class="attr">DefaultValue</span>=<span class="string">&quot;3&quot;</span> <span class="attr">IsReadOnly</span>=<span class="string">&quot;True&quot;</span> <span class="attr">AllowHalf</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Rate</span> <span class="attr">DefaultValue</span>=<span class="string">&quot;1&quot;</span> <span class="attr">AllowClear</span>=<span class="string">&quot;False&quot;</span> <span class="attr">AllowHalf</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Icon</span>=<span class="string">&quot;&#123;StaticResource LoveGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Rate</span> <span class="attr">Value</span>=<span class="string">&quot;4.5&quot;</span> <span class="attr">AllowHalf</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ShowText</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Icon</span>=<span class="string">&quot;&#123;StaticResource LoveGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Rate.gif" alt="Rate"></p>
]]></content>
  </entry>
  <entry>
    <title>ImageBlock</title>
    <url>/handycontrol/extend_controls/imageBlock/index.html</url>
    <content><![CDATA[<p>The picture block can be used to divide a large picture into small pictures with the same width and height, and play them in order to form an effect similar to gif pictures.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ImageBlock</span> : <span class="title">FrameworkElement</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>StartColumn</td>
<td>Play start column</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>StartRow</td>
<td>Play start row</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>EndColumn</td>
<td>Play end column</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>EndRow</td>
<td>Play end row</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>IsPlaying</td>
<td>Is it playing</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>Columns</td>
<td>The number of columns that need to be divided</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>Rows</td>
<td>The number of rows to be divided</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>Interval</td>
<td>Play interval of small pictures</td>
<td>1s</td>
<td></td>
</tr>
<tr>
<td>Source</td>
<td>Large image resources</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;0&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;1&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;2&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;&#123;Binding IsMouseOver,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;3&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;&#123;Binding IsMouseOver,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.1&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;4&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;5&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;6&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;&#123;Binding IsMouseOver,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.1&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;7&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;8&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;&#123;Binding IsMouseOver,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ImageBlock</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Dance.png&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;0:0:0.125&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">StartColumn</span>=<span class="string">&quot;0&quot;</span> <span class="attr">StartRow</span>=<span class="string">&quot;9&quot;</span> <span class="attr">EndColumn</span>=<span class="string">&quot;7&quot;</span> <span class="attr">EndRow</span>=<span class="string">&quot;9&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;128&quot;</span> <span class="attr">IsPlaying</span>=<span class="string">&quot;&#123;Binding IsMouseOver,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ImageBlock.gif" alt="ImageBlock"></p>
<div class="note warning">
            <p>Remember to call the <code>Dispose</code> method to clean up resources when you no longer use <code>ImageBlock</code>.</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>ScrollViewer</title>
    <url>/handycontrol/extend_controls/scrollViewer/index.html</url>
    <content><![CDATA[<p>An extension to the native scroll view.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScrollViewer</span> : <span class="title">System.Windows.Controls.ScrollViewer</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Orientation</td>
<td>Scrolling Direction</td>
<td>Orientation.Vertical</td>
<td></td>
</tr>
<tr>
<td>CanMouseWheel</td>
<td>Whether to respond to mouse wheel operation</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>IsInertiaEnabled</td>
<td>Whether to support inertial scrolling</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>IsPenetrating</td>
<td>Is it possible to penetrate the click</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:ScrollViewer</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">HorizontalScrollBarVisibility</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">VerticalScrollBarVisibility</span>=<span class="string">&quot;Hidden&quot;</span> <span class="attr">IsInertiaEnabled</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:ScrollViewer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:ScrollViewer</span> <span class="attr">IsInertiaEnabled</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">WrapPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,32,10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">WrapPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:ScrollViewer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/ScrollViewer.gif" alt="ScrollViewer"></p>
]]></content>
  </entry>
  <entry>
    <title>SearchBar</title>
    <url>/handycontrol/extend_controls/searchBar/index.html</url>
    <content><![CDATA[<p>Trigger the search by typing a keyword.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SearchBar</span> : <span class="title">TextBox</span>, <span class="title">ICommandSource</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>IsRealTime</td>
<td>Whether to search in real time</td>
<td>false</td>
<td>If it is <code>true</code>, the search start event will be automatically triggered every time the input is made</td>
</tr>
<tr>
<td>Command</td>
<td>Command</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CommandParameter</td>
<td>Command Parameters</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CommandTarget</td>
<td>Command target element</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Additional-attributes"><a href="#Additional-attributes" class="headerlink" title="Additional attributes"></a>Additional attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>InfoElement.Placeholder</td>
<td>Placeholder</td>
<td></td>
<td></td>
</tr>
<tr>
<td>InfoElement.Necessary</td>
<td>Is it required</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>InfoElement.Symbol</td>
<td>Required mark</td>
<td>●</td>
<td></td>
</tr>
<tr>
<td>InfoElement.ContentHeight</td>
<td>Content Height</td>
<td>30</td>
<td>Available when the title is above</td>
</tr>
<tr>
<td>InfoElement.MinContentHeight</td>
<td>Minimum content height</td>
<td>30</td>
<td>Available when the title is on the top</td>
</tr>
<tr>
<td>TitleElement.Title</td>
<td>Title</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TitleElement.TitlePlacement</td>
<td>Title Alignment</td>
<td>TitlePlacementType.Top</td>
<td></td>
</tr>
<tr>
<td>TitleElement.TitleWidth</td>
<td>TitleWidth</td>
<td>120</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SearchStarted</td>
<td>Triggered when the search starts</td>
</tr>
</tbody></table>
<h1 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h1><table>
<thead>
<tr>
<th>Style</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SearchBarBaseStyle</td>
<td>Default Style</td>
</tr>
<tr>
<td>SearchBarExtendBaseStyle</td>
<td>Default extended style</td>
</tr>
<tr>
<td>SearchBarPlusBaseStyle</td>
<td>The default enhanced style</td>
</tr>
<tr>
<td>SearchBarExtend</td>
<td>Extended Style</td>
</tr>
<tr>
<td>SearchBarPlus</td>
<td>Enhance the style</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SearchCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;&#123;Binding Text,RelativeSource=&#123;RelativeSource Self&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">Name</span>=<span class="string">&quot;SearchBarCustomVerify&quot;</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarPlus&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarPlus&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarPlus&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">TextType</span>=<span class="string">&quot;Mail&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterEmail&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarPlus&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarPlus&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SearchBar</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;PlsEnterContent&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;TitleDemoStr3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SearchBarPlus&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/SearchBar.png" alt="SearchBar"></p>
]]></content>
  </entry>
  <entry>
    <title>SideMenu</title>
    <url>/handycontrol/extend_controls/sideMenu/index.html</url>
    <content><![CDATA[<p>SideMenu is Menu that provides navigation for your app.</p>
<div class="note warning">
            <p>Currently the side menu only supports vertical layout, it may be expanded to any layout in the future.</p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DefaultProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ContentProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanel, Type = typeof(Panel))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleItemsControl</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HeaderedSimpleItemsControl</span> : <span class="title">SimpleItemsControl</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SideMenu</span> : <span class="title">HeaderedSimpleItemsControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>AutoSelect</td>
<td>Whether to automatically select the first item</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>ExpandMode</td>
<td>Sub-item expansion mode</td>
<td>ExpandMode.ShowOne</td>
<td></td>
</tr>
<tr>
<td>SideBrush</td>
<td>Only Custom Version</td>
<td></td>
<td></td>
</tr>
<tr>
<td>SubSideBrush</td>
<td>Only Custom Version</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Icon</td>
<td>Only Custom Version</td>
<td></td>
<td></td>
</tr>
<tr>
<td>PanelAreaLength</td>
<td>Child container height</td>
<td>NaN</td>
<td>Currently the side menu only supports vertical layout, and it may be expanded to any layout in the future, so this attribute name is not set as <code>PanelAreaHeight</code></td>
</tr>
</tbody></table>
<h1 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectionChanged</td>
<td>Triggered when the selected item changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SideMenu</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:EventTrigger</span> <span class="attr">EventName</span>=<span class="string">&quot;SelectionChanged&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:EventToCommand</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SwitchItemCmd&#125;&quot;</span> <span class="attr">PassEventArgsToCommand</span>=<span class="string">&quot;True&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:EventTrigger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Overview&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/DevOps/DevOps-Overview.png&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;24&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Summary&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;&#123;Binding Header,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf2cb;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Dashboards&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;&#123;Binding Header,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf246;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Wiki&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;&#123;Binding Header,RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xe82d;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Boards&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/DevOps/DevOps-Boards.png&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;24&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Work Items&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf314;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Boards&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf444;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Backlogs&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf6bf;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Sprints&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf3b0;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Queries&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf2b8;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Repos&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/DevOps/DevOps-Repos.png&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;24&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Files&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf30e;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Commits&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf293;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Pushes&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf298;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Branches&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xebc2;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tags&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xe8ec;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Pull requests&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf296;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Pipelines&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/DevOps/DevOps-Pipelines.png&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;24&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Builds&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf28f;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Releases&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf3b3;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Library&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xe8f1;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Task groups&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf2ae;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Deployment groups&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf29d;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Test Plans&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/DevOps/DevOps-TestPlans.png&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;24&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Test Plans&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf3ab;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Runs&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xf3ac;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SideMenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Load test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;<span class="symbol">&amp;#xe8a9;</span>&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockFabricIcons&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:SideMenuItem.Icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SideMenuItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SideMenu</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/SideMenu.png" alt="SideMenu"></p>
]]></content>
  </entry>
  <entry>
    <title>Shield</title>
    <url>/handycontrol/extend_controls/shield/index.html</url>
    <content><![CDATA[<p>The badge consists of the name of the left half and the value of the right half. Click the badge to open the corresponding link.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">ContentProperty(nameof(Status))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Shield</span> : <span class="title">ButtonBase</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Subject</td>
<td>Name</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Status</td>
<td>Value</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Color</td>
<td>Color</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Shield</span> <span class="attr">Subject</span>=<span class="string">&quot;.net&quot;</span> <span class="attr">Status</span>=<span class="string">&quot;&gt;=4.0&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#1182c3&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Shield</span> <span class="attr">Subject</span>=<span class="string">&quot;c#&quot;</span> <span class="attr">Status</span>=<span class="string">&quot;7.0&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;4,0,0,0&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#1182c3&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Shield</span> <span class="attr">Subject</span>=<span class="string">&quot;IDE&quot;</span> <span class="attr">Status</span>=<span class="string">&quot;2017&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;4,0,0,0&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#1182c3&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Shield</span> <span class="attr">Subject</span>=<span class="string">&quot;chat&quot;</span> <span class="attr">Status</span>=<span class="string">&quot;on gitter&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;4,0,0,0&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#4eb899&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.OpenLink&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;https://gitter.im/HandyControl/Lobby?utm_source=badge<span class="symbol">&amp;amp;</span>utm_medium=badge<span class="symbol">&amp;amp;</span>utm_campaign=pr-badge<span class="symbol">&amp;amp;</span>utm_content=badge&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Shield</span> <span class="attr">Subject</span>=<span class="string">&quot;qq&quot;</span> <span class="attr">Status</span>=<span class="string">&quot;714704041&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;4,0,0,0&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#d8624c&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.OpenLink&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;http://shang.qq.com/wpa/qunwpa?idkey=a571e5553c9d41e49c4f22f3a8b2865451497a795ff281fedf3285def247efc1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Shield.png" alt="Shield"></p>
]]></content>
  </entry>
  <entry>
    <title>SimpleItemsControl</title>
    <url>/handycontrol/extend_controls/simpleItemsControl/index.html</url>
    <content><![CDATA[<p>A lightweight ItemsControl control.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DefaultProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ContentProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanel, Type = typeof(Panel))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleItemsControl</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ItemTemplate</td>
<td>Project Template</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemContainerStyle</td>
<td>Item Container Style</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ItemsSource</td>
<td>Project Resources</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Items</td>
<td>Items</td>
<td></td>
<td></td>
</tr>
<tr>
<td>HasItems</td>
<td>Is there any item</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>SimpleText</title>
    <url>/handycontrol/extend_controls/simpleText/index.html</url>
    <content><![CDATA[<p>A lightweight text display control.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleText</span> : <span class="title">FrameworkElement</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Text</td>
<td>Text</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TextAlignment</td>
<td>Text Alignment</td>
<td>TextAlignment.Left</td>
<td></td>
</tr>
<tr>
<td>TextTrimming</td>
<td>Text truncation method</td>
<td>TextTrimming.None</td>
<td></td>
</tr>
<tr>
<td>TextWrapping</td>
<td>Text Wrapping</td>
<td>TextWrapping.NoWrap</td>
<td></td>
</tr>
<tr>
<td>Foreground</td>
<td>Font color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontFamily</td>
<td>Font</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontSize</td>
<td>Font Size</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontStretch</td>
<td>Font deformation method</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontStyle</td>
<td>Font Style</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FontWeight</td>
<td>Font Weight</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SimpleText</span> <span class="attr">Text</span>=<span class="string">&quot;Content&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>SimpleStackPanel</title>
    <url>/handycontrol/extend_controls/simpleStackPanel/index.html</url>
    <content><![CDATA[<p>It is recommended to use this lightweight class instead StackPanel.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleStackPanel</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SimpleStackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Item1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SimpleStackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>SplitButton</title>
    <url>/handycontrol/extend_controls/splitButton/index.html</url>
    <content><![CDATA[<p>Provide additional click items on the basis of normal buttons.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SplitButton</span> : <span class="title">ButtonBase</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>HitMode</td>
<td>Drop-down box trigger mode</td>
<td>HitMode.Click</td>
<td></td>
</tr>
<tr>
<td>MaxDropDownHeight</td>
<td>The maximum height of the drop-down box</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IsDropDownOpen</td>
<td>Whether the drop-down box is open</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>DropDownContent</td>
<td>DropDownContent</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Style</th>
</tr>
</thead>
<tbody><tr>
<td>SplitButtonPrimary</td>
</tr>
<tr>
<td>SplitButtonDanger</td>
</tr>
<tr>
<td>SplitButtonWarning</td>
</tr>
<tr>
<td>SplitButtonInfo</td>
</tr>
<tr>
<td>SplitButtonSuccess</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SplitButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Default&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SplitButton.DropDownContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command3&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SplitButton.DropDownContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SplitButton</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SplitButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SplitButtonPrimary&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Primary&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SplitButton.DropDownContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command3&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SplitButton.DropDownContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SplitButton</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:SplitButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SplitButtonWarning&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Warning&quot;</span> <span class="attr">HitMode</span>=<span class="string">&quot;Hover&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SplitButton.DropDownContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding SelectCmd&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;Command3&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:SplitButton.DropDownContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:SplitButton</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/SplitButton.gif" alt="SplitButton"></p>
]]></content>
  </entry>
  <entry>
    <title>SimplePanel</title>
    <url>/handycontrol/extend_controls/simplePanel/index.html</url>
    <content><![CDATA[<p>It is recommended to use this lightweight class instead Grid.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimplePanel</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>Most of the time, we try to avoid using heavyweight <code>Panel</code>, <code>SimplePanel</code> is used extensively in HC.</p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Sprite</title>
    <url>/handycontrol/extend_controls/sprite/index.html</url>
    <content><![CDATA[<p>Common functions can be integrated into <code>Sprite</code> without opening the main program.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Sprite</span> : <span class="title">System.Windows.Window</span></span><br></pre></td></tr></table></figure>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Show(object)</td>
<td>Use the content as the main body of the control and Pin to the desktop</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.UserControl.AppSprite&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;White&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow4&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Width</span>=<span class="string">&quot;70&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;70&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource LogoGeometry&#125;&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;#f06632&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.CloseWindow&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span> <span class="attr">Visibility</span>=<span class="string">&quot;&#123;Binding IsMouseOver,RelativeSource=&#123;RelativeSource AncestorType=hc:SimplePanel&#125;,Converter=&#123;StaticResource Boolean2VisibilityConverter&#125;&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;22&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;22&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ErrorGeometry&#125;&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,-8,-8,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SimplePanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">AppSprite</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AppSprite</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Sprite.Show(<span class="keyword">new</span> AppSprite());</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>StepBar</title>
    <url>/handycontrol/extend_controls/stepBar/index.html</url>
    <content><![CDATA[<p>A step-by-step navigation bar that guides users to complete tasks in accordance with the process.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">StyleTypedProperty(Property = <span class="meta-string">&quot;ItemContainerStyle&quot;</span>, StyleTargetType = typeof(StepBarItem))</span>]</span><br><span class="line">[<span class="meta">DefaultEvent(<span class="meta-string">&quot;StepChanged&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementProgressBarBack, Type = typeof(ProgressBar))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StepBar</span> : <span class="title">ItemsControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>StepIndex</td>
<td>The current step number</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Dock</td>
<td>Step bar top method</td>
<td>Dock.Top</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Next()</td>
<td>Jump to the next step</td>
</tr>
<tr>
<td>Prev()</td>
<td>Jump to the previous step</td>
</tr>
</tbody></table>
<h1 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>StepChanged</td>
<td>Triggered when a step changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:StepBar</span> <span class="attr">Name</span>=<span class="string">&quot;step&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StepBarItem</span> <span class="attr">Content</span>=<span class="string">&quot;Register&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StepBarItem</span> <span class="attr">Content</span>=<span class="string">&quot;BasicInfo&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StepBarItem</span> <span class="attr">Content</span>=<span class="string">&quot;UploadFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StepBarItem</span> <span class="attr">Content</span>=<span class="string">&quot;Complete&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:StepBar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Click</span>=<span class="string">&quot;Button_Prev&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Prev&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Click</span>=<span class="string">&quot;Button_Next&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Next&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>and for changing steps:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Prev</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    step.Prev();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Next</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    step.Next();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="DataTemplate"><a href="#DataTemplate" class="headerlink" title="DataTemplate"></a>DataTemplate</h1><p>you need to create a list with a model that contain <code>Header</code> and <code>Content</code> that binding to <code>ItemsSource</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">hc:StepBar</span> <span class="attr">Name</span>=<span class="string">&quot;step&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Dock</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:StepBar.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">FontSize</span>=<span class="string">&quot;16&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Header&#125;&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Index,RelativeSource=&#123;RelativeSource AncestorType=hc:StepBarItem&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Margin</span>=<span class="string">&quot;0,4,0,0&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Content&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:StepBar.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:StepBar</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/StepBar.gif" alt="StepBar"></p>
]]></content>
  </entry>
  <entry>
    <title>TabControl</title>
    <url>/handycontrol/extend_controls/tabControl/index.html</url>
    <content><![CDATA[<p>HC’s extension to wpf native <code>TabControl</code>.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = OverflowButtonKey, Type = typeof(ContextMenuToggleButton))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = HeaderPanelKey, Type = typeof(TabPanel))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = OverflowScrollviewer, Type = typeof(ScrollViewer))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ScrollButtonLeft, Type = typeof(ButtonBase))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ScrollButtonRight, Type = typeof(ButtonBase))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = HeaderBorder, Type = typeof(Border))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TabControl</span> : <span class="title">System.Windows.Controls.TabControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>IsAnimationEnabled</td>
<td>Whether to enable animation effect</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>IsDraggable</td>
<td>Does the tab support dragging</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>ShowCloseButton</td>
<td>Whether the close button is displayed on the tab</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>ShowContextMenu</td>
<td>Does the tab support context menu</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>IsTabFillEnabled</td>
<td>Whether the tab automatically divides the space</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>TabItemWidth</td>
<td>Tab Width</td>
<td>200</td>
<td></td>
</tr>
<tr>
<td>TabItemHeight</td>
<td>Tab Height</td>
<td>30</td>
<td></td>
</tr>
<tr>
<td>IsScrollable</td>
<td>Whether the mouse wheel scroll is supported after the tab overflows</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>ShowOverflowButton</td>
<td>Whether to show the drop-down button after the tab overflows</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>ShowScrollButton</td>
<td>Whether to display scroll buttons</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Event</th>
</tr>
</thead>
<tbody><tr>
<td>Closed</td>
</tr>
<tr>
<td>Closing</td>
</tr>
</tbody></table>
<div class="note info">
            <p>Example:</p><p>&lt;hc:TabControl hc:TabItem.Closed=”TabControl_Closed” ShowCloseButton=”True”/&gt;</p><p>or</p><p>&lt;hc:TabControl  ShowCloseButton=”True”&gt;<br>    &lt;hc:TabItem Header=”test” Closed=”TabItem_Closed”/&gt;<br></hc:TabControl></p>
          </div>


<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TabControl</span> <span class="attr">IsAnimationEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ShowCloseButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">IsDraggable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">IsTabFillEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;TabItem1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource RegionBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TabItem</span> <span class="attr">IsSelected</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;TabItem2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Background</span>=<span class="string">&quot;#FFE8563F&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;TabItem3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Background</span>=<span class="string">&quot;#FF3F4EE8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;TabItem4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Background</span>=<span class="string">&quot;#FFE83F6D&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;TabItem5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Background</span>=<span class="string">&quot;#FFB23FE8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;TabItem6&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Background</span>=<span class="string">&quot;#FF3FE8E8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;TabItem7&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:SimplePanel</span> <span class="attr">Background</span>=<span class="string">&quot;#FFE8E03F&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TabItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:TabControl</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/TabControl.gif" alt="TabControl"></p>
<h2 id="TabItem"><a href="#TabItem" class="headerlink" title="TabItem"></a>TabItem</h2><p>You can use the <code>IconElement</code> class to set icons for tabs.</p>
]]></content>
  </entry>
  <entry>
    <title>TextBox</title>
    <url>/handycontrol/extend_controls/textBox/index.html</url>
    <content><![CDATA[<p>Represents a control that can be used to display or edit plain text.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TextBox</span> : <span class="title">System.Windows.Controls.TextBox</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-TextBox"><a href="#Create-TextBox" class="headerlink" title="Create TextBox"></a>Create TextBox</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TextBox</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> textBox = <span class="keyword">new</span> TextBox();</span><br></pre></td></tr></table></figure>
<h1 id="Enter-text"><a href="#Enter-text" class="headerlink" title="Enter text"></a>Enter text</h1><p>This example shows how to use the Text property to set the initial text content of a TextBox control:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">textBox.Text = <span class="string">&quot;This is the content&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>The generated TextBox is shown below:<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/TextBox_1.png" alt="TextBox"></p>
<p>For more examples of TextBox, you can refer to the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.textbox?view=netframework-4.8">Document</a> of its base class.</p>
<h1 id="Set-title-and-placeholder-text"><a href="#Set-title-and-placeholder-text" class="headerlink" title="Set title and placeholder text"></a>Set title and placeholder text</h1><p>You can add a Header and a Placeholder to a TextBox to indicate to the user its purpose. To use these two attributes</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the content&quot;</span></span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Text</td>
<td>Gets or sets the text content of the textbox.</td>
</tr>
<tr>
<td>VerifyFunc</td>
<td>Gets or sets the data validation delegate.</td>
</tr>
<tr>
<td>IsError</td>
<td>Gets or sets whether the data is wrong.</td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Gets or sets the error prompt.</td>
</tr>
<tr>
<td>TextType</td>
<td>Gets or sets the text type.</td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Gets or sets whether to show the clear button.</td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData ()</td>
<td>Verify the data.</td>
</tr>
</tbody></table>
<h1 id="TextType"><a href="#TextType" class="headerlink" title="TextType"></a>TextType</h1><table>
<thead>
<tr>
<th>TextType</th>
<th>TextType</th>
<th>TextType</th>
</tr>
</thead>
<tbody><tr>
<td>Mail</td>
<td>NDouble</td>
<td>Number</td>
</tr>
<tr>
<td>Chinese</td>
<td>NInt</td>
<td>PDouble</td>
</tr>
<tr>
<td>Common</td>
<td>NnDouble</td>
<td>PInt</td>
</tr>
<tr>
<td>Digits</td>
<td>NnInt</td>
<td>Phone</td>
</tr>
<tr>
<td>Double</td>
<td>NpDouble</td>
<td>Url</td>
</tr>
<tr>
<td>Int</td>
<td>NpInt</td>
<td></td>
</tr>
<tr>
<td>Persian <code>Only Custom Version</code></td>
<td>IranNationalCode <code>Only Custom Version</code></td>
<td></td>
</tr>
</tbody></table>
<p>you can use regex pattern in texttype</p>
<div class="note info">
            <p>if you want to use RegexPatter, you should Set <code>TextType</code> to Anything except Common</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TextBox</span> <span class="attr">TextType</span>=<span class="string">&quot;Mail&quot;</span> <span class="attr">hc:InfoElement.RegexPattern</span>=<span class="string">&quot;^[0-9]*(?:\.[0-9]+)?$&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Tag</title>
    <url>/handycontrol/extend_controls/tag/index.html</url>
    <content><![CDATA[<p>It is used to indicate the item selected by the user. Compared with the text, <code>Tag</code> has additional interaction.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Tag</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ShowCloseButton</td>
<td>Whether to display the delete (close) button</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>Selectable</td>
<td>Whether to support selection</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>IsSelected</td>
<td>Is selected</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>HeaderTemplate</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>HeaderTemplateSelector</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>HeaderStringFormat</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Header</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Selected</td>
<td>Triggered when the label is selected</td>
</tr>
<tr>
<td>Closing</td>
<td>Triggered when the label is closed</td>
</tr>
<tr>
<td>Closed</td>
<td>Triggered after the label is closed</td>
</tr>
</tbody></table>
<h2 id="Attributes-1"><a href="#Attributes-1" class="headerlink" title="Attributes"></a>Attributes</h2><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ShowAddButton</td>
<td>Whether to display the new label button</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>TagMargin</td>
<td>Tag Margin</td>
<td>Thickness(5)</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Events-1"><a href="#Events-1" class="headerlink" title="Events"></a>Events</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>AddTagButtonClick</td>
<td>Triggered when a tag is added</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TagContainer</span> <span class="attr">Name</span>=<span class="string">&quot;Container1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;11&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;420&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">ShowCloseButton</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Header</span>=<span class="string">&quot;H&quot;</span> <span class="attr">hc:TitleElement.Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">ShowCloseButton</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Selectable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">ShowCloseButton</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">IsSelected</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Selectable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">ShowCloseButton</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">ShowCloseButton</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">IsSelected</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Selectable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">ShowCloseButton</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hc:Tag.Header</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/Resources/Img/Album/1.jpg&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">hc:Tag.Header</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">hc:Tag</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:Tag</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">IsSelected</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Selectable</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hc:Tag.Header</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/Resources/Img/Avatar/avatar2.png&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">hc:Tag.Header</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">hc:Tag</span>&gt;</span> </span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Tag.png" alt="Tag"></p>
]]></content>
  </entry>
  <entry>
    <title>TimeBar</title>
    <url>/handycontrol/extend_controls/timeBar/index.html</url>
    <content><![CDATA[<p>A kind of progress bar containing hot spots and time scale.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementBorderTop, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTextBlockMove, Type = typeof(TextBlock))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTextBlockSelected, Type = typeof(TextBlock))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementCanvasSpe, Type = typeof(Canvas))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementHotspots, Type = typeof(Panel))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TimeBar</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Hotspots</td>
<td>Hot Spot Collection</td>
<td></td>
<td></td>
</tr>
<tr>
<td>HotspotsBrush</td>
<td>Hot Spot Color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowSpeStr</td>
<td>Whether to show the scale</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>TimeFormat</td>
<td>Time Format</td>
<td>yyyy-MM-dd HH:mm:ss</td>
<td></td>
</tr>
<tr>
<td>SelectedTime</td>
<td>Currently selected time</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>TimeChanged</td>
<td>Triggered when the selected time changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TimeBar</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;600&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/TimeBar.gif" alt="TimeBar"></p>
<h2 id="Set-hot-zone"><a href="#Set-hot-zone" class="headerlink" title="Set hot zone"></a>Set hot zone</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> hour = <span class="number">6</span> * i;</span><br><span class="line">    TimeBarDemo.Hotspots.Add(<span class="keyword">new</span> DateTimeRange(DateTime.Today.AddHours(hour), DateTime.Today.AddHours(hour + <span class="number">1</span>)));</span><br><span class="line">    TimeBarDemo.Hotspots.Add(<span class="keyword">new</span> DateTimeRange(DateTime.Today.AddHours(-hour), DateTime.Today.AddHours(-hour + <span class="number">1</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>RunningBlock</title>
    <url>/handycontrol/extend_controls/runningBlock/index.html</url>
    <content><![CDATA[<p>The RunningBlock can be used to rotate continuous content.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementContent, Type = typeof(FrameworkElement))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanel, Type = typeof(Panel))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RunningBlock</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Runaway</td>
<td>Can scroll content out of view</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>AutoRun</td>
<td>Whether to automatically trigger scrolling</td>
<td>false</td>
<td>Scrolling is triggered when the display area is not enough</td>
</tr>
<tr>
<td>Orientation</td>
<td>Scrolling Direction</td>
<td>Orientation.Horizontal</td>
<td></td>
</tr>
<tr>
<td>Duration</td>
<td>The time required to roll a cycle</td>
<td>5s</td>
<td></td>
</tr>
<tr>
<td>Speed</td>
<td>Scrolling speed</td>
<td>NaN</td>
<td>If a value is set, it will override the value of Duration</td>
</tr>
<tr>
<td>IsRunning</td>
<td>Is it rolling</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>AutoReverse</td>
<td>Whether to reverse the scrolling</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:RunningBlock</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:RunningBlock</span> <span class="attr">Content</span>=<span class="string">&quot;Text&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;20&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Duration</span>=<span class="string">&quot;0:0:10&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:RunningBlock</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Duration</span>=<span class="string">&quot;0:0:20&quot;</span> <span class="attr">IsRunning</span>=<span class="string">&quot;&#123;Binding IsMouseOver,RelativeSource=&#123;RelativeSource Self&#125;,Converter=&#123;StaticResource Boolean2BooleanReConverter&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/1.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/2.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/3.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/4.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/5.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/6.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/7.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/8.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/9.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:GifImage</span> <span class="attr">Uri</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/QQ/10.gif&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:RunningBlock</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/RunningBlock.gif" alt="RunningBlock"></p>
]]></content>
  </entry>
  <entry>
    <title>ScreenShot</title>
    <url>/handycontrol/extend_controls/screenshot/index.html</url>
    <content><![CDATA[<p>It can be triggered by shortcut keys to save the entire screen or the content of a specified area as a picture.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Screenshot</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>IsDrawing</td>
</tr>
<tr>
<td>IsSelecting</td>
</tr>
<tr>
<td>Size</td>
</tr>
<tr>
<td>SizeStr</td>
</tr>
<tr>
<td>PixelColor</td>
</tr>
<tr>
<td>PixelColorStr</td>
</tr>
<tr>
<td>PreviewBrush</td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Start()</td>
<td>Start screenshot</td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Snapped</td>
<td>Triggered when the screenshot is complete</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Screenshot().Start();</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Start Screenshot&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.StartScreenshot&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Snapped"><a href="#Snapped" class="headerlink" title="Snapped"></a>Snapped</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">ScreenshotDemoCtl</span> : <span class="title">IDisposable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ScreenshotDemoCtl</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            Screenshot.Snapped += Screenshot_Snapped;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Screenshot_Snapped</span>(<span class="params"><span class="built_in">object</span> sender, FunctionEventArgs&lt;ImageSource&gt; e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">new</span> HandyControl.Controls.Window</span><br><span class="line">            &#123;</span><br><span class="line">                Content = <span class="keyword">new</span> Image</span><br><span class="line">                &#123;</span><br><span class="line">                    Source = e.Info,</span><br><span class="line">                    Stretch = Stretch.None</span><br><span class="line">                &#125;,</span><br><span class="line">                WindowStartupLocation = WindowStartupLocation.CenterScreen</span><br><span class="line">            &#125;.ShowDialog();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"></span>)</span> =&gt; Screenshot.Snapped -= Screenshot_Snapped;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Screenshot.png" alt="Screenshot"></p>
]]></content>
  </entry>
  <entry>
    <title>ToggleBlock</title>
    <url>/handycontrol/extend_controls/toggleBlock/index.html</url>
    <content><![CDATA[<p>This control can switch the display content according to the selected state, and in some cases can replace <code>ToggleButton</code>.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ToggleBlock</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>IsChecked</td>
<td>Is checked</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>CheckedContent</td>
<td>The content displayed when selected</td>
<td></td>
<td></td>
</tr>
<tr>
<td>UnCheckedContent</td>
<td>The content displayed when unchecked</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IndeterminateContent</td>
<td>The content displayed when the selected state is unknown</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ToggleBlock</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ToggleBlock.UnCheckedContent</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ToggleBlock.UnCheckedContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ToggleBlock.CheckedContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ToggleBlock.CheckedContent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:ToggleBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ToggleBlock</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding DataGot&#125;&quot;</span> <span class="attr">VerticalContentAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">HorizontalContentAlignment</span>=<span class="string">&quot;Stretch&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:ToggleBlock.UnCheckedContent</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:LoadingCircle</span> <span class="attr">IsRunning</span>=<span class="string">&quot;&#123;Binding DataGot,Converter=&#123;StaticResource Boolean2BooleanReConverter&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:ToggleBlock.UnCheckedContent</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:ToggleBlock.CheckedContent</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Background</span>=<span class="string">&quot;Transparent&quot;</span> <span class="attr">ItemContainerStyle</span>=<span class="string">&quot;&#123;StaticResource ListBoxItemCustom&#125;&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">ItemsPanel</span>=<span class="string">&quot;&#123;StaticResource FluidMoveBehaviorWrapPanelItemsPanelTemplate&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">userControl:Avatar</span> <span class="attr">DisplayName</span>=<span class="string">&quot;&#123;Binding DisplayName&#125;&quot;</span> <span class="attr">Link</span>=<span class="string">&quot;&#123;Binding Link&#125;&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;Binding AvatarUri&#125;&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:ToggleBlock.CheckedContent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:ToggleBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>TimePicker</title>
    <url>/handycontrol/extend_controls/timePicker/index.html</url>
    <content><![CDATA[<p>The TimePicker control allows the user to select the time by typing the time in the text box or using the drop-down calendar control.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementRoot, Type = typeof(Grid))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementTextBox, Type = typeof(WatermarkTextBox))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementButton, Type = typeof(Button))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPopup, Type = typeof(Popup))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TimePicker</span> : <span class="title">Control</span>, <span class="title">IDataInput</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-TimePicker"><a href="#Create-TimePicker" class="headerlink" title="Create TimePicker"></a>Create TimePicker</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TimePicker</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> timePicker = <span class="keyword">new</span> TimePicker();</span><br></pre></td></tr></table></figure>
<p>The generated TimePicker is shown below:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/TimePicker_1.png" alt="TimePicker"></p>
<h1 id="Selection-period"><a href="#Selection-period" class="headerlink" title="Selection period"></a>Selection period</h1><p>You can enter the time through the text box, or click the button to the right of the text box to open the drop-down clock control to select the time.</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/TimePicker_2.png" alt="TimePicker"></p>
<p>You can also set the date like this in a XAML clock or code.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TimePicker</span> <span class="attr">SelectedTime</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">timePicker.SelectedTime = DateTime.Now;</span><br></pre></td></tr></table></figure>
<h1 id="Change-the-clock-style"><a href="#Change-the-clock-style" class="headerlink" title="Change the clock style"></a>Change the clock style</h1><p>By changing the Clock property, TimePicker can change the style of the clock.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TimePicker</span> <span class="attr">ShowClearButton</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TimePickerPlus&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:TimePicker.Clock</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:ListClock</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:TimePicker.Clock</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:TimePicker</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/TimePicker_3.png" alt="TimePicker"></p>
<h1 id="Set-title-and-placeholder-text"><a href="#Set-title-and-placeholder-text" class="headerlink" title="Set title and placeholder text"></a>Set title and placeholder text</h1><p>You can add Headers and Placeholders to the DatePicker to indicate to the user what they do. To use these two properties, you first need to apply the <strong>TimePickerExtend</strong> or <strong>TimePickerPlus</strong> styles.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:TimePicker</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TimePickerExtend&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedTime</td>
<td>Get or set the currently selected time</td>
</tr>
<tr>
<td>Clock</td>
<td>Get or set the drop-down clock</td>
</tr>
<tr>
<td>TimeFormat</td>
<td>Get or set the format used to display the selected time</td>
</tr>
<tr>
<td>DisplayTime</td>
<td>Get or set the time to be displayed</td>
</tr>
<tr>
<td>IsDropDownOpen</td>
<td>Gets or sets a value that indicates whether the pull-down clock is turned on or off</td>
</tr>
<tr>
<td>Text</td>
<td>Get the text displayed by ** TimePicker ** or set the selected time</td>
</tr>
<tr>
<td>VerifyFunc</td>
<td>Get or Set Data Validation Delegation</td>
</tr>
<tr>
<td>IsError</td>
<td>Get or set whether the data is wrong</td>
</tr>
<tr>
<td>ErrorStr</td>
<td>Get or Set Error Alert</td>
</tr>
<tr>
<td>TextType</td>
<td>Get or Set Text Type</td>
</tr>
<tr>
<td>ShowClearButton</td>
<td>Gets or sets whether to show the clear button</td>
</tr>
<tr>
<td>SelectionTextBrush</td>
<td></td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
</tr>
<tr>
<td>CaretBrushProperty</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>VerifyData ()</td>
<td>Verify Data</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Transfer</title>
    <url>/handycontrol/extend_controls/transfer/index.html</url>
    <content><![CDATA[<p>The shuttle selection box uses an intuitive way to move elements in the two columns to complete the selection behavior.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DefaultProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ContentProperty(<span class="meta-string">&quot;Items&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementPanel, Type = typeof(Panel))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleItemsControl</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementItemsOrigin, Type = typeof(SimpleItemsControl))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementItemsSelected, Type = typeof(SimpleItemsControl))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Transfer</span> : <span class="title">SimpleItemsControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>SelectedItems</td>
<td>Selected Items</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectionChanged</td>
<td>Triggered when the selected item changes</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Transfer</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Transfer.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Transfer.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Transfer</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Transfer.gif" alt="Transfer"></p>
]]></content>
  </entry>
  <entry>
    <title>UniformSpacingPanel</title>
    <url>/handycontrol/extend_controls/uniformSpacingPanel/index.html</url>
    <content><![CDATA[<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UniformSpacingPanel</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Orientation</td>
<td></td>
<td>Horizontal</td>
<td></td>
</tr>
<tr>
<td>Spacing</td>
<td></td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>ItemWidth</td>
<td></td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>ItemHeight</td>
<td></td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>ItemHorizontalAlignment</td>
<td></td>
<td>Stretch</td>
<td></td>
</tr>
<tr>
<td>ItemVerticalAlignment</td>
<td></td>
<td>Stretch</td>
<td></td>
</tr>
<tr>
<td>HorizontalSpacing</td>
<td></td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>VerticalSpacing</td>
<td></td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>ChildWrapping</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">hc:SimpleStackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:UniformSpacingPanel</span> <span class="attr">Spacing</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:UniformSpacingPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeDashArray</span>=<span class="string">&quot;2,2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:UniformSpacingPanel</span> <span class="attr">Spacing</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:UniformSpacingPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeDashArray</span>=<span class="string">&quot;2,2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:UniformSpacingPanel</span> <span class="attr">Spacing</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">ChildWrapping</span>=<span class="string">&quot;Wrap&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:UniformSpacingPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Divider</span> <span class="attr">LineStrokeDashArray</span>=<span class="string">&quot;2,2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:UniformSpacingPanel</span> <span class="attr">Spacing</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;70&quot;</span> <span class="attr">ChildWrapping</span>=<span class="string">&quot;Wrap&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is the content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:UniformSpacingPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SimpleStackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/UniformSpacingPanel.png" alt="UniformSpacingPanel"></p>
]]></content>
  </entry>
  <entry>
    <title>WaterfallPanel</title>
    <url>/handycontrol/extend_controls/waterfallPanel/index.html</url>
    <content><![CDATA[<p>This panel allows elements to be laid out in the same width and unequal height or the same height and unequal width.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WaterfallPanel</span> : <span class="title">Panel</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>AutoGroup</td>
<td></td>
<td>False</td>
<td></td>
</tr>
<tr>
<td>DesiredLength</td>
<td></td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Groups</td>
<td>Number of groups</td>
<td>2</td>
<td>The number of columns is the number of columns when the width is equal and the width of the same height is the number of rows</td>
</tr>
<tr>
<td>Orientation</td>
<td>Arrangement direction</td>
<td>Orientation.Horizontal</td>
<td>Horizontal is equal width and unequal height, Vertical is equal height and unequal width</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:NumericUpDown</span> <span class="attr">x:Name</span>=<span class="string">&quot;UpDownGroups&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Minimum</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource NumericUpDownExtend&#125;&quot;</span> <span class="attr">hc:TitleElement.Title</span>=<span class="string">&quot;Groups&quot;</span> <span class="attr">hc:TitleElement.TitleWidth</span>=<span class="string">&quot;50&quot;</span> <span class="attr">hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:ScrollViewer</span> <span class="attr">MaxHeight</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:WaterfallPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Groups</span>=<span class="string">&quot;&#123;Binding Value,ElementName=UpDownGroups&#125;&quot;</span> <span class="attr">hc:PanelElement.FluidMoveBehavior</span>=<span class="string">&quot;&#123;StaticResource BehaviorXY200&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;140&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;170&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource InfoBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:WaterfallPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:ScrollViewer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:ScrollViewer</span> <span class="attr">Margin</span>=<span class="string">&quot;32,0,0,0&quot;</span> <span class="attr">HorizontalScrollBarVisibility</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">VerticalScrollBarVisibility</span>=<span class="string">&quot;Hidden&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:WaterfallPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Groups</span>=<span class="string">&quot;&#123;Binding Value,ElementName=UpDownGroups&#125;&quot;</span> <span class="attr">hc:PanelElement.FluidMoveBehavior</span>=<span class="string">&quot;&#123;StaticResource BehaviorXY200&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;140&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;170&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource InfoBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;ContentDemoStr&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:WaterfallPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:ScrollViewer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/WaterfallPanel.png" alt="WaterfallPanel"></p>
]]></content>
  </entry>
  <entry>
    <title>TransitioningContentControl</title>
    <url>/handycontrol/extend_controls/transitioningContentControl/index.html</url>
    <content><![CDATA[<p>Mainly used for the transitional rendering effect of changing content.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TransitioningContentControl</span> : <span class="title">ContentControl</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>TransitionMode</td>
<td>Transition Mode</td>
<td>TransitionMode.Right2Left</td>
<td></td>
</tr>
<tr>
<td>TransitionStoryboard</td>
<td>Transition Animation</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Storyboard</span> <span class="attr">x:Key</span>=<span class="string">&quot;Custom1Transition&quot;</span> <span class="attr">x:Shared</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">From</span>=<span class="string">&quot;50&quot;</span> <span class="attr">To</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Duration</span>=<span class="string">&quot;0:0:0.4&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DoubleAnimation.EasingFunction</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ElasticEase</span> <span class="attr">Oscillations</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DoubleAnimation.EasingFunction</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DoubleAnimation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Storyboard</span> <span class="attr">x:Key</span>=<span class="string">&quot;Custom2Transition&quot;</span> <span class="attr">x:Shared</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">From</span>=<span class="string">&quot;10&quot;</span> <span class="attr">To</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Duration</span>=<span class="string">&quot;0:0:0.4&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DoubleAnimation.EasingFunction</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ElasticEase</span> <span class="attr">Oscillations</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DoubleAnimation.EasingFunction</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DoubleAnimation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Storyboard</span> <span class="attr">x:Key</span>=<span class="string">&quot;Custom3Transition&quot;</span> <span class="attr">x:Shared</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">From</span>=<span class="string">&quot;.8&quot;</span> <span class="attr">To</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Duration</span>=<span class="string">&quot;0:0:0.4&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DoubleAnimation.EasingFunction</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ElasticEase</span> <span class="attr">Oscillations</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DoubleAnimation.EasingFunction</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DoubleAnimation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,32&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;ButtonVisibilitySwitch&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonSwitch&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Visibility</span>=<span class="string">&quot;&#123;Binding IsChecked,ElementName=ButtonVisibilitySwitch,Converter=&#123;StaticResource Boolean2VisibilityConverter&#125;&#125;&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Right2Left&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Left2Right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Left2Right&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Bottom2Top&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Bottom2Top&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Top2Bottom&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Top2Bottom&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Right2LeftWithFade&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Right2LeftWithFade&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Left2RightWithFade&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Left2RightWithFade&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Bottom2TopWithFade&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Bottom2TopWithFade&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Top2BottomWithFade&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Top2BottomWithFade&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionMode</span>=<span class="string">&quot;Right2LeftWithFade&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;x:Static hc:TransitionMode.Right2LeftWithFade&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionStoryboard</span>=<span class="string">&quot;&#123;StaticResource Custom1Transition&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Custom1&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionStoryboard</span>=<span class="string">&quot;&#123;StaticResource Custom2Transition&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Custom2&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:TransitioningContentControl</span> <span class="attr">TransitionStoryboard</span>=<span class="string">&quot;&#123;StaticResource Custom3Transition&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Custom3&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:TransitioningContentControl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/TransitioningContentControl.gif" alt="TransitioningContentControl"></p>
]]></content>
  </entry>
  <entry>
    <title>Watermark</title>
    <url>/handycontrol/extend_controls/watermark/index.html</url>
    <content><![CDATA[<p>You can create a tiled background with the specified content.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementRoot, Type = typeof(Border))</span>]</span><br><span class="line">[<span class="meta">ContentProperty(nameof(Content))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Watermark</span> : <span class="title">Control</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Angle</td>
<td>Watermark rotation angle</td>
<td>20</td>
<td>provided by default style</td>
</tr>
<tr>
<td>Content</td>
<td>Content that needs to use watermark</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Mark</td>
<td>Watermark</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MarkWidth</td>
<td>Watermark width</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>MarkHeight</td>
<td>Watermark height</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>MarkBrush</td>
<td>Watermark color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AutoSizeEnabled</td>
<td>Whether the watermark is automatically adapted to the size</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>MarkMargin</td>
<td>Watermark Margin</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Watermark</span> <span class="attr">Mark</span>=<span class="string">&quot;Project&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">MarkMargin</span>=<span class="string">&quot;30,0&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Watermark_1.png" alt="Watermark"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Watermark</span> <span class="attr">Mark</span>=<span class="string">&quot;&#123;StaticResource GitHubStrGeometry&#125;&quot;</span> <span class="attr">MarkMargin</span>=<span class="string">&quot;30,0&quot;</span> <span class="attr">MarkWidth</span>=<span class="string">&quot;200&quot;</span> <span class="attr">MarkHeight</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Watermark_2.png" alt="Watermark"></p>
]]></content>
  </entry>
  <entry>
    <title>WaveProgressBar</title>
    <url>/handycontrol/extend_controls/waveProgressBar/index.html</url>
    <content><![CDATA[<p>A special effect of the progress bar that can be used to enhance the user experience.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementWave, Type = typeof(FrameworkElement))</span>]</span><br><span class="line">[<span class="meta">TemplatePart(Name = ElementClip, Type = typeof(FrameworkElement))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WaveProgressBar</span> : <span class="title">RangeBase</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>Text</td>
<td>Progress text</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowText</td>
<td>Whether to show progress text</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>WaveFill</td>
<td>Wave Paint Brush</td>
<td></td>
<td></td>
</tr>
<tr>
<td>WaveThickness</td>
<td>Wave border thickness</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>WaveStroke</td>
<td>Wave Border Brush</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Style</th>
</tr>
</thead>
<tbody><tr>
<td>ProgressBarSuccessWave</td>
</tr>
<tr>
<td>ProgressBarInfoWave</td>
</tr>
<tr>
<td>ProgressBarWarningWave</td>
</tr>
<tr>
<td>ProgressBarDangerWave</td>
</tr>
<tr>
<td>ProgressBarPrimaryWave</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,32,0,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:WaveProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:WaveProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">WaveThickness</span>=<span class="string">&quot;4&quot;</span> <span class="attr">WaveStroke</span>=<span class="string">&quot;#FFFF0080&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:WaveProgressBar.WaveFill</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearGradientBrush</span> <span class="attr">EndPoint</span>=<span class="string">&quot;0,1&quot;</span> <span class="attr">StartPoint</span>=<span class="string">&quot;0,0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">&quot;#66FF0080&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">&quot;#FFFF0080&quot;</span> <span class="attr">Offset</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearGradientBrush</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:WaveProgressBar.WaveFill</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:WaveProgressBar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:WaveProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding Value,ElementName=SliderDemo&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16,0,0,0&quot;</span> <span class="attr">ShowText</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarWarningWave&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/WaveProgressBar.gif" alt="WaveProgressBar"></p>
]]></content>
  </entry>
  <entry>
    <title>Commands</title>
    <url>/handycontrol/interactivity/commands/index.html</url>
    <content><![CDATA[<p>you can bind this pre-definded commands in your xaml</p>
<h1 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h1><table>
<thead>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>OpenLink</td>
<td>Open Link</td>
</tr>
<tr>
<td>ShutdownApp</td>
<td>Close Application</td>
</tr>
<tr>
<td>PushMainWindow2Top</td>
<td>Open MainWindow in front</td>
</tr>
<tr>
<td>CloseWindow</td>
<td>Close Current Window</td>
</tr>
<tr>
<td>StartScreenshot</td>
<td>Take Screenshot</td>
</tr>
</tbody></table>
<h2 id="OpenLink"><a href="#OpenLink" class="headerlink" title="OpenLink"></a>OpenLink</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.OpenLink&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;https://google.com&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Open Link&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="ShutdownApp"><a href="#ShutdownApp" class="headerlink" title="ShutdownApp"></a>ShutdownApp</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.ShutdownApp&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;ShutDown App&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="PushMainWindow2Top"><a href="#PushMainWindow2Top" class="headerlink" title="PushMainWindow2Top"></a>PushMainWindow2Top</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.PushMainWindow2Top&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Push Main Window&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="CloseWindow"><a href="#CloseWindow" class="headerlink" title="CloseWindow"></a>CloseWindow</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.CloseWindow&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Self&#125;&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Close Window&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="StartScreenshot"><a href="#StartScreenshot" class="headerlink" title="StartScreenshot"></a>StartScreenshot</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;hc:ControlCommands.StartScreenshot&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Start Screen Shot&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Behaviors</title>
    <url>/handycontrol/interactivity/behaviors/index.html</url>
    <content><![CDATA[<h1 id="FluidMoveBehavior"><a href="#FluidMoveBehavior" class="headerlink" title="FluidMoveBehavior"></a>FluidMoveBehavior</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">x:Name</span>=<span class="string">&quot;Panel&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Interaction.Behaviors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:FluidMoveBehavior</span> <span class="attr">Duration</span>=<span class="string">&quot;00:00:01&quot;</span> <span class="attr">AppliesTo</span>=<span class="string">&quot;Children&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:FluidMoveBehavior.EaseY</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">BounceEase</span> <span class="attr">EasingMode</span>=<span class="string">&quot;EaseOut&quot;</span> <span class="attr">Bounces</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">hc:FluidMoveBehavior.EaseY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:FluidMoveBehavior</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Interaction.Behaviors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>now add items:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Rectangle rect = <span class="keyword">new</span> Rectangle();</span><br><span class="line">rect.Height = <span class="number">50</span>;</span><br><span class="line">rect.Width = <span class="number">50</span>;</span><br><span class="line">rect.Fill = Brushes.DeepPink;</span><br><span class="line">rect.Margin = <span class="keyword">new</span> Thickness(<span class="number">5.0</span>);</span><br><span class="line"><span class="keyword">this</span>.Panel.Children.Add(rect);</span><br></pre></td></tr></table></figure>
<p>or remove items:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.Panel.Children.Count &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.Panel.Children.RemoveAt(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="MouseDragElementBehavior"><a href="#MouseDragElementBehavior" class="headerlink" title="MouseDragElementBehavior"></a>MouseDragElementBehavior</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Rectangle</span> <span class="attr">Width</span>=<span class="string">&quot;40&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;40&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;DeepPink&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Interaction.Behaviors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:MouseDragElementBehavior</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Interaction.Behaviors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Rectangle</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Hooks</title>
    <url>/handycontrol/interactivity/hooks/index.html</url>
    <content><![CDATA[<p>There are some hooks to work with Windows functions</p>
<h1 id="Hooks"><a href="#Hooks" class="headerlink" title="Hooks"></a>Hooks</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>ClipboardHook</td>
</tr>
<tr>
<td>KeyboardHook</td>
</tr>
<tr>
<td>SystemMenuHook</td>
</tr>
</tbody></table>
<h2 id="ClipboardHook"><a href="#ClipboardHook" class="headerlink" title="ClipboardHook"></a>ClipboardHook</h2><h3 id="Methods-and-Events"><a href="#Methods-and-Events" class="headerlink" title="Methods and Events"></a>Methods and Events</h3><table>
<thead>
<tr>
<th>Method</th>
<th>Event</th>
</tr>
</thead>
<tbody><tr>
<td>Start</td>
<td>ContentChanged</td>
</tr>
<tr>
<td>Stop</td>
<td></td>
</tr>
</tbody></table>
<h3 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ClipboardHook.Start();</span><br><span class="line">ClipboardHook.Stop();</span><br><span class="line">ClipboardHook.ContentChanged +=ClipboardHook_ContentChanged;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ClipboardHook_ContentChanged</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="KeyboardHook"><a href="#KeyboardHook" class="headerlink" title="KeyboardHook"></a>KeyboardHook</h2><h3 id="Methods-and-Events-1"><a href="#Methods-and-Events-1" class="headerlink" title="Methods and Events"></a>Methods and Events</h3><table>
<thead>
<tr>
<th>Method</th>
<th>Event</th>
</tr>
</thead>
<tbody><tr>
<td>Start</td>
<td>KeyDown</td>
</tr>
<tr>
<td>Stop</td>
<td>KeyUp</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="Case-1"><a href="#Case-1" class="headerlink" title="Case"></a>Case</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">KeyboardHook.Start();</span><br><span class="line">KeyboardHook.Stop();</span><br><span class="line">KeyboardHook.KeyDown +=KeyboardHook_KeyDown;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">KeyboardHook_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, HandyControl.Data.KeyboardHookEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="SystemMenuHook"><a href="#SystemMenuHook" class="headerlink" title="SystemMenuHook"></a>SystemMenuHook</h2><p>With this hook you can add a new item to the context menu Or display your Custom context menu</p>
<h3 id="Methods-and-Events-2"><a href="#Methods-and-Events-2" class="headerlink" title="Methods and Events"></a>Methods and Events</h3><table>
<thead>
<tr>
<th>Method</th>
<th>Event</th>
</tr>
</thead>
<tbody><tr>
<td>Insert</td>
<td>Click</td>
</tr>
<tr>
<td>InsertSeperator</td>
<td></td>
</tr>
<tr>
<td>Remove</td>
<td></td>
</tr>
<tr>
<td>SetCustomContextMenu</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="Case-2"><a href="#Case-2" class="headerlink" title="Case"></a>Case</h3><h4 id="Add-Items-to-ContextMenu"><a href="#Add-Items-to-ContextMenu" class="headerlink" title="Add Items to ContextMenu"></a>Add Items to ContextMenu</h4><div class="note warning">
            <p>Put this code on WindowLoaded Event</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">SystemMenuHook.Insert(<span class="number">0</span>, <span class="number">1000</span>, <span class="string">&quot;Item 1&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">SystemMenuHook.InsertSeperator(<span class="number">1</span>, <span class="keyword">this</span>);</span><br><span class="line">SystemMenuHook.Remove(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>if you want to handle click event, you need to create click event</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">SystemMenuHook.Click += SystemMenuHook_Click;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SystemMenuHook_Click</span>(<span class="params"><span class="built_in">int</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (obj)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> MenuId:</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h4 id="Display-your-Custom-ContextMenu-Available-Only-in-Custom-Version"><a href="#Display-your-Custom-ContextMenu-Available-Only-in-Custom-Version" class="headerlink" title="Display your Custom ContextMenu [Available Only in Custom Version]"></a>Display your Custom ContextMenu [<a href="https://github.com/ghost1372/HandyControls">Available Only in Custom Version</a>]</h4><p>first add a ContextMenu to your window resource with a Key</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Window.Resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ContextMenu</span> <span class="attr">x:Key</span>=<span class="string">&quot;systemMenu&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Help&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Choose theme&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Add Note&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Separator</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Exit&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ContextMenu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Window.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>then<br> <div class="note warning">
            <p>Put this code on WindowLoaded Event</p>
          </div></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> context = Resources[<span class="string">&quot;systemMenu&quot;</span>] <span class="keyword">as</span> ContextMenu;</span><br><span class="line">SystemMenuHook.SetCustomContextMenu(<span class="keyword">this</span>, context);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Triggers</title>
    <url>/handycontrol/interactivity/triggers/index.html</url>
    <content><![CDATA[<p>You can use Interaction Triggers to handle user-initiated events</p>
<h1 id="EventTrigger"><a href="#EventTrigger" class="headerlink" title="EventTrigger"></a>EventTrigger</h1><h2 id="EventToCommand"><a href="#EventToCommand" class="headerlink" title="EventToCommand"></a>EventToCommand</h2><p>You can use this method if you want to handle event and pass event args to command<br>example:</p>
<div class="note info">
            <p>you should write event name in <code>EventName</code> Section</p>
          </div>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">hc:SearchBar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:EventTrigger</span> <span class="attr">EventName</span>=<span class="string">&quot;SearchStarted&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:EventToCommand</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding OnSearchStartedCommand&#125;&quot;</span> <span class="attr">PassEventArgsToCommand</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:EventTrigger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SearchBar</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="InvokeCommandAction"><a href="#InvokeCommandAction" class="headerlink" title="InvokeCommandAction"></a>InvokeCommandAction</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">hc:EventTrigger</span> <span class="attr">EventName</span>=<span class="string">&quot;MouseLeftButtonDown&quot;</span> &gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">hc:InvokeCommandAction</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding LeftMouseButtonDownCommand&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;test&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">hc:EventTrigger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="LaunchUriOrFileAction"><a href="#LaunchUriOrFileAction" class="headerlink" title="LaunchUriOrFileAction"></a>LaunchUriOrFileAction</h1><p>Open Url or File</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">x:Name</span>=<span class="string">&quot;button&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Click Me&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:EventTrigger</span> <span class="attr">EventName</span>=<span class="string">&quot;Click&quot;</span> <span class="attr">SourceObject</span>=<span class="string">&quot;&#123;Binding ElementName=button&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:LaunchUriOrFileAction</span> <span class="attr">Path</span>=<span class="string">&quot;https://ghost1372.github.io&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:EventTrigger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:Interaction.Triggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Window</title>
    <url>/handycontrol/extend_controls/window/index.html</url>
    <content><![CDATA[<p>HC’s extension of wpf native <code>Window</code>.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TemplatePart(Name = ElementNonClientArea, Type = typeof(UIElement))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Window</span> : <span class="title">System.Windows.Window</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>CloseButtonBackground</td>
<td>Close button background color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CloseButtonForeground</td>
<td>Close button foreground color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CloseButtonHoverBackground</td>
<td>Close button mouse hover background color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CloseButtonHoverForeground</td>
<td>Close button mouse hover foreground color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>OtherButtonBackground</td>
<td>Other Button Background Color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>OtherButtonForeground</td>
<td>Foreground color of other buttons</td>
<td></td>
<td></td>
</tr>
<tr>
<td>OtherButtonHoverBackground</td>
<td>Other button mouse hover background color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>OtherButtonHoverForeground</td>
<td>Other button mouse hover foreground color</td>
<td></td>
<td></td>
</tr>
<tr>
<td>NonClientAreaContent</td>
<td>NonClientAreaContent</td>
<td></td>
<td></td>
</tr>
<tr>
<td>NonClientAreaBackground</td>
<td>NonClientAreaBackground</td>
<td>NonClientAreaBackground</td>
<td></td>
</tr>
<tr>
<td>NonClientAreaForeground</td>
<td>Foreground color of non-client area</td>
<td></td>
<td></td>
</tr>
<tr>
<td>NonClientAreaHeight</td>
<td>NonClientAreaHeight</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ShowNonClientArea</td>
<td>Whether to display non-client area</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>ShowTitle</td>
<td>Whether to show the window title</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>ExtendViewIntoNonClientArea</td>
<td>Extend View Into NonClientArea</td>
<td>false</td>
<td>Only Custom Version</td>
</tr>
<tr>
<td>IsFullScreen</td>
<td>Whether the window is in full screen</td>
<td>false</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Window</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.Window.CommonWindow&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource MainContentBackgroundBrush&#125;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">WindowStartupLocation</span>=<span class="string">&quot;CenterScreen&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">Title</span>=<span class="string">&quot;Title&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">Height</span>=<span class="string">&quot;450&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">Width</span>=<span class="string">&quot;800&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">Icon</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/icon.ico&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource MainContentForegroundDrawingBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Window</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/extend_controls/Window.png" alt="Window"></p>
<h1 id="Attached-Properties"><a href="#Attached-Properties" class="headerlink" title="Attached Properties"></a>Attached Properties</h1><p>you can use <strong>WindowAttach</strong> Attached Property for dragging window or any control. </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">hc:Window</span> <span class="attr">WindowAttach:IsDragElement</span>=<span class="string">&quot;True&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">...</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Shortcut"><a href="#Shortcut" class="headerlink" title="Shortcut"></a>Shortcut</h1><p>you should use <strong>GlobalShortcut.KeyBindings</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:GlobalShortcut.KeyBindings</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">KeyBinding</span> <span class="attr">Modifiers</span>=<span class="string">&quot;Control+Alt&quot;</span> <span class="attr">Key</span>=<span class="string">&quot;E&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding GlobalShortcutErrorCmd&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">KeyBinding</span> <span class="attr">Modifiers</span>=<span class="string">&quot;Control+Alt&quot;</span> <span class="attr">Key</span>=<span class="string">&quot;I&quot;</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding Main.GlobalShortcutInfoCmd, Source=&#123;StaticResource Locator&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">hc:GlobalShortcut.KeyBindings</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Menu"><a href="#Menu" class="headerlink" title="Menu"></a>Menu</h1><p>If you want to use menus in the title bar, you should use <strong>NonClientAreaContent</strong> property</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Window.NonClientAreaContent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;About&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonCustom&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Help&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonCustom&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;Repository&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">&quot;GitHub&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">MenuItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Menu</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Window.NonClientAreaContent</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="NonClientAreaContent"><a href="#NonClientAreaContent" class="headerlink" title="NonClientAreaContent"></a>NonClientAreaContent</h1><p>If you want to put objects, you should use it in this way</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Window.NonClientAreaContent</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Put your objects here --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Window.NonClientAreaContent</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Effects</title>
    <url>/handycontrol/media/Effects/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>BrightnessEffect</td>
<td></td>
</tr>
<tr>
<td>ColorComplementEffect</td>
<td></td>
</tr>
<tr>
<td>ColorMatrixEffect</td>
<td></td>
</tr>
<tr>
<td>ContrastEffect</td>
<td></td>
</tr>
<tr>
<td>EffectBase</td>
<td></td>
</tr>
<tr>
<td>GrayScaleEffect</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Animation</title>
    <url>/handycontrol/media/Animation/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>DiscreteGeometryKeyFrame</td>
<td></td>
</tr>
<tr>
<td>EasingGeometryKeyFrame</td>
<td></td>
</tr>
<tr>
<td>GeometryAnimation</td>
<td></td>
</tr>
<tr>
<td>GeometryAnimationBase</td>
<td></td>
</tr>
<tr>
<td>GeometryAnimationUsingKeyFrames</td>
<td></td>
</tr>
<tr>
<td>GeometryKeyFrame</td>
<td></td>
</tr>
<tr>
<td>GeometryKeyFrameCollection</td>
<td></td>
</tr>
<tr>
<td>LinearGeometryKeyFrame</td>
<td></td>
</tr>
<tr>
<td>ResolvedKeyFrameEntry</td>
<td>Internal</td>
</tr>
<tr>
<td>SplineGeometryKeyFrame</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>BindToEnum</title>
    <url>/handycontrol/persianToolkit/bindToEnum/index.html</url>
    <content><![CDATA[<p>with this extension you can bind Enum to itemsources</p>
<h1 id="Enum"><a href="#Enum" class="headerlink" title="Enum"></a>Enum</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> Status</span><br><span class="line">&#123;</span><br><span class="line">    Horrible,</span><br><span class="line">    Bad,</span><br><span class="line">    SoSo,</span><br><span class="line">    Good,</span><br><span class="line">    Better,</span><br><span class="line">    Best</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Source=&#123;hc:EnumBindingSource &#123;x:Type local:Status&#125;&#125;&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><div class="note info">
            <p>you can create description for enum and bind itemsources to description, you only need to change enum class like this:</p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TypeConverter(typeof(EnumDescriptionTypeConverter))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> Status</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Description(<span class="meta-string">&quot;This is horrible&quot;</span>)</span>]</span><br><span class="line">    Horrible,</span><br><span class="line">    [<span class="meta">Description(<span class="meta-string">&quot;This is bad&quot;</span>)</span>]</span><br><span class="line">    Bad,</span><br><span class="line">    [<span class="meta">Description(<span class="meta-string">&quot;This is so so&quot;</span>)</span>]</span><br><span class="line">    SoSo,</span><br><span class="line">    [<span class="meta">Description(<span class="meta-string">&quot;This is good&quot;</span>)</span>]</span><br><span class="line">    Good,</span><br><span class="line">    [<span class="meta">Description(<span class="meta-string">&quot;This is better&quot;</span>)</span>]</span><br><span class="line">    Better,</span><br><span class="line">    [<span class="meta">Description(<span class="meta-string">&quot;This is best&quot;</span>)</span>]</span><br><span class="line">    Best</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>If you are using a built-in or third party enums and you can not add a Description attribute to it, you can use this solution:</p>
          </div>

<ul>
<li>Create an string[] Array and create your description in order</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">x:Array</span> <span class="attr">Type</span>=<span class="string">&quot;sys:String&quot;</span> <span class="attr">x:Key</span>=<span class="string">&quot;myDescription&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sys:String</span>&gt;</span>Left To Right Description<span class="tag">&lt;/<span class="name">sys:String</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sys:String</span>&gt;</span>Right To Left Description<span class="tag">&lt;/<span class="name">sys:String</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">x:Array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>Pass your Description Array to EnumBindingSource</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Source=&#123;hc:EnumBindingSource &#123;x:Type FlowDirection&#125;, &#123;StaticResource myDescription&#125;&#125;&#125;&quot;</span> <span class="attr">DisplayMemberPath</span>=<span class="string">&quot;Value&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>Do not forget that in this case you must use DisplayMemberPath.<br>If <code>DisplayMemberPath</code> is set to <code>Value</code>, it displays the <code>Description</code> value and if <code>DisplayMemberPath</code> is set to <code>Key</code>, it displays <code>Enum</code> itself.</p>
          </div>

<h1 id="Localized-Description"><a href="#Localized-Description" class="headerlink" title="Localized Description"></a>Localized Description</h1><p>you can use this attribute for localize enum</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TypeConverter(typeof(EnumDescriptionTypeConverter))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> Status</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">LocalizedDescription(<span class="meta-string">&quot;Good&quot;</span>, typeof(LangResources))</span>]</span><br><span class="line">    Good,</span><br><span class="line">    [<span class="meta">LocalizedDescription(<span class="meta-string">&quot;Better&quot;</span>, typeof(LangResources))</span>]</span><br><span class="line">    Better,</span><br><span class="line">    [<span class="meta">LocalizedDescription(<span class="meta-string">&quot;Best&quot;</span>, typeof(LangResources))</span>]</span><br><span class="line">    Best</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>BindingProxy</title>
    <url>/handycontrol/persianToolkit/bindingProxy/index.html</url>
    <content><![CDATA[<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BindingProxy</span> : <span class="title">Freezable</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>BindingProxy Located in the <strong>HandyControl.Tools</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<p>The primary purpose of this class is to define objects that have a modifiable and a read-only state, but the interesting feature in our case is that Freezable objects can inherit the DataContext even when they’re not in the visual or logical tree.</p>
<p>Let’s illustrate with a simple example: we want to display a list of products in a DataGrid. In the grid, we want to be able to show or hide the Price column, based on the value of a ShowPrice property exposed by the ViewModel. The obvious approach is to bind the Visibility of the column to the ShowPrice property:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Header</span>=<span class="string">&quot;Price&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Price&#125;&quot;</span> <span class="attr">IsReadOnly</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Visibility</span>=<span class="string">&quot;&#123;Binding ShowPrice, Converter=&#123;StaticResource visibilityConverter&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>Unfortunately, changing the value of ShowPrice has no effect, and the column is always visible, If we look at the Output window in Visual Studio, we notice the following line:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.Windows.Data Error: 2 : Cannot find governing FrameworkElement or FrameworkContentElement for target element. BindingExpression:Path&#x3D;ShowPrice; DataItem&#x3D;null; target element is ‘DataGridTextColumn’ (HashCode&#x3D;32685253); target property is ‘Visibility’ (type ‘Visibility’)</span><br></pre></td></tr></table></figure>
<p>The solution to our problem is actually quite simple, and takes advantage of the Freezable class.</p>
<h1 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h1><p>We can declare an instance of this class in the resources of the DataGrid, and bind the <code>Value</code> property to the current DataContext:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataGrid.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:BindingProxy</span> <span class="attr">x:Key</span>=<span class="string">&quot;proxy&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;Binding&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">DataGrid.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The last step is to specify this BindingProxy object (easily accessible with StaticResource) as the Source for the binding:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Header</span>=<span class="string">&quot;Price&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Price&#125;&quot;</span> <span class="attr">IsReadOnly</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Visibility</span>=<span class="string">&quot;&#123;Binding Value.ShowPrice, Converter=&#123;StaticResource visibilityConverter&#125;, Source=&#123;StaticResource proxy&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>Binding path has been prefixed with <code>Value</code>, since the path is now relative to the BindingProxy object.</p>
          </div>

<p>The binding now works correctly, and the column is properly shown or hidden based on the ShowPrice property.</p>
]]></content>
  </entry>
  <entry>
    <title>CheckTreeView</title>
    <url>/handycontrol/persianToolkit/checkTreeView/index.html</url>
    <content><![CDATA[<p>TreeView Control with Checkbox</p>
<p>example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:CheckTreeView</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding TreeRoot&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>now you need to create observablecollection</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ObservableCollection</span>&lt;<span class="title">CheckTreeView</span>&gt; TreeRoot</span> &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="keyword">new</span> ObservableCollection&lt;CheckTreeView&gt;();</span><br><span class="line"></span><br><span class="line">CheckTreeView item = <span class="keyword">new</span> CheckTreeView() &#123; Text = <span class="string">&quot;Item 1&quot;</span>, IsChecked = <span class="literal">false</span>, CTag = <span class="string">&quot;TAG&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">CheckTreeView subItem1 = <span class="keyword">new</span> CheckTreeView() &#123; Text = <span class="string">&quot;SubItem 1&quot;</span>, IsChecked = <span class="literal">false</span>, CTag = <span class="string">&quot;TAG&quot;</span> &#125;;</span><br><span class="line">CheckTreeView subItem2 = <span class="keyword">new</span> CheckTreeView() &#123; Text = <span class="string">&quot;SubItem 2&quot;</span>, IsChecked = <span class="literal">false</span>, CTag = <span class="string">&quot;TAG&quot;</span> &#125;;</span><br><span class="line">item.Add(subItem1);</span><br><span class="line">item.Add(subItem2);</span><br><span class="line">TreeRoot.Add(item);</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/CheckTreeView.png" alt="CheckTreeView"></p>
]]></content>
  </entry>
  <entry>
    <title>BindablePropertyBase</title>
    <url>/handycontrol/persianToolkit/bindablePropertyBase/index.html</url>
    <content><![CDATA[<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">BindablePropertyBase</span> : <span class="title">INotifyPropertyChanged</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>BindablePropertyBase Located in the <strong>HandyControl.Tools</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<p>To support OneWay or TwoWay binding to enable your binding target properties to automatically reflect the dynamic changes of the binding source (for example, to have the preview pane updated automatically when the user edits a form), your class needs to provide the proper property changed notifications. This class help you to implement INotifyPropertyChanged.</p>
<p>You must inherit this class first</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyViewModel</span> : <span class="title">BindablePropertyBase</span></span><br></pre></td></tr></table></figure>
<p>Then just call <code>RaisePropertyChanged()</code> in the property set method.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> _name;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span> =&gt; _name;</span><br><span class="line">    <span class="keyword">set</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_name != <span class="keyword">value</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            _name = <span class="keyword">value</span>;</span><br><span class="line">            RaisePropertyChanged();</span><br><span class="line">            <span class="comment">// OR</span></span><br><span class="line">            <span class="comment">// RaisePropertyChanged(_name);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>or If you need a simpler and faster method, you can use the <code>Set</code> method of this class</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> _name;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span> =&gt; _name;</span><br><span class="line">    <span class="keyword">set</span> &#123; Set(<span class="keyword">ref</span> _name, <span class="keyword">value</span>); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Dynamic Language</title>
    <url>/handycontrol/persianToolkit/dynamicLanguage/index.html</url>
    <content><![CDATA[<p>You can use this class to bring dynamic multilingual features to your applications</p>
<div class="note info">
            <p>Dynamic Language Located in the <strong>HandyControl.Tools</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h1><ul>
<li>Design Time Preview</li>
<li>Binding Support</li>
<li>Dynamic language change in runtime</li>
<li>Supports multiple resource files</li>
</ul>
<h1 id="Create-resource-files"><a href="#Create-resource-files" class="headerlink" title="Create resource files"></a>Create resource files</h1><p>First you need to create a folder, here our folder called <code>Assets</code> We are going to create language files in this folder.<br>add resource files into this folder you can Right-click on folder and from the Add New Item option Select <code>Resources file</code> Be careful when naming it.</p>
<div class="note info">
            <ul><li><p>The default language can be without a language code</p></li><li><p>No matter how many languages you have, you need to create a resource file for that language.</p></li><li><p>You must include a 2-digit or 5-digit language code in resource file name.</p></li></ul>
          </div>

<p>We want our program to have 2 languages, <code>English</code> and <code>Persian</code> So I create 2 resource files Pay attention to the naming method.</p>
<ul>
<li><code>Strings.resx</code></li>
<li><code>Strings.en.resx</code> or <code>Strings.en-US.resx</code></li>
</ul>
<div class="note info">
            <p>You can change <code>Strings</code> to anything else</p>
          </div>

<h1 id="Set-up-the-provider"><a href="#Set-up-the-provider" class="headerlink" title="Set up the provider"></a>Set up the provider</h1><p>We need to know where your resource files are, so you need to set up your provider</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span> <span class="attr">x:Class</span>=<span class="string">&quot;WpfAppTest.MainWindow&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span>        </span></span><br><span class="line"><span class="tag">        <span class="attr">hc:LocalizationManager.Provider</span>=<span class="string">&quot;WpfAppTest;Assets.Strings&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <ul><li>Note that you must first write the name of your project (In this case it is <code>WpfAppTest</code>).</li><li>Then you have to separate the project name from the file location with an <code>;</code>.</li><li>Finally, you must write the folder name and file name after <code>;</code> (In this case, our Resource name is <code>Strings</code>, which is located in the <code>Assets</code> folder). </li><li>we seperate folder and file with dot <code>.</code>.</li></ul>
          </div>

<div class="note warning">
            <p>if any UIElement that has a provider, we will use that provider.</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">hc:LocalizationManager.Provider</span>=<span class="string">&quot;WpfAppTest;Assets.Strings&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;hc:Localiation TextKey&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>If there is no provider, we find the parents of that control and check each provider in order, If a provider is found, we use it for localization.</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">hc:LocalizationManager.Provider</span>=<span class="string">&quot;WpfAppTest;Assets.AnotherStrings&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">hc:LocalizationManager.Provider</span>=<span class="string">&quot;WpfAppTest;Assets.Strings&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;hc:Localiation TextKey&#125;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Note that as soon as the provider is found, we will not check on the other parents, In the example above, first Provider will be used and second (Grid) will no longer be checked.</p><p>If provider is still not found, We use the control host provider (UserControl/Window…).<br> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UserControl</span> <span class="attr">hc:LocalizationManager.Provider</span>=<span class="string">&quot;WpfAppTest;Assets.AnotherStrings&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;hc:Localiation TextKey&#125;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure><br>If no provider is found again, we use the <code>Application.Current.MainWindow</code> Provider.</p>
          </div>

<h1 id="Design-Time-Preview"><a href="#Design-Time-Preview" class="headerlink" title="Design-Time Preview"></a>Design-Time Preview</h1><p>After specifying the provider and specifying the keys, you can see the preview of the keys in DesignTime.</p>
<p>if you need to change culture in DesignTime you can use <code>DesignCulture</code> AttachedProperty:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span> <span class="attr">x:Class</span>=<span class="string">&quot;WpfAppTest.MainWindow&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">hc:LocalizationManager.DesignCulture</span>=<span class="string">&quot;fa&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This gives you the possibility to check the correct localization directly in the WPF designer.</p>
<div class="note info">
            <ul><li>If you do not see the preview, try to Refresh VS Designer or Rebuild the project.</li><li>Design mode is not available in Binding mode.</li></ul>
          </div>

<h1 id="Xaml-Localization"><a href="#Xaml-Localization" class="headerlink" title="Xaml Localization"></a>Xaml Localization</h1><p>There are several ways to do this</p>
<h2 id="Key-Localization"><a href="#Key-Localization" class="headerlink" title="Key Localization"></a>Key Localization</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;hc:Localization TextKey&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- OR --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;&#123;hc:Localization Key=TextKey&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p><code>TextKey</code> is the key you created in the resource (resx) file</p>
          </div>

<h2 id="Binding-Localization"><a href="#Binding-Localization" class="headerlink" title="Binding Localization"></a>Binding Localization</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;hc:Localization KeyBinding=&#123;Binding SomeProperty&#125;&#125;&quot;</span>/&gt;</span> </span><br></pre></td></tr></table></figure>
<h3 id="Argument-Binding-Localization"><a href="#Argument-Binding-Localization" class="headerlink" title="Argument Binding Localization"></a>Argument Binding Localization</h3><p>First Create two Key in Resx file.</p>
<p>Name: <code>SomeKey</code><br>Value: <code>Hello &#123;0&#125;, &#123;1&#125;</code></p>
<p>Name: <code>SomeKey2</code><br>Value: <code>HandyControl</code></p>
<p>Then create a string Property</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> _SomeProperty = <span class="string">&quot;Bye!&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> SomeProperty</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span> &#123; <span class="keyword">return</span> _SomeProperty; &#125;</span><br><span class="line">    <span class="keyword">set</span> &#123; _SomeProperty = <span class="keyword">value</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">TextBlock</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock.Text</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:Localization</span> <span class="attr">Key</span>=<span class="string">&quot;SomeKey&quot;</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;hc:Localization SomeKey2&#125;&quot;</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">Path</span>=<span class="string">&quot;SomeProperty&quot;</span> /&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:Localization</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">TextBlock.Text</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span> </span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/9213496/119326232-ec451a00-bc96-11eb-82d6-dbca2cb5c69b.png" alt="Animation2"></p>
<p>OR</p>
<p>Create a Key in Resx file.</p>
<p>Name: <code>SomeKey</code><br>Value: <code>Hello &#123;0&#125;</code></p>
<p>Then create a string Property</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> _SomeProperty = <span class="string">&quot;HandyControl&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> SomeProperty</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span> &#123; <span class="keyword">return</span> _SomeProperty; &#125;</span><br><span class="line">    <span class="keyword">set</span> &#123; _SomeProperty = <span class="keyword">value</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock.Text</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">hc:Localization</span> <span class="attr">Key</span>=<span class="string">&quot;SomeKey&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">Path</span>=<span class="string">&quot;SomeProperty&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">hc:Localization</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TextBlock.Text</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/9213496/119326238-ee0edd80-bc96-11eb-8dba-54bc5b944518.png" alt="Argument3"></p>
<h2 id="Static-Arguments-Localization"><a href="#Static-Arguments-Localization" class="headerlink" title="Static Arguments Localization"></a>Static Arguments Localization</h2><p>First Create a <code>SomeKey</code> Key with <code>Alphabet &#123;0&#125;, &#123;1&#125;, &#123;2&#125;</code> value in Resx file.</p>
<p>Name: <code>SomeKey</code><br>Value: <code>Alphabet &#123;0&#125;, &#123;1&#125;, &#123;2&#125;</code></p>
<p>Then Create an array in Xaml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">x:Array</span> <span class="attr">x:Key</span>=<span class="string">&quot;SomeArray&quot;</span> <span class="attr">Type</span>=<span class="string">&quot;system:String&quot;</span> <span class="attr">xmlns:system</span>=<span class="string">&quot;clr-namespace:System;assembly=mscorlib&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system:String</span>&gt;</span>A<span class="tag">&lt;/<span class="name">system:String</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system:String</span>&gt;</span>B<span class="tag">&lt;/<span class="name">system:String</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system:String</span>&gt;</span>C<span class="tag">&lt;/<span class="name">system:String</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">x:Array</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Now we can use our array in our localization</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">TextBlock.Text</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">hc:Localization</span> <span class="attr">Key</span>=<span class="string">&quot;SomeKey&quot;</span> <span class="attr">Arguments</span>=<span class="string">&quot;&#123;StaticResource SomeArray&#125;&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">TextBlock.Text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span> </span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/9213496/119326213-e94a2980-bc96-11eb-8acb-3b5a1bcace74.png" alt="Argument"></p>
<h1 id="Localize-in-Code-Behind"><a href="#Localize-in-Code-Behind" class="headerlink" title="Localize in Code-Behind"></a>Localize in Code-Behind</h1><p>It is very easy to use in Code-Behind</p>
<h2 id="Localize"><a href="#Localize" class="headerlink" title="Localize"></a>Localize</h2><p>Return localized value as object.<br>for example When you have saved the FlowDirection value in the resource, you can use this method to get value as an object and cast it to FlowDirection.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> msg = LocalizationManager.Localize(<span class="string">&quot;Key&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> msg2 = LocalizationManager.Localize(<span class="string">&quot;Key&quot;</span>, <span class="keyword">new</span> CultureInfo(<span class="string">&quot;en&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">ILocalizationProvider provider = <span class="keyword">new</span> ResxLocalizationProvider(<span class="string">&quot;WpfAppTest.Assets.Strings&quot;</span>, Assembly.Load(<span class="string">&quot;WpfAppTest&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> msg3 = LocalizationManager.Localize(provider, <span class="string">&quot;Key&quot;</span>, <span class="keyword">new</span> CultureInfo(<span class="string">&quot;en&quot;</span>));</span><br></pre></td></tr></table></figure>
<h2 id="LocalizeString"><a href="#LocalizeString" class="headerlink" title="LocalizeString"></a>LocalizeString</h2><p>Return localized value as String.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> msg = LocalizationManager.LocalizeString(<span class="string">&quot;Key&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> msg2 = LocalizationManager.LocalizeString(<span class="string">&quot;Key&quot;</span>, <span class="keyword">new</span> CultureInfo(<span class="string">&quot;en&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">ILocalizationProvider provider = <span class="keyword">new</span> ResxLocalizationProvider(<span class="string">&quot;WpfAppTest.Assets.Strings&quot;</span>, Assembly.Load(<span class="string">&quot;WpfAppTest&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> msg3 = LocalizationManager.LocalizeString(provider, <span class="string">&quot;Key&quot;</span>, <span class="keyword">new</span> CultureInfo(<span class="string">&quot;en&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Change-language-in-Runtime"><a href="#Change-language-in-Runtime" class="headerlink" title="Change language in Runtime"></a>Change language in Runtime</h1><p>To change the language in runtime, just write the following code and specify the language code</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;fa&quot;</span>);</span><br></pre></td></tr></table></figure>
<h1 id="CultureChanged-Event"><a href="#CultureChanged-Event" class="headerlink" title="CultureChanged Event"></a>CultureChanged Event</h1><p>This event is called whenever the culture changes So you can get the details of the culture:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">LocalizationManager.Instance.CultureChanged += OnCultureChanged;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCultureChanged</span>(<span class="params"><span class="built_in">object</span> sender, FunctionEventArgs&lt;CultureInfo&gt; e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> info = e.Info.Name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Available-Culture"><a href="#Available-Culture" class="headerlink" title="Available Culture"></a>Available Culture</h1><p>You can use this method to get the list of languages of each resource, <code>GetAvailableCultures</code> return <code>Dictionary&lt;string, IEnumerable&lt;CultureInfo&gt;&gt;</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> LocalizationManager.GetAvailableCultures())</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">foreach</span> (<span class="keyword">var</span> lang <span class="keyword">in</span> item.Value)</span><br><span class="line">  &#123;</span><br><span class="line">    Debug.WriteLine(lang.Name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="AvailableResxProvider-and-AvailableResourceManager"><a href="#AvailableResxProvider-and-AvailableResourceManager" class="headerlink" title="AvailableResxProvider and AvailableResourceManager"></a>AvailableResxProvider and AvailableResourceManager</h1><p>if you need Providers or ResourceManagers, you can use these 2 dictionaries.</p>
<ul>
<li><code>AvailableResxProvider</code> Holds all your application providers.</li>
<li><code>AvailableResourceManager</code> Holds all your application ResourceManager.</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Extensions</title>
    <url>/handycontrol/persianToolkit/extensions/index.html</url>
    <content><![CDATA[<div class="note info">
            <p>Extension methods Located in the <strong>HandyControl.Tools.Extension</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools.Extension;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="Cryptography"><a href="#Cryptography" class="headerlink" title="Cryptography"></a>Cryptography</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>GenerateMD5</td>
<td></td>
</tr>
<tr>
<td>GenerateSHA256</td>
<td></td>
</tr>
<tr>
<td>EncryptStringAES</td>
<td></td>
</tr>
<tr>
<td>DecryptStringAES</td>
<td></td>
</tr>
<tr>
<td>EncryptStringBase64</td>
<td></td>
</tr>
<tr>
<td>DecryptStringBase64</td>
<td></td>
</tr>
<tr>
<td>EncryptStringRSA</td>
<td></td>
</tr>
<tr>
<td>DecryptStringRSA</td>
<td></td>
</tr>
</tbody></table>
<h2 id="GenerateMD5-GenerateSHA256"><a href="#GenerateMD5-GenerateSHA256" class="headerlink" title="GenerateMD5, GenerateSHA256"></a>GenerateMD5, GenerateSHA256</h2><p>Generate (SHA256 or MD5) Hash</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hashMD5 = <span class="string">&quot;Test string&quot;</span>.GenerateMD5();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> hashSHA256 = <span class="string">&quot;Test string&quot;</span>.GenerateSHA256();</span><br></pre></td></tr></table></figure>

<h2 id="EncryptStringAES-DecryptStringAES"><a href="#EncryptStringAES-DecryptStringAES" class="headerlink" title="EncryptStringAES, DecryptStringAES"></a>EncryptStringAES, DecryptStringAES</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> enc = <span class="string">&quot;Test string&quot;</span>.EncryptStringAES(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dec = <span class="string">&quot;encrypted text&quot;</span>.DecryptStringAES(<span class="string">&quot;password&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="EncryptStringBase64-DecryptStringBase64"><a href="#EncryptStringBase64-DecryptStringBase64" class="headerlink" title="EncryptStringBase64, DecryptStringBase64"></a>EncryptStringBase64, DecryptStringBase64</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> enc = <span class="string">&quot;Test string&quot;</span>.EncryptStringBase64();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dec = <span class="string">&quot;encrypted text&quot;</span>.DecryptStringBase64();</span><br></pre></td></tr></table></figure>

<h2 id="EncryptStringRSA-DecryptStringRSA"><a href="#EncryptStringRSA-DecryptStringRSA" class="headerlink" title="EncryptStringRSA, DecryptStringRSA"></a>EncryptStringRSA, DecryptStringRSA</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> enc = <span class="string">&quot;Test string&quot;</span>.EncryptStringRSA(publicKey);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dec = <span class="string">&quot;encrypted text&quot;</span>.DecryptStringRSA(privateKey);</span><br></pre></td></tr></table></figure>

<h1 id="String"><a href="#String" class="headerlink" title="String"></a>String</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>Format</td>
<td>inline format</td>
</tr>
<tr>
<td>Transform</td>
<td>LowerCase-UpperCase</td>
</tr>
<tr>
<td>Truncate</td>
<td></td>
</tr>
<tr>
<td>ConvertToPersianDigit</td>
<td></td>
</tr>
<tr>
<td>ConvertToPersianChar</td>
<td></td>
</tr>
<tr>
<td>ConvertToEnglishDigit</td>
<td></td>
</tr>
<tr>
<td>ChangeEncoding</td>
<td></td>
</tr>
<tr>
<td>GetBytes</td>
<td></td>
</tr>
<tr>
<td>IsKindOf</td>
<td></td>
</tr>
<tr>
<td>IsIranNationalCode</td>
<td></td>
</tr>
<tr>
<td>IsPersian</td>
<td></td>
</tr>
<tr>
<td>IsUrl</td>
<td></td>
</tr>
<tr>
<td>IsChinese</td>
<td></td>
</tr>
<tr>
<td>IsIp</td>
<td></td>
</tr>
<tr>
<td>IsEmail</td>
<td></td>
</tr>
<tr>
<td>ToFileInfo</td>
<td></td>
</tr>
<tr>
<td>ToDirectoryInfo</td>
<td></td>
</tr>
<tr>
<td>IsNullOrEmpty</td>
<td></td>
</tr>
<tr>
<td>ToColor</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Format"><a href="#Format" class="headerlink" title="Format"></a>Format</h2><p>Enable quick and more natural string.Format calls</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&quot;The co-ordinate is (&#123;0&#125;, &#123;1&#125;)&quot;</span>.Format(point.X, point.Y);</span><br></pre></td></tr></table></figure>
<h2 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h2><p>There is a Transform method that supersedes LetterCasing and ApplyCase.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Sentence casing&quot;</span>.Transform(To.LowerCase) =&gt; <span class="string">&quot;sentence casing&quot;</span></span><br><span class="line"><span class="string">&quot;Sentence casing&quot;</span>.Transform(To.SentenceCase) =&gt; <span class="string">&quot;Sentence casing&quot;</span></span><br><span class="line"><span class="string">&quot;Sentence casing&quot;</span>.Transform(To.TitleCase) =&gt; <span class="string">&quot;Sentence Casing&quot;</span></span><br><span class="line"><span class="string">&quot;Sentence casing&quot;</span>.Transform(To.UpperCase) =&gt; <span class="string">&quot;SENTENCE CASING&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Truncate"><a href="#Truncate" class="headerlink" title="Truncate"></a>Truncate</h2><p>You can truncate a string using the Truncate method:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">10</span>) =&gt; <span class="string">&quot;Long text…&quot;</span></span><br></pre></td></tr></table></figure>
<p>By default the ‘…’ character is used to truncate strings. The advantage of using the ‘…’ character instead of “…” is that the former only takes a single character and thus allows more text to be shown before truncation. If you want, you can also provide your own truncation string:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">10</span>, <span class="string">&quot;---&quot;</span>) =&gt; <span class="string">&quot;Long te---&quot;</span></span><br></pre></td></tr></table></figure>
<p>The default truncation strategy, Truncator.FixedLength, is to truncate the input string to a specific length, including the truncation string length. There are two more truncator strategies available: one for a fixed number of (alpha-numerical) characters and one for a fixed number of words. To use a specific truncator when truncating, the two Truncate methods shown in the previous examples all have an overload that allow you to specify the ITruncator instance to use for the truncation. Here are examples on how to use the three provided truncators:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">10</span>, Truncator.FixedLength) =&gt; <span class="string">&quot;Long text…&quot;</span></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">10</span>, <span class="string">&quot;---&quot;</span>, Truncator.FixedLength) =&gt; <span class="string">&quot;Long te---&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">6</span>, Truncator.FixedNumberOfCharacters) =&gt; <span class="string">&quot;Long t…&quot;</span></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">6</span>, <span class="string">&quot;---&quot;</span>, Truncator.FixedNumberOfCharacters) =&gt; <span class="string">&quot;Lon---&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">2</span>, Truncator.FixedNumberOfWords) =&gt; <span class="string">&quot;Long text…&quot;</span></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">2</span>, <span class="string">&quot;---&quot;</span>, Truncator.FixedNumberOfWords) =&gt; <span class="string">&quot;Long text---&quot;</span></span><br></pre></td></tr></table></figure>
<p>Note that you can also use create your own truncator by implementing the ITruncator interface.</p>
<p>There is also an option to choose whether to truncate the string from the beginning (TruncateFrom.Left) or the end (TruncateFrom.Right). Default is the right as shown in the examples above. The examples below show how to truncate from the beginning of the string:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">10</span>, Truncator.FixedLength, TruncateFrom.Left) =&gt; <span class="string">&quot;… truncate&quot;</span></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">10</span>, <span class="string">&quot;---&quot;</span>, Truncator.FixedLength, TruncateFrom.Left) =&gt; <span class="string">&quot;---runcate&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">10</span>, Truncator.FixedNumberOfCharacters, TruncateFrom.Left) =&gt; <span class="string">&quot;…o truncate&quot;</span></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">16</span>, <span class="string">&quot;---&quot;</span>, Truncator.FixedNumberOfCharacters, TruncateFrom.Left) =&gt; <span class="string">&quot;---ext to truncate&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">2</span>, Truncator.FixedNumberOfWords, TruncateFrom.Left) =&gt; <span class="string">&quot;…to truncate&quot;</span></span><br><span class="line"><span class="string">&quot;Long text to truncate&quot;</span>.Truncate(<span class="number">2</span>, <span class="string">&quot;---&quot;</span>, Truncator.FixedNumberOfWords, TruncateFrom.Left) =&gt; <span class="string">&quot;---to truncate&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Digits-and-Char"><a href="#Digits-and-Char" class="headerlink" title="Digits and Char"></a>Digits and Char</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;5&quot;</span>.ConvertToPersianDigit(); <span class="comment">// result: ۵</span></span><br><span class="line"><span class="string">&quot;y&quot;</span>.ConvertToPersianChar(); <span class="comment">// result: غ</span></span><br><span class="line"><span class="string">&quot;۵&quot;</span>.ConvertToEnglishDigit(); <span class="comment">// result 5</span></span><br></pre></td></tr></table></figure>
<h2 id="ChangeEncoding"><a href="#ChangeEncoding" class="headerlink" title="ChangeEncoding"></a>ChangeEncoding</h2><p>Change the Encoding of a string</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> test = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> text = test.ChangeEncoding(Encoding.ASCII, Encoding.UTF8);</span><br></pre></td></tr></table></figure>
<h2 id="GetBytes"><a href="#GetBytes" class="headerlink" title="GetBytes"></a>GetBytes</h2><p>Get bytes from string</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> test = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> text = test.GetBytes();</span><br></pre></td></tr></table></figure>
<h2 id="ToFileInfo"><a href="#ToFileInfo" class="headerlink" title="ToFileInfo"></a>ToFileInfo</h2><p>Get string file path as FileInfo</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fileInfo = <span class="string">@&quot;D:\Documents\image.jpg&quot;</span>.ToFileInfo();</span><br></pre></td></tr></table></figure>
<h2 id="ToDirectoryInfo"><a href="#ToDirectoryInfo" class="headerlink" title="ToDirectoryInfo"></a>ToDirectoryInfo</h2><p>Get string directory path as DirectoryInfo</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> directoryInfo = <span class="string">@&quot;D:\Documents&quot;</span>.ToDirectoryInfo();</span><br></pre></td></tr></table></figure>
<h2 id="IsNullOrEmpty"><a href="#IsNullOrEmpty" class="headerlink" title="IsNullOrEmpty"></a>IsNullOrEmpty</h2><p>Check if string is null or empty</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> isNUll = <span class="string">&quot;hello&quot;</span>.IsNullOrEmpty();</span><br></pre></td></tr></table></figure>
<h2 id="ToColor"><a href="#ToColor" class="headerlink" title="ToColor"></a>ToColor</h2><p>Creates a Color from a XAML color string.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> color = <span class="string">&quot;#3260a8&quot;</span>.ToColor();</span><br></pre></td></tr></table></figure>
<h1 id="DateTime"><a href="#DateTime" class="headerlink" title="DateTime"></a>DateTime</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>ToShamsiDate</td>
<td>DateTime</td>
<td>Convert GregorianDate to ShamsiDate</td>
</tr>
<tr>
<td>ToShortShamsiDate</td>
<td>DateTime</td>
<td>Convert GregorianDate to ShamsiDate (Short Format)</td>
</tr>
<tr>
<td>ToLongShamsiDate</td>
<td>DateTime</td>
<td>Convert GregorianDate to ShamsiDate (Long Format)</td>
</tr>
<tr>
<td>GetDiffrenceToNow</td>
<td>DateTime</td>
<td>Get Diffrence between DateTime and Current DateTime</td>
</tr>
<tr>
<td>ToGregorianDate</td>
<td>DateTime</td>
<td>Convert ShamsiDate to GregorianDate</td>
</tr>
<tr>
<td>ToGregorianDate</td>
<td>PersianDateTime</td>
<td>Convert PersianDateTime to GregorianDate</td>
</tr>
</tbody></table>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Console.WriteLine(DateTime.Now.ToShamsiDate());</span><br><span class="line"><span class="comment">//Result : 1398/11/03</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(DateTime.Now.ToShortShamsiDate());</span><br><span class="line"><span class="comment">//Result : 98/11/03</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(DateTime.Now.ToLongShamsiDate());</span><br><span class="line"><span class="comment">//Result : پنجشنبه 3 بهمن 1398</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(DateTime.Now.GetDiffrenceToNow());</span><br><span class="line"></span><br><span class="line">Console.WriteLine(DateTime.Now.ToGregorianDate());</span><br><span class="line"><span class="comment">// Result : 16/01/2021</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(PersianDateTime.Now.ToGregorianDate());</span><br><span class="line"><span class="comment">// Result : 16/01/2021</span></span><br></pre></td></tr></table></figure>
<h1 id="EnumerableExtension"><a href="#EnumerableExtension" class="headerlink" title="EnumerableExtension"></a>EnumerableExtension</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>GetEnumeratorWithIndex</td>
<td>IEnumerable</td>
<td></td>
</tr>
<tr>
<td>ShapeView</td>
<td>IEnumerable</td>
<td></td>
</tr>
<tr>
<td>ForEach</td>
<td>IEnumerable</td>
<td></td>
</tr>
<tr>
<td>ReverseForEach</td>
<td>IEnumerable</td>
<td></td>
</tr>
<tr>
<td>Do</td>
<td>IEnumerable</td>
<td></td>
</tr>
<tr>
<td>DoWithIndex</td>
<td>IEnumerable</td>
<td></td>
</tr>
</tbody></table>
<h2 id="GetEnumeratorWithIndex"><a href="#GetEnumeratorWithIndex" class="headerlink" title="GetEnumeratorWithIndex"></a>GetEnumeratorWithIndex</h2><p>This Extension Help you to access item index in foreach loop</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&quot;ABCDEFG&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> s.GetEnumeratorWithIndex())</span><br><span class="line">&#123;</span><br><span class="line">    System.Console.WriteLine(<span class="string">&quot;Character: &#123;0&#125;, Position: &#123;1&#125;&quot;</span>, item.Value, item.Index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Do"><a href="#Do" class="headerlink" title="Do"></a>Do</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">data.Do(item =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="DoWithIndex"><a href="#DoWithIndex" class="headerlink" title="DoWithIndex"></a>DoWithIndex</h2><p>This Extension Help you to access item index</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">data.DoWithIndex((item, index) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="ShapeView"><a href="#ShapeView" class="headerlink" title="ShapeView"></a>ShapeView</h2><p>This Extension Help you to Easily implement search, sort, and group operations</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">IEnumerable&lt;Person&gt; datalist;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Using query comprehension</span></span><br><span class="line"><span class="keyword">var</span> query =</span><br><span class="line">    <span class="keyword">from</span> p <span class="keyword">in</span> datalist.ShapeView()</span><br><span class="line">    <span class="keyword">where</span> p.Age &gt;= <span class="number">18</span></span><br><span class="line">    <span class="keyword">orderby</span> p.LastName, p.FirstName</span><br><span class="line">    <span class="keyword">group</span> p <span class="keyword">by</span> p.Country;</span><br><span class="line"></span><br><span class="line">query.Apply();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Using extension methods</span></span><br><span class="line">datalist.ShapeView()</span><br><span class="line">      .Where(p =&gt; p.Age &gt;= <span class="number">18</span>)</span><br><span class="line">      .OrderBy(p =&gt; p.LastName)</span><br><span class="line">      .ThenBy(p =&gt; p.FirstName)</span><br><span class="line">      .GroupBy(p =&gt; p.Gender)</span><br><span class="line">      .Apply();</span><br><span class="line"></span><br><span class="line"><span class="comment">//clear</span></span><br><span class="line">datalist.ShapeView().ClearAll().Apply();</span><br></pre></td></tr></table></figure>
<h2 id="ForEach"><a href="#ForEach" class="headerlink" title="ForEach"></a>ForEach</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">actions.ForEach(action =&gt; action.DoSomething());</span><br></pre></td></tr></table></figure>
<h2 id="ReverseForEach"><a href="#ReverseForEach" class="headerlink" title="ReverseForEach"></a>ReverseForEach</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">actions.ReverseForEach(action =&gt; action.DoSomething());</span><br></pre></td></tr></table></figure>
<h1 id="CollectionExtension"><a href="#CollectionExtension" class="headerlink" title="CollectionExtension"></a>CollectionExtension</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>AddRange</td>
<td>ICollection</td>
<td></td>
</tr>
<tr>
<td>AddOnUI</td>
<td>ICollection</td>
<td></td>
</tr>
<tr>
<td>Shape</td>
<td>ICollectionView</td>
<td></td>
</tr>
<tr>
<td>Clone</td>
<td>ObservableCollection</td>
<td></td>
</tr>
<tr>
<td>AddIfNotExists</td>
<td>ObservableCollection</td>
<td></td>
</tr>
<tr>
<td>UpdateValue</td>
<td>ObservableCollection</td>
<td></td>
</tr>
<tr>
<td>DeleteIfExists</td>
<td>ObservableCollection</td>
<td></td>
</tr>
<tr>
<td>AreValuesNull</td>
<td>ObservableCollection</td>
<td></td>
</tr>
</tbody></table>
<h1 id="AddRange"><a href="#AddRange" class="headerlink" title="AddRange"></a>AddRange</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">DataList.AddRange(list);</span><br></pre></td></tr></table></figure>
<h2 id="AddOnUI"><a href="#AddOnUI" class="headerlink" title="AddOnUI"></a>AddOnUI</h2><p>This Extension Method Help you to Add Items into ObservableCollection from Another Thread</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">DataList.AddOnUI(<span class="keyword">new</span> PackagesModel &#123; Name = name, IsInstalled = isInstalled, Version = version, Id = id &#125;);</span><br></pre></td></tr></table></figure>
<h2 id="Shape"><a href="#Shape" class="headerlink" title="Shape"></a>Shape</h2><p>This Extension Help you to Easily implement search, sort, and group operations</p>
<p>same as <strong>ShapeView</strong></p>
<h2 id="Clone"><a href="#Clone" class="headerlink" title="Clone"></a>Clone</h2><p>Clones the observable collection.</p>
<h2 id="AddIfNotExists"><a href="#AddIfNotExists" class="headerlink" title="AddIfNotExists"></a>AddIfNotExists</h2><p>Adds a value if it doesn’t exist yet.</p>
<h2 id="UpdateValue"><a href="#UpdateValue" class="headerlink" title="UpdateValue"></a>UpdateValue</h2><p>Updates a value.</p>
<h2 id="DeleteIfExists"><a href="#DeleteIfExists" class="headerlink" title="DeleteIfExists"></a>DeleteIfExists</h2><p>Deletes a value if it exists.</p>
<h2 id="AreValuesNull"><a href="#AreValuesNull" class="headerlink" title="AreValuesNull"></a>AreValuesNull</h2><p>Checks whether all values are null or not.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> observableCollection = <span class="keyword">new</span> ObservableCollection&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"></span><br><span class="line">observableCollection.AddIfNotExists(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"></span><br><span class="line">observableCollection.DeleteIfExists(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"></span><br><span class="line">observableCollection.UpdateValue(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line"></span><br><span class="line">Debug.WriteLine(observableCollection.AreValuesNull());</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> observableCollection1 = <span class="keyword">new</span> ObservableCollection&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"><span class="keyword">var</span> observableCollection2 = observableCollection1.Clone();</span><br></pre></td></tr></table></figure>
<h1 id="ListExtension"><a href="#ListExtension" class="headerlink" title="ListExtension"></a>ListExtension</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>Clone</td>
<td>List</td>
<td></td>
</tr>
<tr>
<td>AddIfNotExists</td>
<td>List</td>
<td></td>
</tr>
<tr>
<td>UpdateValue</td>
<td>List</td>
<td></td>
</tr>
<tr>
<td>DeleteIfExists</td>
<td>List</td>
<td></td>
</tr>
<tr>
<td>AreValuesNull</td>
<td>List</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Clone-1"><a href="#Clone-1" class="headerlink" title="Clone"></a>Clone</h2><p>Clones the list.</p>
<h2 id="AddIfNotExists-1"><a href="#AddIfNotExists-1" class="headerlink" title="AddIfNotExists"></a>AddIfNotExists</h2><p>Adds a value if it doesn’t exist yet.</p>
<h2 id="UpdateValue-1"><a href="#UpdateValue-1" class="headerlink" title="UpdateValue"></a>UpdateValue</h2><p>Updates a value.</p>
<h2 id="DeleteIfExists-1"><a href="#DeleteIfExists-1" class="headerlink" title="DeleteIfExists"></a>DeleteIfExists</h2><p>Deletes a value if it exists.</p>
<h2 id="AreValuesNull-1"><a href="#AreValuesNull-1" class="headerlink" title="AreValuesNull"></a>AreValuesNull</h2><p>Checks whether all values are null or not.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> list = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">list.AddIfNotExists(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"></span><br><span class="line">list.DeleteIfExists(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"></span><br><span class="line">list.UpdateValue(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line"></span><br><span class="line">Debug.WriteLine(list.AreValuesNull());</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> list1 = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"><span class="keyword">var</span> list2 = list1.Clone();</span><br></pre></td></tr></table></figure>
<h1 id="DictionaryExtension"><a href="#DictionaryExtension" class="headerlink" title="DictionaryExtension"></a>DictionaryExtension</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>Clone</td>
<td>Dictionary</td>
<td></td>
</tr>
<tr>
<td>AddIfNotExists</td>
<td>Dictionary</td>
<td></td>
</tr>
<tr>
<td>Update</td>
<td>Dictionary</td>
<td></td>
</tr>
<tr>
<td>DeleteIfExistsKey</td>
<td>Dictionary</td>
<td></td>
</tr>
<tr>
<td>DeleteIfExistsValue</td>
<td>Dictionary</td>
<td></td>
</tr>
<tr>
<td>AreValuesNull</td>
<td>Dictionary</td>
<td></td>
</tr>
<tr>
<td>AreKeysNull</td>
<td>Dictionary</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Clone-2"><a href="#Clone-2" class="headerlink" title="Clone"></a>Clone</h2><p>Clones the dictionary.</p>
<h2 id="AddIfNotExists-2"><a href="#AddIfNotExists-2" class="headerlink" title="AddIfNotExists"></a>AddIfNotExists</h2><p>Adds a value if it doesn’t exist yet.</p>
<h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><p>Updates a value.</p>
<h2 id="DeleteIfExistsKey"><a href="#DeleteIfExistsKey" class="headerlink" title="DeleteIfExistsKey"></a>DeleteIfExistsKey</h2><p>Deletes the key if it exists.</p>
<h2 id="DeleteIfExistsValue"><a href="#DeleteIfExistsValue" class="headerlink" title="DeleteIfExistsValue"></a>DeleteIfExistsValue</h2><p>Deletes a value if it exists.</p>
<h2 id="AreValuesNull-2"><a href="#AreValuesNull-2" class="headerlink" title="AreValuesNull"></a>AreValuesNull</h2><p>Checks whether all values are null or not.</p>
<h2 id="AreKeysNull"><a href="#AreKeysNull" class="headerlink" title="AreKeysNull"></a>AreKeysNull</h2><p>Checks whether all keys are null or not.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dictionary = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();</span><br><span class="line"></span><br><span class="line">dictionary.AddIfNotExists(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;abc&quot;</span>);</span><br><span class="line"></span><br><span class="line">dictionary.Update(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;defg&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pair = dictionary.First(x =&gt; x.Key.Equals(<span class="string">&quot;b&quot;</span>));</span><br><span class="line">dictionary.Update(pair);</span><br><span class="line"></span><br><span class="line">dictionary.DeleteIfExistsKey(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"></span><br><span class="line">dictionary.DeleteIfExistsValue(<span class="string">&quot;defg&quot;</span>);</span><br><span class="line"></span><br><span class="line">Debug.WriteLine(dictionary.AreKeysNull());</span><br><span class="line">Debug.WriteLine(dictionary.AreValuesNull());</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dict1 = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();</span><br><span class="line"><span class="keyword">var</span> dict2 = dict1.Clone();</span><br></pre></td></tr></table></figure>
<h1 id="MergedDictionary"><a href="#MergedDictionary" class="headerlink" title="MergedDictionary"></a>MergedDictionary</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>AddIfNotNull</td>
<td></td>
</tr>
<tr>
<td>RemoveIfNotNull</td>
<td></td>
</tr>
<tr>
<td>InsertOrReplace</td>
<td></td>
</tr>
<tr>
<td>RemoveAll</td>
<td></td>
</tr>
<tr>
<td>InsertIfNotExists</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ResourceDictioanry.RemoveAll();</span><br></pre></td></tr></table></figure>
<h1 id="ColorExtension"><a href="#ColorExtension" class="headerlink" title="ColorExtension"></a>ColorExtension</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>ToInt32</td>
<td>Color</td>
<td></td>
</tr>
<tr>
<td>ToInt32Reverse</td>
<td>Color</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Helpers</title>
    <url>/handycontrol/persianToolkit/helpers/index.html</url>
    <content><![CDATA[<div class="note info">
            <p>Helpers Located in the <strong>HandyControl.Tools</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="GlobalDataHelper"><a href="#GlobalDataHelper" class="headerlink" title="GlobalDataHelper"></a>GlobalDataHelper</h1><div class="note warning">
            <p><strong>GlobalDataHelper</strong> only Available in .NetCore &gt;= 3.0, so you cant use it in .Net Framework</p>
          </div>
<p>with GlobalDataHelper you can save and read your application settings object to a json file</p>
<p>Example:</p>
<p>first of all you need to create a class and inherit from the <code>GlobalDataHelper</code>, Then create your properties.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AppConfig</span> : <span class="title">GlobalDataHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Password &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">&quot;pass&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsHash &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> FileName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> JsonSerializerOptions JsonSerializerOptions &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">int</span> FileVersion &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Note that there are 3 overriding properties:<br>By default, the Json file name is <code>AppConfig.json</code> and will be placed next to the executable file, So if you want to change the name and location of the file, use the FileName property:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> FileName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">&quot;setting.json&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>If you have made major changes to your settings file and you get an error when running the program, you can use the File versioning, if you change the version number, the previous settings file will be deleted, and the new settings will be replaced.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">int</span> FileVersion &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Read-Write-Settings"><a href="#Read-Write-Settings" class="headerlink" title="Read/Write Settings"></a>Read/Write Settings</h2><p>for reading values</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> settings = GlobalDataHelper.Load&lt;AppConfig&gt;();</span><br><span class="line">MessageBox.Show(settings.Name);</span><br></pre></td></tr></table></figure>
<p>if you prefer async:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> settings = <span class="keyword">await</span> GlobalDataHelper.LoadAsync&lt;AppConfig&gt;();</span><br><span class="line">MessageBox.Show(settings.Name);</span><br></pre></td></tr></table></figure>
<p>for writing values</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> settings = GlobalDataHelper.Load&lt;AppConfig&gt;();</span><br><span class="line">settings.IsHash = <span class="literal">false</span>;</span><br><span class="line">settings.Name = <span class="string">&quot;Mahdi&quot;</span>;</span><br><span class="line">settings.Save();</span><br></pre></td></tr></table></figure>
<p>if you prefer async:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> settings = <span class="keyword">await</span> GlobalDataHelper.LoadAsync&lt;AppConfig&gt;();</span><br><span class="line">settings.IsHash = <span class="literal">false</span>;</span><br><span class="line">settings.Name = <span class="string">&quot;Mahdi&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> settings.SaveAsync();</span><br></pre></td></tr></table></figure>
<h1 id="CryptographyHelper"><a href="#CryptographyHelper" class="headerlink" title="CryptographyHelper"></a>CryptographyHelper</h1><p>some method for generate hash and encrypt files</p>
<h2 id="Generate-Hash"><a href="#Generate-Hash" class="headerlink" title="Generate Hash"></a>Generate Hash</h2><h3 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> text = CryptographyHelper.GenerateMD5(<span class="string">&quot;mahdi&quot;</span>);</span><br><span class="line"><span class="comment">// result = F9C24B8F961D48841A9838CCA5274D8D</span></span><br></pre></td></tr></table></figure>
<h3 id="VerifyMD5"><a href="#VerifyMD5" class="headerlink" title="VerifyMD5"></a>VerifyMD5</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> verify = CryptographyHelper.VerifyMD5(<span class="string">&quot;F9C24B8F961D48841A9838CCA5274D8D&quot;</span>, <span class="string">&quot;mahdi&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="SHA256"><a href="#SHA256" class="headerlink" title="SHA256"></a>SHA256</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> text = CryptographyHelper.GenerateSHA256(<span class="string">&quot;mahdi&quot;</span>);</span><br><span class="line"><span class="comment">// result = 2e0af263c88c69ecc23a51a76b7a2442ed6a9dff080f275a27ec486d1a0e0148</span></span><br></pre></td></tr></table></figure>
<h3 id="SHA256-for-File"><a href="#SHA256-for-File" class="headerlink" title="SHA256 for File"></a>SHA256 for File</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> text = CryptographyHelper.GenerateSHA256FromFile(<span class="string">@&quot;D:\test.zip&quot;</span>);</span><br><span class="line"><span class="comment">// result = 40aff63c88c69ecc23a51a76b7a2442ed6a9dff080f275a27ec486d1a0e0135</span></span><br></pre></td></tr></table></figure>
<h3 id="VerifySHA256"><a href="#VerifySHA256" class="headerlink" title="VerifySHA256"></a>VerifySHA256</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> verify = CryptographyHelper.VerifySHA256(<span class="string">&quot;2e0af263c88c69ecc23a51a76b7a2442ed6a9dff080f275a27ec486d1a0e0148&quot;</span>, <span class="string">&quot;mahdi&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Encrypt-amp-Decrypt-Strings"><a href="#Encrypt-amp-Decrypt-Strings" class="headerlink" title="Encrypt &amp; Decrypt Strings"></a>Encrypt &amp; Decrypt Strings</h2><h3 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> enc = CryptographyHelper.EncryptStringAES(<span class="string">&quot;Mahdi&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> dec = CryptographyHelper.DecryptStringAES(<span class="string">&quot;G7Jlxs4gb98msDUOIdN1iA==&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> enc = CryptographyHelper.EncryptStringBase64(<span class="string">&quot;Mahdi&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> dec = CryptographyHelper.DecryptStringBase64(<span class="string">&quot;TWFoZGk=&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p>first Create your public and private key </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> keys = CryptographyHelper.GenerateRSAKey();</span><br></pre></td></tr></table></figure>
<p>Then encrypt and decrypt strings</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> enc = CryptographyHelper.EncryptStringRSA(<span class="string">&quot;Mahdi&quot;</span>, keys.PublicKey);</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> dec = CryptographyHelper.DecryptStringRSA(enc, keys.PrivateKey);</span><br></pre></td></tr></table></figure>
<h2 id="Encrypt-amp-Decrypt-Files"><a href="#Encrypt-amp-Decrypt-Files" class="headerlink" title="Encrypt &amp; Decrypt Files"></a>Encrypt &amp; Decrypt Files</h2><h3 id="AES-1"><a href="#AES-1" class="headerlink" title="AES"></a>AES</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">CryptographyHelper.EncryptFileAESAsync(sourcefile, destination, <span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">CryptographyHelper.DecryptFileAESAsync(sourcefile, destination, <span class="string">&quot;password&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA"></a>RSA</h3><p>first Create your public and private key </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> keys = CryptographyHelper.GenerateRSAKey();</span><br></pre></td></tr></table></figure>
<p>Then encrypt and decrypt files</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">CryptographyHelper.EncryptFileRSAAsync(inputFilePath, outputFilePath, keys.PublicKey);</span><br><span class="line"></span><br><span class="line">CryptographyHelper.DecryptFileRSAAsync(inputFilePath, outputFilePath, keys.PrivateKey);</span><br></pre></td></tr></table></figure>
<h2 id="Read-and-Write-RSA-Key"><a href="#Read-and-Write-RSA-Key" class="headerlink" title="Read and Write RSA Key"></a>Read and Write RSA Key</h2><p>We have methods for reading and writing public and private keys from/to files</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">// export public key to file</span></span><br><span class="line">ExportPublicKeyToFile(<span class="string">&quot;publicKey.public&quot;</span>, publicKey);</span><br><span class="line"></span><br><span class="line"><span class="comment">// read public key from file</span></span><br><span class="line"><span class="keyword">var</span> pubKey = ReadPublicKey(<span class="string">&quot;publicKey.public&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// export private key to file</span></span><br><span class="line">ExportPrivateKeyToFile(<span class="string">&quot;privateKey.enc&quot;</span>, privateKey, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">// read private key from file</span></span><br><span class="line"><span class="keyword">var</span> privKey = ReadPrivateKey(<span class="string">&quot;privateKey.enc&quot;</span>, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">// export public and private key to file</span></span><br><span class="line">ExportPublicAndPrivateKeyToFile(<span class="string">&quot;publicKey.public&quot;</span>, <span class="string">&quot;privateKey.enc&quot;</span>, RSAKey, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">// read public and private key from file</span></span><br><span class="line"><span class="keyword">var</span> rsaKey = ReadPublicAndPrivateKey(<span class="string">&quot;publicKey.public&quot;</span>, <span class="string">&quot;privateKey.enc&quot;</span>, password);</span><br></pre></td></tr></table></figure>
<h1 id="INIHelper"><a href="#INIHelper" class="headerlink" title="INIHelper"></a>INIHelper</h1><p>InIHelper class is for working with ini file in simple way.</p>
<h2 id="Add-Value"><a href="#Add-Value" class="headerlink" title="Add Value"></a>Add Value</h2><div class="note info">
            <p>you can use default <strong>section</strong> and <strong>path</strong></p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">InIHelper.AddValue(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;test1&quot;</span>);</span><br><span class="line">InIHelper.AddValue(<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">InIHelper.AddValue(<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;test3&quot;</span>, <span class="string">&quot;mySection&quot;</span>);</span><br><span class="line">InIHelper.AddValue(<span class="string">&quot;file4&quot;</span>, <span class="string">&quot;test4&quot;</span>, <span class="string">&quot;mySection&quot;</span>);</span><br><span class="line">InIHelper.AddValue(<span class="string">&quot;file5&quot;</span>, <span class="string">&quot;test5&quot;</span>, <span class="string">&quot;mySection&quot;</span>);</span><br><span class="line">InIHelper.AddValue(<span class="string">&quot;file6&quot;</span>, <span class="string">&quot;test6&quot;</span>, <span class="string">&quot;mySection2&quot;</span>, <span class="string">@&quot;D:\config.ini&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Read-Value"><a href="#Read-Value" class="headerlink" title="Read Value"></a>Read Value</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">MessageBox.Info(InIHelper.ReadValue(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">MessageBox.Info(InIHelper.ReadValue(<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;mySection&quot;</span>));</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">MessageBox.Info(InIHelper.ReadValue(<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;mySection&quot;</span>, <span class="string">@&quot;D:\config.ini&quot;</span>));</span><br></pre></td></tr></table></figure>
<h2 id="Delete-Key"><a href="#Delete-Key" class="headerlink" title="Delete Key"></a>Delete Key</h2><div class="note info">
            <p>you can delete a <strong>key</strong> or <strong>section</strong></p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">InIHelper.DeleteKey(<span class="string">&quot;key4&quot;</span>, <span class="string">&quot;mySection&quot;</span>);</span><br><span class="line">InIHelper.DeleteSection(<span class="string">&quot;mySection&quot;</span>);</span><br><span class="line">InIHelper.DeleteKey(<span class="string">&quot;key4&quot;</span>, <span class="string">&quot;mySection&quot;</span>, <span class="string">@&quot;D:\config.ini&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Exist-Key"><a href="#Exist-Key" class="headerlink" title="Exist Key"></a>Exist Key</h2><div class="note info">
            <p>you can check if a key exist or not</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">MessageBox.Info(InIHelper.IsKeyExists(<span class="string">&quot;key4&quot;</span>, <span class="string">&quot;mySection&quot;</span>));</span><br></pre></td></tr></table></figure>
<h1 id="RegistryHelper"><a href="#RegistryHelper" class="headerlink" title="RegistryHelper"></a>RegistryHelper</h1><p>RegistryHelper class is for working with windows Registry</p>
<h2 id="Add-Key"><a href="#Add-Key" class="headerlink" title="Add Key"></a>Add Key</h2><div class="note info">
            <p>value can be everything (bool, int, string,…), default RegistryKey is CurrentUser for other type you need Admin Access</p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">RegistryHelper.AddOrUpdateKey(<span class="string">&quot;myKey&quot;</span>, <span class="string">&quot;myFolder&quot;</span>, <span class="keyword">value</span>);</span><br><span class="line"><span class="comment">//OR</span></span><br><span class="line">RegistryHelper.AddOrUpdateKey(<span class="string">&quot;myKey2&quot;</span>, <span class="string">&quot;myFolder&quot;</span>, <span class="string">&quot;test&quot;</span>, Registry.LocalMachine);</span><br></pre></td></tr></table></figure>
<h2 id="Get-Key"><a href="#Get-Key" class="headerlink" title="Get Key"></a>Get Key</h2><div class="note info">
            <p>you can cast value to any type you want</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">RegistryHelper.GetValue&lt;<span class="built_in">bool</span>&gt;(<span class="string">&quot;myKey&quot;</span>, <span class="string">&quot;myFolder&quot;</span>);</span><br><span class="line">RegistryHelper.GetValue&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;myKey&quot;</span>, <span class="string">&quot;myFolder&quot;</span>, Registry.LocalMachine);</span><br></pre></td></tr></table></figure>
<h2 id="Delete-Key-1"><a href="#Delete-Key-1" class="headerlink" title="Delete Key"></a>Delete Key</h2><div class="note info">
            <p>default value for IsDeleteSubKey is False</p>
          </div>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> result = RegistryHelper.DeleteKey(<span class="string">&quot;myKey&quot;</span>, <span class="string">&quot;myFolder&quot;</span>);</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line"><span class="built_in">bool</span> result = RegistryHelper.DeleteKey(<span class="string">&quot;myKey&quot;</span>, <span class="string">&quot;myFolder&quot;</span>, True);</span><br></pre></td></tr></table></figure>
<h2 id="Delete-SubKey-Tree"><a href="#Delete-SubKey-Tree" class="headerlink" title="Delete SubKey Tree"></a>Delete SubKey Tree</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> result = RegistryHelper.DeleteSubKeyTree(<span class="string">&quot;subkey&quot;</span>, <span class="string">&quot;myFolder&quot;</span>);</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line"><span class="built_in">bool</span> result = RegistryHelper.DeleteSubKeyTree(<span class="string">&quot;subkey&quot;</span>, <span class="string">&quot;myFolder&quot;</span>, Registry.LocalMachine);</span><br></pre></td></tr></table></figure>
<h1 id="UpdateHelper"><a href="#UpdateHelper" class="headerlink" title="UpdateHelper"></a>UpdateHelper</h1><p>you can use UpdateHelper for checking application updates from github release page</p>
<h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>CheckUpdateAsync</td>
<td>Use the GitHab Release Page to check if the update is available</td>
</tr>
<tr>
<td>CheckUpdate</td>
<td>Use the GitHab Release Page to check if the update is available</td>
</tr>
</tbody></table>
<p>first you must create a new release tag in <a href="https://github.com/ghost1372/HandyControls/releases/new">github repository</a>:</p>
<div class="note info">
            <p>tag version must be in this format : 1.0.0.0</p>
          </div>

<p>now we can check for update with github username and github repository</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ver = <span class="keyword">await</span> UpdateHelper.CheckUpdateAsync(<span class="string">&quot;ghost1372&quot;</span>, <span class="string">&quot;HandyControls&quot;</span>);</span><br><span class="line"><span class="comment">// var ver = UpdateHelper.CheckUpdate(&quot;ghost1372&quot;, &quot;HandyControls&quot;);</span></span><br><span class="line"><span class="keyword">if</span>(ver.IsExistNewVersion)</span><br><span class="line">&#123;</span><br><span class="line">    Growl.InfoGlobal(<span class="string">&quot;New Version Found!&quot;</span>);</span><br><span class="line">    lblUrl2.Text = ver.ReleaseUrl;</span><br><span class="line">    lbl1.Text = ver.CreatedAt.ToString();</span><br><span class="line">    lbl2.Text = ver.PublishedAt.ToString();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Asset is List so maybe there is more than one file you can use forech or increase index</span></span><br><span class="line">    lbl3.Text = ver.Assets[<span class="number">0</span>].Url;</span><br><span class="line">    lbl4.Text = ver.IsPreRelease.ToString();</span><br><span class="line">    lbl5.Text = ver.Assets[<span class="number">0</span>].Size.ToString();</span><br><span class="line">    lbl6.Text = ver.Version;</span><br><span class="line">    txtChangelog2.Text = ver.Changelog;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    Growl.ErrorGlobal(<span class="string">&quot;you are using latest version&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="ApplicationHelper"><a href="#ApplicationHelper" class="headerlink" title="ApplicationHelper"></a>ApplicationHelper</h1><h2 id="IsSingleInstance"><a href="#IsSingleInstance" class="headerlink" title="IsSingleInstance"></a>IsSingleInstance</h2><p>you can use IsSingleInstance for Run only one Instance of the program at a time.<br>This method returns a true or false value If the value is true, it means that a Instance of the program is running and automatically closes the program and Brings Window To Front</p>
<p>Example:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!ApplicationHelper.IsSingleInstance())</span><br><span class="line">&#123;</span><br><span class="line">    MessageBox(<span class="string">&quot;Another Instance Already Running...&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>If for any reason the method does not work properly, specify the name of the program manually</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.IsSingleInstance(<span class="string">&quot;myApplication&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="IsAdministrator"><a href="#IsAdministrator" class="headerlink" title="IsAdministrator"></a>IsAdministrator</h2><p>Check if Running Application runs with admin access or not</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(ApplicationHelper.IsAdministrator())</span><br><span class="line">&#123;</span><br><span class="line">    MessageBox(<span class="string">&quot;Your application is running in admin mode&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="BringWindowToFront"><a href="#BringWindowToFront" class="headerlink" title="BringWindowToFront"></a>BringWindowToFront</h2><p>You can use this method to find and focus MainWindow that is running</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.BringWindowToFront();</span><br></pre></td></tr></table></figure>
<h2 id="StartProfileOptimization"><a href="#StartProfileOptimization" class="headerlink" title="StartProfileOptimization"></a>StartProfileOptimization</h2><p>Faster application execution at startup by caching</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.StartProfileOptimization();</span><br><span class="line"></span><br><span class="line"><span class="comment">// OR Change Default Cache Path</span></span><br><span class="line"><span class="comment">// var CachePath = $&quot;&#123;AppDomain.CurrentDomain.BaseDirectory&#125;AppCache&quot;</span></span><br><span class="line"><span class="comment">// ApplicationHelper.StartProfileOptimization(CachePath);</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p><strong>StartProfileOptimization</strong> is not Available in <strong>.Net 4.0</strong> </p>
          </div>

<h2 id="IsConnectedToInternet"><a href="#IsConnectedToInternet" class="headerlink" title="IsConnectedToInternet"></a>IsConnectedToInternet</h2><p>Check if the internet is connected or not</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> IsConnected = ApplicationHelper.IsConnectedToInternet();</span><br></pre></td></tr></table></figure>
<h2 id="GetAbsoluteUri"><a href="#GetAbsoluteUri" class="headerlink" title="GetAbsoluteUri"></a>GetAbsoluteUri</h2><p>Get Absolute Uri path</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> uri = ApplicationHelper.GetAbsoluteUri(<span class="string">&quot;myApp&quot;</span>, <span class="string">@&quot;Resource/Theme.xaml&quot;</span>);</span><br><span class="line"><span class="comment">// result =&gt; pack://application:,,,/myApp;component/Resource/Theme.xaml</span></span><br></pre></td></tr></table></figure>
<h2 id="RegisterContextMenuToDirectory"><a href="#RegisterContextMenuToDirectory" class="headerlink" title="RegisterContextMenuToDirectory"></a>RegisterContextMenuToDirectory</h2><p>Register Context Menu in Windows Directory </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> command = <span class="string">$&quot;\&quot;<span class="subst">&#123;Process.GetCurrentProcess().MainModule.FileName&#125;</span>\&quot; \&quot;%1\&quot;&quot;</span>;</span><br><span class="line">ApplicationHelper.RegisterContextMenuToDirectory(<span class="string">&quot;MyApp&quot;</span>, command);</span><br></pre></td></tr></table></figure>
<p>for UnRegister Context Menu from Windows Directory</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> result = ApplicationHelper.UnRegisterContextMenuFromDirectory(<span class="string">&quot;MyApp&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="RegisterContextMenuToFile"><a href="#RegisterContextMenuToFile" class="headerlink" title="RegisterContextMenuToFile"></a>RegisterContextMenuToFile</h2><p>Register Context Menu in Windows File </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> command = <span class="string">$&quot;\&quot;<span class="subst">&#123;Process.GetCurrentProcess().MainModule.FileName&#125;</span>\&quot; \&quot;%1\&quot;&quot;</span>;</span><br><span class="line">ApplicationHelper.RegisterContextMenuToFile(<span class="string">&quot;MyApp&quot;</span>, command);</span><br></pre></td></tr></table></figure>
<p>for UnRegister Context Menu from Windows File</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.UnRegisterContextMenuFromFile(<span class="string">&quot;MyApp&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="RegisterContextMenuToBackground"><a href="#RegisterContextMenuToBackground" class="headerlink" title="RegisterContextMenuToBackground"></a>RegisterContextMenuToBackground</h2><p>Register Context Menu in Windows Background </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> command = <span class="string">$&quot;\&quot;<span class="subst">&#123;Process.GetCurrentProcess().MainModule.FileName&#125;</span>\&quot; \&quot;%1\&quot;&quot;</span>;</span><br><span class="line">ApplicationHelper.RegisterContextMenuToBackground(<span class="string">&quot;MyApp&quot;</span>, command);</span><br></pre></td></tr></table></figure>
<p>for UnRegister Context Menu from Windows File</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.UnRegisterContextMenuFromBackground(<span class="string">&quot;MyApp&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="RegisterContextMenuToDrive"><a href="#RegisterContextMenuToDrive" class="headerlink" title="RegisterContextMenuToDrive"></a>RegisterContextMenuToDrive</h2><p>Register Context Menu in Windows Background </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> command = <span class="string">$&quot;\&quot;<span class="subst">&#123;Process.GetCurrentProcess().MainModule.FileName&#125;</span>\&quot; \&quot;%1\&quot;&quot;</span>;</span><br><span class="line">ApplicationHelper.RegisterContextMenuToDrive(<span class="string">&quot;MyApp&quot;</span>, command);</span><br></pre></td></tr></table></figure>
<p>for UnRegister Context Menu from Windows File</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.UnRegisterContextMenuFromDrive(<span class="string">&quot;MyApp&quot;</span>);</span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>All of the above methods have an additional method, That contain <code>Cascade</code><br>Use these methods when you want to create a Cascade Context Menu.</p>
          </div>

<div class="note warning">
            <p>Registring and Unregsitring<br>Registering and UnRegistering ContextMenu To Drive and <code>Cascade</code> Mode requires Administrator Access.</p>
          </div>

<h2 id="Restart"><a href="#Restart" class="headerlink" title="Restart"></a>Restart</h2><p>Restart Application</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.Restart();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Or Restart as Administrator</span></span><br><span class="line"><span class="comment">// ApplicationHelper.Restart(true);</span></span><br></pre></td></tr></table></figure>
<h2 id="GetExecutablePathNative"><a href="#GetExecutablePathNative" class="headerlink" title="GetExecutablePathNative"></a>GetExecutablePathNative</h2><p>this is a P/Invoke Method to get current application executable path, this method work fine in .net framework and .net core in portable and publish mode release.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> path = ApplicationHelper.GetExecutablePathNative();</span><br></pre></td></tr></table></figure>
<h2 id="GetExecutablePath"><a href="#GetExecutablePath" class="headerlink" title="GetExecutablePath"></a>GetExecutablePath</h2><p>this is a Assembly based Method to get current application executable path, this method work fine in .net framework and .net core in portable and publish mode release. for .net 5.0, <code>GetExecutablePathNative</code> method is used in this method.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> path = ApplicationHelper.GetExecutablePath();</span><br></pre></td></tr></table></figure>
<h2 id="SendMessageToAnotherProcess-and-ListenToReceiveMessageFromAnotherProcess"><a href="#SendMessageToAnotherProcess-and-ListenToReceiveMessageFromAnotherProcess" class="headerlink" title="SendMessageToAnotherProcess and ListenToReceiveMessageFromAnotherProcess"></a>SendMessageToAnotherProcess and ListenToReceiveMessageFromAnotherProcess</h2><p>if you want to send message between different applications you can use this native method</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ApplicationHelper.SendMessageToAnotherProcess(<span class="string">&quot;MainWindowTitle&quot;</span>, <span class="string">&quot;Message&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>now You must register a listener to receive the message</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MainWindow_Loaded</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ApplicationHelper.ListenToReceiveMessageFromAnotherProcess(<span class="keyword">this</span>, message =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="ColorHelper"><a href="#ColorHelper" class="headerlink" title="ColorHelper"></a>ColorHelper</h1><h2 id="GetColorFromBrush"><a href="#GetColorFromBrush" class="headerlink" title="GetColorFromBrush"></a>GetColorFromBrush</h2><p>Get Color from LinearGradientBrush, SolidColorBrush and Brush</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> color = ApplicationHelper.GetColorFromBrush(brush);</span><br></pre></td></tr></table></figure>
<h2 id="GetColorFromString"><a href="#GetColorFromString" class="headerlink" title="GetColorFromString"></a>GetColorFromString</h2><p>Creates a Color from a XAML color string.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> color = GetColorFromString(<span class="string">&quot;#3260a8&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="GetHexFromColor"><a href="#GetHexFromColor" class="headerlink" title="GetHexFromColor"></a>GetHexFromColor</h2><p>Get Hex Code from Color</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> color = GetHexFromColor(color);</span><br></pre></td></tr></table></figure>
<h2 id="GetHexFromBrush"><a href="#GetHexFromBrush" class="headerlink" title="GetHexFromBrush"></a>GetHexFromBrush</h2><p>Get Hex Code from Brush</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> color = GetHexFromBrush(brush);</span><br></pre></td></tr></table></figure>
<h1 id="OSVersionHelper"><a href="#OSVersionHelper" class="headerlink" title="OSVersionHelper"></a>OSVersionHelper</h1><p>get os version</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">OSVersionHelper.GetOSVersion();</span><br><span class="line"><span class="keyword">var</span> win10_1909 = OSVersionHelper.IsWindows10_1909_OrGreater();</span><br></pre></td></tr></table></figure>
<h2 id="Methods-1"><a href="#Methods-1" class="headerlink" title="Methods"></a>Methods</h2><table>
<thead>
<tr>
<th>Methods</th>
</tr>
</thead>
<tbody><tr>
<td>IsWindowsNT</td>
</tr>
<tr>
<td>IsWindows7</td>
</tr>
<tr>
<td>IsWindows7_OrGreater</td>
</tr>
<tr>
<td>IsWindows8</td>
</tr>
<tr>
<td>IsWindows8_OrGreater</td>
</tr>
<tr>
<td>IsWindows81</td>
</tr>
<tr>
<td>IsWindows81_OrGreater</td>
</tr>
<tr>
<td>IsWindows10</td>
</tr>
<tr>
<td>IsWindows10_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1507</td>
</tr>
<tr>
<td>IsWindows10_1507_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1511</td>
</tr>
<tr>
<td>IsWindows10_1511_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1607</td>
</tr>
<tr>
<td>IsWindows10_1607_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1703</td>
</tr>
<tr>
<td>IsWindows10_1703_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1709</td>
</tr>
<tr>
<td>IsWindows10_1709_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1803</td>
</tr>
<tr>
<td>IsWindows10_1803_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1809</td>
</tr>
<tr>
<td>IsWindows10_1809_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1903</td>
</tr>
<tr>
<td>IsWindows10_1903_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_1909</td>
</tr>
<tr>
<td>IsWindows10_1909_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_2004</td>
</tr>
<tr>
<td>IsWindows10_2004_OrGreater</td>
</tr>
<tr>
<td>IsWindows10_2009</td>
</tr>
<tr>
<td>IsWindows10_2009_OrGreater</td>
</tr>
</tbody></table>
<h1 id="GenericCompare"><a href="#GenericCompare" class="headerlink" title="GenericCompare"></a>GenericCompare</h1><p>Check if there is an specific item in the collection or not</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> model = <span class="keyword">new</span> Model</span><br><span class="line">&#123;</span><br><span class="line">    Id = <span class="number">1</span>,</span><br><span class="line">    Name = <span class="string">&quot;Test&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> contain = DataList.Contains(model, <span class="keyword">new</span> GenericCompare&lt;Model&gt;(x=&gt;x.Id)); </span><br></pre></td></tr></table></figure>
<h1 id="DispatcherHelper"><a href="#DispatcherHelper" class="headerlink" title="DispatcherHelper"></a>DispatcherHelper</h1><p>Run codes in Main Thread</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">DispatcherHelper.RunOnMainThread(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//action</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="ConvertHelper"><a href="#ConvertHelper" class="headerlink" title="ConvertHelper"></a>ConvertHelper</h1><h2 id="BytesToBitmapImage"><a href="#BytesToBitmapImage" class="headerlink" title="BytesToBitmapImage"></a>BytesToBitmapImage</h2><p>convert <code>byte[]</code> to <code>BitmapImage</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> bitmap = BytesToBitmapImage(bytes);</span><br></pre></td></tr></table></figure>
<h2 id="BitmapImageToBytes"><a href="#BitmapImageToBytes" class="headerlink" title="BitmapImageToBytes"></a>BitmapImageToBytes</h2><p>convert <code>BitmapImage</code> to <code>byte[]</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> bytes = BitmapImageToBytes(bitmap);</span><br></pre></td></tr></table></figure>
<h2 id="BitmapImageToBase64"><a href="#BitmapImageToBase64" class="headerlink" title="BitmapImageToBase64"></a>BitmapImageToBase64</h2><p>convert <code>BitmapImage</code> to <code>Base64</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> base64 = BitmapImageToBase64(bitmap);</span><br></pre></td></tr></table></figure>
<h2 id="Base64ToBitmapImage"><a href="#Base64ToBitmapImage" class="headerlink" title="Base64ToBitmapImage"></a>Base64ToBitmapImage</h2><p>convert <code>Base64</code> to <code>BitmapImage</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> bitmap = Base64ToBitmapImage(base64);</span><br></pre></td></tr></table></figure>
<h2 id="ToFileSize"><a href="#ToFileSize" class="headerlink" title="ToFileSize"></a>ToFileSize</h2><p>Translate numeric file size in bytes to a human-readable shorter string format.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> fileSize = ToFileSize(<span class="number">564654644</span>);</span><br><span class="line"><span class="comment">//Result: 538/5 MB</span></span><br></pre></td></tr></table></figure>
<h1 id="XmlHelper"><a href="#XmlHelper" class="headerlink" title="XmlHelper"></a>XmlHelper</h1><p>Serialize and Deserialize properties of a class to xml file.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Person person = <span class="keyword">new</span> Person() &#123; Name = <span class="string">&quot;Mahdi&quot;</span>, Age = <span class="number">27</span> &#125;;</span><br><span class="line">XmlHelper.Serialize&lt;Person&gt;(person, <span class="string">@&quot;output.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">Person person2 = <span class="keyword">new</span> Person();</span><br><span class="line">person2 = XmlHelper.Deserialize&lt;Person&gt;(<span class="string">@&quot;output.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">&quot;Name: &#123;0&#125;&quot;</span>, person2.Name);</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Age: &#123;0&#125;&quot;</span>, person2.Age);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>LoadingIndicator</title>
    <url>/handycontrol/persianToolkit/loadingIndicator/index.html</url>
    <content><![CDATA[<p>LoadingIndicators is a collection of 11 animated loading indicators.</p>
<h2 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h2><table>
<thead>
<tr>
<th>Style</th>
</tr>
</thead>
<tbody><tr>
<td>LoadingIndicatorArcsStyle</td>
</tr>
<tr>
<td>LoadingIndicatorArcsRingStyle</td>
</tr>
<tr>
<td>LoadingIndicatorDoubleBounceStyle</td>
</tr>
<tr>
<td>LoadingIndicatorFlipPlaneStyle</td>
</tr>
<tr>
<td>LoadingIndicatorPulseStyle</td>
</tr>
<tr>
<td>LoadingIndicatorRingStyle</td>
</tr>
<tr>
<td>LoadingIndicatorThreeDotsStyle</td>
</tr>
<tr>
<td>LoadingIndicatorWaveStyle</td>
</tr>
<tr>
<td>LoadingIndicatorLinesStyle</td>
</tr>
<tr>
<td>LoadingIndicatorGridsStyle</td>
</tr>
<tr>
<td>LoadingIndicatorRotateStyle</td>
</tr>
</tbody></table>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorArcsStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorArcsRingStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorDoubleBounceStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorFlipPlaneStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorPulseStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorRingStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorThreeDotsStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorWaveStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorLinesStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorGridsStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hc:LoadingIndicator</span> <span class="attr">SpeedRatio</span>=<span class="string">&quot;&#123;Binding SpeedRatio&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LoadingIndicatorRotateStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/Indicator.gif" alt="LoadingIndicator"></p>
]]></content>
  </entry>
  <entry>
    <title>BusyIndicator</title>
    <url>/handycontrol/persianToolkit/busyIndicator/index.html</url>
    <content><![CDATA[<p>BusyIndicator makes it easy to let the user know when an application is busy. Simply wrap the relevant content in an instance of the BusyIndicator control and toggle its IsBusy property to True during any long-running process.</p>
<p>example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:BusyIndicator</span> <span class="attr">IsBusy</span>=<span class="string">&quot;True&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">grid</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:BusyIndicator</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Custom-Content"><a href="#Custom-Content" class="headerlink" title="Custom Content"></a>Custom Content</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">hc:BusyIndicator</span> <span class="attr">IsBusy</span>=<span class="string">&quot;True&quot;</span> <span class="attr">DisplayAfter</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">hc:BusyIndicator.BusyContentTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Downloading Email&quot;</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                               <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Downloading message 4/10...&quot;</span>/&gt;</span></span><br><span class="line">                               <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;40&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">                           <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">                               <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">ColumnDefinition</span>/&gt;</span></span><br><span class="line">                                   <span class="tag">&lt;<span class="name">ColumnDefinition</span>/&gt;</span></span><br><span class="line">                               <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">                               <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Pause&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0 0 2 0&quot;</span>/&gt;</span></span><br><span class="line">                               <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Cancel&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;2 0 0 0&quot;</span>/&gt;</span></span><br><span class="line">                           <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">hc:BusyIndicator.BusyContentTemplate</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">hc:BusyIndicator.OverlayStyle</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">Style</span> <span class="attr">TargetType</span>=<span class="string">&quot;Rectangle&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Fill&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;#ffffeeee&quot;</span>/&gt;</span></span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">hc:BusyIndicator.OverlayStyle</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">hc:BusyIndicator.ProgressBarStyle</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">Style</span> <span class="attr">TargetType</span>=<span class="string">&quot;ProgressBar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Collapsed&quot;</span>/&gt;</span></span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">hc:BusyIndicator.ProgressBarStyle</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ContentControl</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource SampleContent&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:BusyIndicator</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>BusyContent</td>
<td>Gets or sets the busy content to display to the user.</td>
</tr>
<tr>
<td>BusyContentTemplate</td>
<td>Gets or sets the DataTemplate to use for displaying the busy content to the user.</td>
</tr>
<tr>
<td>DisplayAfter</td>
<td>Gets or sets the time interval that the busy content is delayed before being displayed.</td>
</tr>
<tr>
<td>FocusAfterBusy</td>
<td>Gets or sets a control that should get focus when the busy indicator disappears.</td>
</tr>
<tr>
<td>IsBusy</td>
<td>Gets or sets a value indicating whether the busy indicator should be shown.</td>
</tr>
<tr>
<td>IsContentVisible</td>
<td>Gets or sets a value indicating whether the BusyContent is visible.</td>
</tr>
<tr>
<td>OverlayStyle</td>
<td>Gets or sets a Style object representing the style to use for the overlay. By default, null.</td>
</tr>
<tr>
<td>ProgressBarStyle</td>
<td>Gets or sets a Style object representing the style to use for the progress bar. By default, null.</td>
</tr>
</tbody></table>
<p><img src="https://user-images.githubusercontent.com/9213496/112822135-c63b3900-909c-11eb-9e2f-33d34a323c02.gif" alt="BusyIndicator"></p>
]]></content>
  </entry>
  <entry>
    <title>Logger</title>
    <url>/handycontrol/persianToolkit/logger/index.html</url>
    <content><![CDATA[<p>Logger is a diagnostic logging class. It is easy to set up and has a clean API, Logger can write reports both in the Debug and in the text file.</p>
<div class="note info">
            <p>Logger Located in the <strong>HandyControl.Tools</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure><p>You can use the following <code>using</code> and use the methods without writing the class name</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">static</span> HandyControl.Tools.Logger;</span><br></pre></td></tr></table></figure>
          </div>

<div class="note info">
            <p>You can use the <code>DefaultInitialization</code> which includes <code>FileLoggerHandler</code> and <code>DebugLoggerHandler</code> or you can choose the handler you want</p>
          </div>

<p><strong>FileLoggerHandler</strong> means that Logs are stored in a text file<br><strong>DebugLoggerHandler</strong> means that Logs are displayed in Visual Studio Output Section</p>
<h1 id="Initialize"><a href="#Initialize" class="headerlink" title="Initialize"></a>Initialize</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Logger.DefaultInitialization();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OR</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Logger.LoggerHandlerManager</span></span><br><span class="line">    <span class="comment">//            .AddHandler(new FileLoggerHandler())</span></span><br><span class="line">    <span class="comment">//            .AddHandler(new DebugLoggerHandler());</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Default-Level"><a href="#Default-Level" class="headerlink" title="Default Level"></a>Default Level</h1><p>Settings of default type of message</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Logger.DefaultLevel = Logger.Level.Severe;</span><br></pre></td></tr></table></figure>
<h1 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// Fast logging (monitor name of class and methods from which is the application logged)</span></span><br><span class="line">Logger.Log();</span><br><span class="line"></span><br><span class="line"><span class="comment">// We define a log message</span></span><br><span class="line">Logger.Log(<span class="string">&quot;Hello world&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// We can define the level (type) of message</span></span><br><span class="line">Logger.Log(Logger.Level.Fine, <span class="string">&quot;Explicit define level&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Explicit definition of the class from which the logging</span></span><br><span class="line">Logger.Log&lt;Program&gt;(<span class="string">&quot;Explicit define log class&quot;</span>);</span><br><span class="line">Logger.Log&lt;Program&gt;(Logger.Level.Fine, <span class="string">&quot;Explicit define log class and level&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="On-Off"><a href="#On-Off" class="headerlink" title="On/Off"></a>On/Off</h1><p>The following methods help to disable or enable logging</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>On</td>
<td>Log</td>
</tr>
<tr>
<td>Off</td>
<td>Log</td>
</tr>
</tbody></table>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Log</span></span><br><span class="line">Logger.Off();</span><br><span class="line">Logger.Log(<span class="string">&quot;Not-logged message&quot;</span>);</span><br><span class="line"></span><br><span class="line">Logger.On();</span><br><span class="line">Logger.Log(<span class="string">&quot;I&#x27;am back!&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>MaskedTextBox</title>
    <url>/handycontrol/persianToolkit/maskedTextBox/index.html</url>
    <content><![CDATA[<p>Represents a control that limits the input text to the format determined by the specified mask.</p>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">&lt;hc:MaskedTextBox Mask=<span class="string">&quot;(000) 000-0000&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/9213496/112822394-203bfe80-909d-11eb-88c9-496ee89d170c.png" alt="MaskText"></p>
<h1 id="Masks"><a href="#Masks" class="headerlink" title="Masks"></a>Masks</h1><table>
<thead>
<tr>
<th>Masking Element</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>Digit, required. This element will accept any single digit between 0 and 9.</td>
</tr>
<tr>
<td>9</td>
<td>Digit or space, optional.</td>
</tr>
<tr>
<td>#</td>
<td>Digit or space, optional. If this position is blank in the mask, it will be rendered as a space in the Text property. Plus (+) and minus (-) signs are allowed.</td>
</tr>
<tr>
<td>L</td>
<td>Letter, required. Restricts input to the ASCII letters a-z and A-Z. This mask element is equivalent to a-zA-Z in regular expressions.</td>
</tr>
<tr>
<td>?</td>
<td>Letter, optional. Restricts input to the ASCII letters a-z and A-Z. This mask element is equivalent to a-zA-Z? in regular expressions.</td>
</tr>
<tr>
<td>&amp;</td>
<td>Character, required. If the AsciiOnly property is set to true, this element behaves like the “L” element.</td>
</tr>
<tr>
<td>C</td>
<td>Character, optional. Any non-control character. If the AsciiOnly property is set to true, this element behaves like the “?” element.</td>
</tr>
<tr>
<td>A</td>
<td>Alphanumeric, optional. If the AsciiOnly property is set to true, the only characters it will accept are the ASCII letters a-z and A-Z.</td>
</tr>
<tr>
<td>a</td>
<td>Alphanumeric, optional. If the AsciiOnly property is set to true, the only characters it will accept are the ASCII letters a-z and A-Z.</td>
</tr>
<tr>
<td>.</td>
<td>Decimal placeholder. The actual display character used will be the decimal symbol appropriate to the format provider, as determined by the control’s FormatProvider property.</td>
</tr>
<tr>
<td>,</td>
<td>Thousands placeholder. The actual display character used will be the thousands placeholder appropriate to the format provider, as determined by the control’s FormatProvider property.</td>
</tr>
<tr>
<td>:</td>
<td>Time separator. The actual display character used will be the time symbol appropriate to the format provider, as determined by the control’s FormatProvider property.</td>
</tr>
<tr>
<td>/</td>
<td>Date separator. The actual display character used will be the date symbol appropriate to the format provider, as determined by the control’s FormatProvider property.</td>
</tr>
<tr>
<td>$</td>
<td>Currency symbol. The actual character displayed will be the currency symbol appropriate to the format provider, as determined by the control’s FormatProvider property.</td>
</tr>
<tr>
<td>&lt;</td>
<td>Shift down. Converts all characters that follow to lowercase.</td>
</tr>
<tr>
<td>&gt;</td>
<td>Shift up. Converts all characters that follow to uppercase.</td>
</tr>
<tr>
<td></td>
<td>Disable a previous shift up or shift down.</td>
</tr>
<tr>
<td>\</td>
<td>Escape. Escapes a mask character, turning it into a literal. “&quot; is the escape sequence for a backslash.</td>
</tr>
</tbody></table>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>AutoMoveFocus</td>
<td>Gets or sets a value indicating if the focus can navigate in the appropriate flow direction (e.g., from one cell to another when a cell is being edited) when the cursor is at the beginning or end of the auto-select text box. (Inherited from Xceed.Wpf.Toolkit.AutoSelectTextBox)</td>
</tr>
<tr>
<td>AutoSelectBehavior</td>
<td>Gets or sets a value indicating how the content of the auto-select text box is selected (Never or OnFocus). By default Never.</td>
</tr>
<tr>
<td>BeepOnError</td>
<td>Gets or sets whether a beep sound will be played on error. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>FormatProvider</td>
<td>Gets or sets the format provider. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>HasParsingError</td>
<td>Gets whether the control has a parsing error. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>HasValidationError</td>
<td>Gets whether the control has a validation error. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>InsertKeyMode</td>
<td>Gets or sets a value representing the text insertion mode of the masked text box.</td>
</tr>
<tr>
<td>IsMaskCompleted</td>
<td>Gets a value indicating if all required characters have been inputted into the mask.</td>
</tr>
<tr>
<td>IsMaskFull</td>
<td>Gets a value indicating if all characters, required and optional, have been inputted into the mask.</td>
</tr>
<tr>
<td>IsValueOutOfRange</td>
<td>Gets whether the control’s value is out of range. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>Mask</td>
<td>Gets or sets the input mask.</td>
</tr>
<tr>
<td>MaskTextProvider</td>
<td>Gets the MaskedTextProvider that was used to mask the input text.</td>
</tr>
<tr>
<td>MaxValue</td>
<td>Gets or sets the maximum value of the control. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>MinValue</td>
<td>Gets or sets the minimum value of the control. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>NullValue</td>
<td>Gets or sets the null value. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>PromptChar</td>
<td>Gets or sets the character that represents the positions in the masked text box that require user input.</td>
</tr>
<tr>
<td>RejectInputOnFirstFailure</td>
<td>Gets or sets a value indicating if inputted text that is pasted into the masked text box can be rejected if it contains an invalid character for the corresponding mask position.</td>
</tr>
<tr>
<td>ResetOnPrompt</td>
<td>Gets or sets a value indicating if the character at the current caret position should be reset when the prompt character is pressed.</td>
</tr>
<tr>
<td>ResetOnSpace</td>
<td>Gets or sets a value indicating if the character at the current caret position should be reset when the space bar is pressed.</td>
</tr>
<tr>
<td>RestrictToAscii</td>
<td>Gets or sets a value indicating if the masked text box accepts non-ASCII characters.</td>
</tr>
<tr>
<td>SkipLiterals</td>
<td>Gets or sets a value indicating if literal values can be overwritten by their same values.</td>
</tr>
<tr>
<td>Text</td>
<td>Content of the MaskedTextBox. (Inherited from System.Windows.Controls.TextBox)</td>
</tr>
<tr>
<td>Value</td>
<td>Gets or sets the value of the MaskedTextBox. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>ValueDataType</td>
<td>Gets or sets the Type of the value. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
</tbody></table>
<h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><table>
<thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>QueryTextFromValue</td>
<td>Raised when an attempt is made to convert the specified value into its string representation. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
<tr>
<td>QueryValueFromText</td>
<td>Raised when an attempt is made to extract a value from the specified text. (Inherited from Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox)</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Command</title>
    <url>/handycontrol/persianToolkit/command/index.html</url>
    <content><![CDATA[<p>You can use commands to use in the MVVM pattern, Different types of commands are available.</p>
<table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>SimpleRelayCommand</td>
</tr>
<tr>
<td>DelegateCommand</td>
</tr>
<tr>
<td>RelayCommand</td>
</tr>
<tr>
<td>AsyncCommand</td>
</tr>
</tbody></table>
<div class="note info">
            <p>All Commands Located in the <strong>HandyControl.Tools.Command</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="SimpleRelayCommand"><a href="#SimpleRelayCommand" class="headerlink" title="SimpleRelayCommand"></a>SimpleRelayCommand</h1><p>Implementation of ICommand where the CanExecute callback alway return true.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> ICommand _ClickCommand;</span><br><span class="line"><span class="keyword">public</span> ICommand ClickCommand</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> _ClickCommand;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">set</span></span><br><span class="line">    &#123;</span><br><span class="line">        _ClickCommand = <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ClickCommand = <span class="keyword">new</span> SimpleRelayCommand(<span class="keyword">new</span> Action(OnClick));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnClick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MessageBox.Show(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="DelegateCommand"><a href="#DelegateCommand" class="headerlink" title="DelegateCommand"></a>DelegateCommand</h1><p>Implementation of ICommand where the Execute and CanExecute callbacks are handled by delegates.</p>
<div class="note warning">
            <p><strong>DelegateCommand</strong> is not Available in <strong>.Net 4.0</strong>, <strong>.Net 4.5</strong>, <strong>.Net 4.5.1</strong> and <strong>.Net 4.5.2</strong> </p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> ICommand AddItems &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TestViewModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AddItems = DelegateCommand.Create(OnAddItems);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddItemsImpl</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MessageBox.Show(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>also you can use <strong>IDelegateCommand</strong> Instead of <strong>ICommand</strong></p>
          </div>

<h1 id="RelayCommand"><a href="#RelayCommand" class="headerlink" title="RelayCommand"></a>RelayCommand</h1><p>Implementation of ICommand with CommandParameter.</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> ICommand _ClickCommand;</span><br><span class="line"><span class="keyword">public</span> ICommand ClickCommand</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> _ClickCommand;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">set</span></span><br><span class="line">    &#123;</span><br><span class="line">        _ClickCommand = <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ClickCommand = <span class="keyword">new</span> RelayCommand(<span class="keyword">new</span> Action&lt;<span class="built_in">object</span>&gt;(OnClick), <span class="keyword">new</span> Func&lt;<span class="built_in">object</span>, <span class="built_in">bool</span>&gt;(CanExecute));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">CanExecute</span>(<span class="params"><span class="built_in">object</span> arg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnClick</span>(<span class="params"><span class="built_in">object</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="AsyncCommand"><a href="#AsyncCommand" class="headerlink" title="AsyncCommand"></a>AsyncCommand</h1><p>Implement asynchronous command binding, including pause and cancel. Also contains NotifyTaskCompletion.</p>
<div class="note warning">
            <p><strong>AsyncCommand</strong> is not Available in <strong>.Net 4.0</strong></p>
          </div>

<p>AsyncCommand contains 12 overloads </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function">AsyncCommand&lt;<span class="built_in">object</span>&gt; <span class="title">Create</span>(<span class="params">Func&lt;Task&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">TResult</span>&gt; <span class="title">Create</span>&lt;<span class="title">TResult</span>&gt;(<span class="params">Func&lt;Task&lt;TResult&gt;&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">AsyncCommand&lt;<span class="built_in">object</span>&gt; <span class="title">Create</span>(<span class="params">Func&lt;CancellationToken, Task&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">TResult</span>&gt; <span class="title">Create</span>&lt;<span class="title">TResult</span>&gt;(<span class="params">Func&lt;CancellationToken, Task&lt;TResult&gt;&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function">AsyncCommand&lt;<span class="built_in">object</span>&gt; <span class="title">Create</span>(<span class="params">Func&lt;CancellationToken, ManualResetEvent, Task&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">TResult</span>&gt; <span class="title">Create</span>&lt;<span class="title">TResult</span>&gt;(<span class="params">Func&lt;CancellationToken, ManualResetEvent, Task&lt;TResult&gt;&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">T</span>, <span class="title">object</span>&gt; <span class="title">Create</span>&lt;<span class="title">T</span>&gt;(<span class="params">Func&lt;T, Task&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">T</span>, <span class="title">TResult</span>&gt; <span class="title">Create</span>&lt;<span class="title">T</span>, <span class="title">TResult</span>&gt;(<span class="params">Func&lt;T, Task&lt;TResult&gt;&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">T</span>, <span class="title">object</span>&gt; <span class="title">Create</span>&lt;<span class="title">T</span>&gt;(<span class="params">Func&lt;T, CancellationToken, Task&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">T</span>, <span class="title">TResult</span>&gt; <span class="title">Create</span>&lt;<span class="title">T</span>, <span class="title">TResult</span>&gt;(<span class="params">Func&lt;T, CancellationToken, Task&lt;TResult&gt;&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">T</span>, <span class="title">object</span>&gt; <span class="title">Create</span>&lt;<span class="title">T</span>&gt;(<span class="params">Func&lt;T, CancellationToken, ManualResetEvent, Task&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">AsyncCommand</span>&lt;<span class="title">T</span>, <span class="title">TResult</span>&gt; <span class="title">Create</span>&lt;<span class="title">T</span>, <span class="title">TResult</span>&gt;(<span class="params">Func&lt;T, CancellationToken, ManualResetEvent, Task&lt;TResult&gt;&gt; command, Func&lt;<span class="built_in">bool</span>&gt; canExecute = <span class="literal">null</span>, <span class="built_in">bool</span> isCancelUpTask = <span class="literal">false</span></span>)</span></span><br></pre></td></tr></table></figure>
<h2 id="Without-parameters"><a href="#Without-parameters" class="headerlink" title="Without parameters"></a>Without parameters</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> IAsyncCommand test1;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test1 =&gt; test1 ??= AsyncCommand.Create(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> Task.CompletedTask;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> IAsyncCommand test2;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test2 =&gt; test2 ??= AsyncCommand.Create(<span class="keyword">async</span> token =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> Task.CompletedTask;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> IAsyncCommand test3;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test3 =&gt; test3 ??= AsyncCommand.Create(<span class="keyword">async</span> (token, manual) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> Task.CompletedTask;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="With-CommandParameter-parameter"><a href="#With-CommandParameter-parameter" class="headerlink" title="With CommandParameter parameter"></a>With CommandParameter parameter</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> IAsyncCommand test1;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test1 =&gt; test1 ??= AsyncCommand.Create&lt;Data&gt;(<span class="keyword">async</span> data =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> Task.CompletedTask;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> IAsyncCommand test2;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test2 =&gt; test2 ??= AsyncCommand.Create&lt;Data&gt;(<span class="keyword">async</span> (data, token) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> Task.CompletedTask;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> IAsyncCommand test3;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test3 =&gt; test3 ??= AsyncCommand.Create&lt;Data&gt;(<span class="keyword">async</span> (data, token, manual) =&gt; &#123;</span><br><span class="line">  manual.WaitOne();</span><br><span class="line">  <span class="keyword">if</span> (token.IsCancellationRequested) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">await</span> Task.CompletedTask;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="without-async"><a href="#without-async" class="headerlink" title="without async"></a>without async</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> IAsyncCommand test1;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test1 =&gt; test1 ??= AsyncCommand.Create(() =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> Task.CompletedTask;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="Cancel-the-last-command-before-executing"><a href="#Cancel-the-last-command-before-executing" class="headerlink" title="Cancel the last command before executing"></a>Cancel the last command before executing</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> IAsyncCommand test4;</span><br><span class="line"><span class="keyword">public</span> IAsyncCommand Test4 =&gt; test4 ??= AsyncCommand.Create(<span class="keyword">async</span> token =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (token.IsCancellationRequested) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">await</span> Task.CompletedTask;</span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Xaml"><a href="#Xaml" class="headerlink" title="Xaml"></a>Xaml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Test1.Execution.Result&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Test1.Execution.IsCompleted&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Test1.Execution.IsNotCompleted&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Test1.Execution.IsSuccessfullyCompleted&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Test1.Execution.IsCanceled&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Test1.Execution.IsFaulted&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Test1.Execution.ErrorMessage&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span> = <span class="string">&quot;&#123;Binding Test1&#125;&quot;</span> <span class="attr">CommandParameter</span>=<span class="string">&quot;111222&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span> = <span class="string">&quot;&#123;Binding Test1.CancelCommand&#125;&quot;</span> &gt;</span> cancel &lt;/ Button &gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;Binding Test1.ManualResetAsyncCommand&#125;&quot;</span>&gt;</span>timeout<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span> = <span class="string">&quot;&#123;Binding Test1.IsSuspend&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>PersianCalendarWithClock</title>
    <url>/handycontrol/persianToolkit/persianCalendarWithClock/index.html</url>
    <content><![CDATA[<p>PersianCalendarWithClock is Based on <a href="https://ghost1372.github.io/handycontrol/extend_controls/calendarWithClock/">CalendarWithClock</a> All methods and styles are available in this control </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PersianCalendarWithClock</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">ConfirmButtonText</span>=<span class="string">&quot;Ok&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/PersianCalendar.png" alt="PersianCalendar"></p>
]]></content>
  </entry>
  <entry>
    <title>PersianDatePicker</title>
    <url>/handycontrol/persianToolkit/persianDatePicker/index.html</url>
    <content><![CDATA[<p>PersianDatePicker is Based on <a href="https://ghost1372.github.io/handycontrol/extend_controls/datePicker/">DatePicker</a> All methods and styles are available in this control</p>
<div class="note info">
            <p>Note that you must write <code>Persian</code> at the bottom of the style name ==&gt; <code>DateTimePickerExtendPersian</code></p>
          </div>

<p>example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PersianDatePicker</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/PersianDatePicker.png" alt="PersianDatePicker"></p>
]]></content>
  </entry>
  <entry>
    <title>PersianDateTime</title>
    <url>/handycontrol/persianToolkit/persianDateTime/index.html</url>
    <content><![CDATA[<p>with this class you can convert current date to Persian Date there is also some extension method for <code>DateTime.Now</code></p>
<div class="note info">
            <p>PersianDateTime Located in the <strong>HandyControl.Tools</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<p>example:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> date = PersianDateTime.Now</span><br><span class="line">Console.WriteLine(date.DateTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">PersianDateTime persian = <span class="keyword">new</span> PersianDateTime(DateTime.Now);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(persian.DateTime);</span><br><span class="line"><span class="comment">//Result : 1399/10/27</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line">PersianDateTime persian = <span class="keyword">new</span> PersianDateTime();</span><br><span class="line"></span><br><span class="line">Console.WriteLine(persian.GetShamsiYear(DateTime.Now));</span><br><span class="line"><span class="comment">//Result : 1399</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(persian.GetShamsiMonthName(DateTime.Now));</span><br><span class="line"><span class="comment">//Result : دی</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(persian.GetShamsiDayString(DateTime.Now));</span><br><span class="line"><span class="comment">//Result : 03</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(persian.GetShamsiDayName(DateTime.Now));</span><br><span class="line"><span class="comment">//Result : چهارشنبه</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(persian.GetShamsiDayShortName(DateTime.Now));</span><br><span class="line"><span class="comment">//Result : چ</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//انواع روشهای تعریف تاریخ شمسی	</span></span><br><span class="line"><span class="keyword">var</span> dt1 = <span class="keyword">new</span> PersianDateTime(<span class="number">1399</span>, <span class="number">10</span>, <span class="number">13</span>);</span><br><span class="line"><span class="keyword">var</span> dt2 = <span class="keyword">new</span> PersianDateTime(<span class="string">&quot;1399/10/13&quot;</span>);	</span><br><span class="line"><span class="keyword">var</span> dt3 = <span class="keyword">new</span> PersianDateTime(<span class="string">&quot;1399/12/29 23:30&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> dt4 = <span class="keyword">new</span> PersianDateTime(<span class="string">&quot;1399/12/29 23:30:00&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//تعریف بر اساس تاریخ میلادی	</span></span><br><span class="line">DateTime dateTime = DateTime.Now;</span><br><span class="line"><span class="keyword">var</span> persianDateTime = <span class="keyword">new</span> PersianDateTime(dateTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">//فاصله دو تاریخ	</span></span><br><span class="line"><span class="keyword">var</span> dt1 = <span class="keyword">new</span> PersianDateTime(<span class="string">&quot;1399/12/29&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> dt2 = <span class="keyword">new</span> PersianDateTime(<span class="string">&quot;1399/11/29&quot;</span>);</span><br><span class="line">Convert.ToInt32(Extensions.DateDifference(dt1,dt2));</span><br><span class="line"><span class="comment">//result: 30</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>توضیحات</th>
<th>متد</th>
<th>خروجی</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>PersianDateTime.Now.ToLongStringYMDHMS</td>
<td>شنبه بیست آذر سال یکهزار سیصد و نود وهفت ساعت هفت و سی دقیقه و بیست ثانیه</td>
</tr>
<tr>
<td></td>
<td>PersianDateTime.Now.ToLongStringYMDHMS</td>
<td>شنبه بیست آذر سال یکهزار سیصد و نود وهفت ساعت هفت و سی دقیقه</td>
</tr>
<tr>
<td>تبدیل تاریخ شمسی به میلادی</td>
<td>PersianDateTime.Now.ToGregorianDate</td>
<td>16/01/2021</td>
</tr>
<tr>
<td>تولید تاریخ</td>
<td>PersianDateTime.Now.ToLongStringYMD</td>
<td>شنبه بیست آذر سال یکهزار سیصد و نود وهفت</td>
</tr>
<tr>
<td>تولید ساعت</td>
<td>PersianDateTime.Now.ToLongStringHMS</td>
<td>ساعت پانزده و سی دقیقه و ده ثانیه</td>
</tr>
<tr>
<td>تولید ساعت</td>
<td>PersianDateTime.Now.ToLongStringHM</td>
<td>ساعت پانزده و سی دقیقه</td>
</tr>
<tr>
<td>تبدیل اعداد به حروف</td>
<td>PersianUtil.Convert(11200000)</td>
<td>یازده میلیون و دویست هزار</td>
</tr>
</tbody></table>
<h1 id="Extensions"><a href="#Extensions" class="headerlink" title="Extensions"></a>Extensions</h1><p><a href="https://ghost1372.github.io/handycontrol/persianToolkit/extensions/#DateTime">Go Here</a></p>
]]></content>
  </entry>
  <entry>
    <title>PersianDateTimePicker</title>
    <url>/handycontrol/persianToolkit/persianDateTimePicker/index.html</url>
    <content><![CDATA[<p>PersianDateTimePicker is Based on <a href="https://ghost1372.github.io/handycontrol/extend_controls/dateTimePicker/">DateTimePicker</a> All methods and styles are available in this control</p>
<div class="note info">
            <p>Note that you must write <code>Persian</code> at the bottom of the style name ==&gt; <code>DateTimePickerExtendPersian</code> </p>
          </div>

<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>SelectionTextBrush</td>
<td></td>
</tr>
<tr>
<td>SelectionOpacity</td>
<td></td>
</tr>
<tr>
<td>SelectionBrush</td>
<td></td>
</tr>
<tr>
<td>CaretBrushProperty</td>
<td></td>
</tr>
</tbody></table>
<p>example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PersianDateTimePicker</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/PersianDatePicker.png" alt="PersianDateTimePicker"></p>
]]></content>
  </entry>
  <entry>
    <title>SplashWindow</title>
    <url>/handycontrol/persianToolkit/splashWindow/index.html</url>
    <content><![CDATA[<p>A Simple Dynamic Splash Screen.</p>
<div class="note info">
            <p>Available Only in Custom Version</p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SplashWindow</span> : <span class="title">HandyControl.Controls.Window</span>, <span class="title">ISplashWindow</span>, <span class="title">INotifyPropertyChanged</span></span><br></pre></td></tr></table></figure>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><p>First create a Windows (we call it <code>mySplashWindow.xaml</code>) and change <code>&lt;Window</code> to <code>&lt;hc:SplashWindow</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SplashWindow</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.Window.SplashWindow&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">WindowStartupLocation</span>=<span class="string">&quot;CenterScreen&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">Title</span>=<span class="string">&quot;Splash Window&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">Height</span>=<span class="string">&quot;450&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">Width</span>=<span class="string">&quot;800&quot;</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SplashWindow</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Now initialize the <code>SplashWindow</code> in <code>App.cs</code> and <code>OnStartup</code> method</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnStartup</span>(<span class="params">StartupEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SplashWindow.Init(()=&gt; &#123;</span><br><span class="line">                mySplashWindow splash = <span class="keyword">new</span> mySplashWindow();</span><br><span class="line">                <span class="keyword">return</span> splash;</span><br><span class="line">            &#125;);</span><br><span class="line">    <span class="keyword">base</span>.OnStartup(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now to display messages in splash you can use the built-in <code>Message</code> property.<br>Be sure to connect the <code>AncestorType</code> to the <code>hc:SplashWindow</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SplashWindow</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.Window.SplashWindow&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">WindowStartupLocation</span>=<span class="string">&quot;CenterScreen&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">Title</span>=<span class="string">&quot;Splash Window&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">Height</span>=<span class="string">&quot;450&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">Width</span>=<span class="string">&quot;800&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Message, RelativeSource=&#123;RelativeSource AncestorType=hc:SplashWindow&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:SplashWindow</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Now do this to display splash and update messages</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SplashWindow.Instance.AddMessage(<span class="string">&quot;Loading main window&quot;</span>);</span><br><span class="line">    DoSomethingThatTakesALongTime();</span><br><span class="line">    SplashWindow.Instance.AddMessage(<span class="string">&quot;Loading something Witty&quot;</span>);</span><br><span class="line">    DoSomethingElseThatTakesALongTime();</span><br><span class="line">    <span class="comment">//This will probably never actually get seen</span></span><br><span class="line">    SplashWindow.Instance.AddMessage(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line">    InitializeComponent();</span><br><span class="line">    SplashWindow.Instance.LoadComplete();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>IfExtension</title>
    <url>/handycontrol/persianToolkit/markupIfExtension/index.html</url>
    <content><![CDATA[<p>Using the Conditional expression in XAML.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Command</span>=<span class="string">&quot;&#123;hc:If &#123;Binding BoolProperty&#125;,</span></span></span><br><span class="line"><span class="tag"><span class="string">                            &#123;Binding OkCommand&#125;,</span></span></span><br><span class="line"><span class="tag"><span class="string">                            &#123;Binding CancelCommand&#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--OR--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">UserControl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">markup:If</span> <span class="attr">Condition</span>=<span class="string">&quot;&#123;Binding IsLoading&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">markup:If.True</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">views:LoadingView</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">markup:If.True</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">markup:If.False</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">views:LoadedView</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">markup:If.False</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">markup:If</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UserControl</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>SpeedoMeter</title>
    <url>/handycontrol/persianToolkit/speedoMeter/index.html</url>
    <content><![CDATA[<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:SpeedoMeter</span> <span class="attr">Angle</span>=<span class="string">&quot;120&quot;</span> <span class="attr">MaximumValue</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h1><table>
<thead>
<tr>
<th>Property</th>
</tr>
</thead>
<tbody><tr>
<td>Value</td>
</tr>
<tr>
<td>ValueColor</td>
</tr>
<tr>
<td>Status</td>
</tr>
<tr>
<td>StatusColor</td>
</tr>
<tr>
<td>StrokeColor</td>
</tr>
<tr>
<td>ValueFontSize</td>
</tr>
<tr>
<td>StatusFontSize</td>
</tr>
<tr>
<td>MaximumValue</td>
</tr>
<tr>
<td>ValueVisibility</td>
</tr>
<tr>
<td>StatusVisibility</td>
</tr>
<tr>
<td>Angle</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/SpeedoMeter.gif" alt="SpeedoMeter"></p>
]]></content>
  </entry>
  <entry>
    <title>UndoRedoObservableCollection</title>
    <url>/handycontrol/persianToolkit/undoRedoObservableCollection/index.html</url>
    <content><![CDATA[<p>List and ObservableCollection which support undo/redo.</p>
<div class="note info">
            <p>You can use both in the <strong>List</strong> and <strong>ObservableCollection</strong>.</p>
          </div>

<div class="note warning">
            <p><strong>UndoRedoList</strong> and <strong>UndoRedoObservableCollection</strong> is not Available in <strong>.Net 4.0</strong>, <strong>.Net 4.5</strong>, <strong>.Net 4.5.1</strong>, <strong>.Net 4.5.2</strong>, <strong>.Net 4.6</strong>, <strong>.Net 4.6.1</strong> and <strong>.Net 4.6.2</strong> </p>
          </div>

<p>Example:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">UndoRedoObservableCollection&lt;<span class="built_in">string</span>&gt; list = <span class="keyword">new</span> UndoRedoObservableCollection&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line"><span class="comment">// UndoRedoList&lt;string&gt; list = new UndoRedoList&lt;string&gt;();</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line">    list.Add(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    list.Add(<span class="string">&quot;Bye&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Result: Hello, Bye</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddToList_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    list.Add(<span class="string">&quot;Welcome&quot;</span>);</span><br><span class="line">    <span class="comment">// Result: Hello, Bye, Welcome</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Undo_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    list.Undo();</span><br><span class="line">    <span class="comment">// Result: Hello, Bye</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Redo_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    list.Redo();</span><br><span class="line">    <span class="comment">// Result: Hello, Bye, Welcome</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>OptimizedObservableCollection</title>
    <url>/handycontrol/persianToolkit/optimizedObservableCollection/index.html</url>
    <content><![CDATA[<p>A super awesome ObservableCollection that adds important methods such as: AddRange, RemoveRange, Replace, and ReplaceRange with single CollectionChanged notification.</p>
<p>Example:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">OptimizedObservableCollection</span>&lt;<span class="title">int</span>&gt; Items</span> = <span class="keyword">new</span> OptimizedObservableCollection&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddItems</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> array = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>];</span><br><span class="line">    array[<span class="number">0</span>] = <span class="number">7</span>;</span><br><span class="line">    array[<span class="number">1</span>] = <span class="number">6</span>;</span><br><span class="line">    array[<span class="number">2</span>] = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">    Items.AddRange(array);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Border</title>
    <url>/handycontrol/native_controls/border/index.html</url>
    <content><![CDATA[<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Available Styles</th>
</tr>
</thead>
<tbody><tr>
<td>BorderTipPrimary</td>
</tr>
<tr>
<td>BorderTipDanger</td>
</tr>
<tr>
<td>BorderTipWarning</td>
</tr>
<tr>
<td>BorderTipInfo</td>
</tr>
<tr>
<td>BorderTipSuccess</td>
</tr>
<tr>
<td>BorderRegion</td>
</tr>
<tr>
<td>BorderTipBaseStyle</td>
</tr>
<tr>
<td>BorderVerticallySplitter</td>
</tr>
<tr>
<td>BorderHorizontallySplitter</td>
</tr>
<tr>
<td>BorderCircular</td>
</tr>
<tr>
<td>BorderClip</td>
</tr>
<tr>
<td>BorderCircularClip</td>
</tr>
</tbody></table>
<h1 id="BorderRegionStyle"><a href="#BorderRegionStyle" class="headerlink" title="BorderRegionStyle"></a>BorderRegionStyle</h1><p>This style is used to wrap a control area, with several DropShadowEffect resources in the base xaml definition to make the following effects:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Border.png" alt="Border"></p>
<p>The xaml code for the above effects is as follows:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Margin</span>=<span class="string">&quot;32,32,0,0&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,32,32&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,32,32&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow1&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource InfoBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,32,32&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow2&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span>  <span class="attr">Margin</span>=<span class="string">&quot;0,0,32,32&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow3&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span>  <span class="attr">Margin</span>=<span class="string">&quot;0,0,32,32&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow4&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource AccentBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span>  <span class="attr">Margin</span>=<span class="string">&quot;0,0,32,32&quot;</span> <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource EffectShadow5&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;This is the content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Tip: The BorderRegion used in the new version is different from the old version using the BorderRegionStyle.</p>
<h1 id="BorderVerticallySplitter"><a href="#BorderVerticallySplitter" class="headerlink" title="BorderVerticallySplitter"></a>BorderVerticallySplitter</h1><p>This style uses a 1 unit width Border to split the horizontally arranged controls.</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderVerticallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderVerticallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderVerticallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderVerticallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/BorderVerticallySplitter_1.png" alt="BorderVerticallySplitter"></p>
          </div>

<h1 id="BorderHorizontallySplitter"><a href="#BorderHorizontallySplitter" class="headerlink" title="BorderHorizontallySplitter"></a>BorderHorizontallySplitter</h1><p>This style uses a 1 unit height Border to split the vertically arranged controls.</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;0,5&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderHorizontallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;0,5&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderHorizontallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;0,5&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderHorizontallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;0,5&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderHorizontallySplitter&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Margin</span>=<span class="string">&quot;0,5&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/BorderHorizontallySplitter_1.png" alt="BorderHorizontallySplitter"></p>
          </div>

<h1 id="BorderCircular"><a href="#BorderCircular" class="headerlink" title="BorderCircular"></a>BorderCircular</h1><p>This style implements a circular border with the addition of the <code>BorderElement.Circular</code> property.</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderCircular&#125;&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;OrangeRed&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/BorderCircular_1.png" alt="BorderCircular"></p>
          </div>

<h1 id="BorderClip"><a href="#BorderClip" class="headerlink" title="BorderClip"></a>BorderClip</h1><p>This style adds a cropping function to the ‘BorderCircular`, which is often used to display a circular Image.</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderClip&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;/HandyControlDemo;component/Resources/Img/Album/2.jpg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/BorderClip_1.png" alt="BorderClip"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Button</title>
    <url>/handycontrol/native_controls/button/index.html</url>
    <content><![CDATA[<h1 id="ButtonBaseStyle-ButtonBaseBaseStyle"><a href="#ButtonBaseStyle-ButtonBaseBaseStyle" class="headerlink" title="ButtonBaseStyle : ButtonBaseBaseStyle"></a>ButtonBaseStyle : ButtonBaseBaseStyle</h1><p>The default style of the button is not recommended for direct use and should always be used by other styles in the BasedOn mode.</p>
<div class="note info">
            <p>All buttons that inherit this style can use the additional properties defined in <code>IconElement</code> to control the properties of the geometry in the button.</p>
          </div>

<div class="note info">
            <p>All buttons that inherit this style can use the <code>BorderElement.CornerRadius</code> attached property to control the fillet size of the button.</p>
          </div>

<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonBaseStyle_1.png" alt="ButtonBaseStyle"></p>
          </div>

<h1 id="ButtonPrimary-ButtonBaseStyle"><a href="#ButtonPrimary-ButtonBaseStyle" class="headerlink" title="ButtonPrimary : ButtonBaseStyle"></a>ButtonPrimary : ButtonBaseStyle</h1><p>Main Button</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonPrimary_1.png" alt="ButtonPrimary"></p>
          </div>

<h1 id="ButtonSuccess-ButtonBaseStyle"><a href="#ButtonSuccess-ButtonBaseStyle" class="headerlink" title="ButtonSuccess : ButtonBaseStyle"></a>ButtonSuccess : ButtonBaseStyle</h1><p>Success button</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonSuccess&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonSuccess&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonSuccess&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonSuccess_1.png" alt="ButtonSuccess"></p>
          </div>

<h1 id="ButtonInfo-ButtonBaseStyle"><a href="#ButtonInfo-ButtonBaseStyle" class="headerlink" title="ButtonInfo : ButtonBaseStyle"></a>ButtonInfo : ButtonBaseStyle</h1><p>Information button</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonInfo&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonInfo&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonInfo&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonInfo_1.png" alt="ButtonInfo"></p>
          </div>

<h1 id="ButtonWarning-ButtonBaseStyle"><a href="#ButtonWarning-ButtonBaseStyle" class="headerlink" title="ButtonWarning : ButtonBaseStyle"></a>ButtonWarning : ButtonBaseStyle</h1><p>Warning button</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonWarning&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonWarning&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonWarning&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonWarning_1.png" alt="ButtonWarning"></p>
          </div>

<h1 id="ButtonDanger-ButtonBaseStyle"><a href="#ButtonDanger-ButtonBaseStyle" class="headerlink" title="ButtonDanger : ButtonBaseStyle"></a>ButtonDanger : ButtonBaseStyle</h1><p>Danger button</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonDanger&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonDanger&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonDanger&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonDanger_1.png" alt="ButtonDanger"></p>
          </div>

<h1 id="ButtonDefault-ButtonBaseStyle"><a href="#ButtonDefault-ButtonBaseStyle" class="headerlink" title="ButtonDefault : ButtonBaseStyle"></a>ButtonDefault : ButtonBaseStyle</h1><p>Default button</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonDefault&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonDefault&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonDefault&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a button&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
          </div>

<h1 id="ButtonIcon-ButtonBaseStyle"><a href="#ButtonIcon-ButtonBaseStyle" class="headerlink" title="ButtonIcon : ButtonBaseStyle"></a>ButtonIcon : ButtonBaseStyle</h1><p>This style is recommended if you only want to display the geometry button.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource UpDownGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource UpDownGeometry&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ButtonIcon&#125;&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource PrimaryTextBrush&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource UpDownGeometry&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonIcon_1.png" alt="ButtonIcon"></p>
          </div>

<h1 id="ButtonCustom"><a href="#ButtonCustom" class="headerlink" title="ButtonCustom"></a>ButtonCustom</h1><p>This style is recommended if you want to fully customize the content of the button. The content in <code>ButtonCustom</code> is entirely up to you. In addition, you can switch the background with additional properties in <code>BackgroundSwitchElement</code>:</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Button Height&#x3D;&quot;30&quot; Padding&#x3D;&quot;10,0&quot; Background&#x3D;&quot;Black&quot; Foreground&#x3D;&quot;White&quot; Content&#x3D;&quot;This is a button&quot; Style&#x3D;&quot;&#123;StaticResource ButtonCustom&#125;&quot; hc:BackgroundSwitchElement.MouseHoverBackground&#x3D;&quot;Red&quot; hc:BackgroundSwitchElement.MouseDownBackground&#x3D;&quot;PaleVioletRed&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonCustom_1.gif" alt="ButtonCustom"></p>
          </div>

<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Style</th>
</tr>
</thead>
<tbody><tr>
<td>ButtonPrimary</td>
</tr>
<tr>
<td>ButtonInfo</td>
</tr>
<tr>
<td>ButtonDanger</td>
</tr>
<tr>
<td>ButtonWarning</td>
</tr>
<tr>
<td>ButtonDefault</td>
</tr>
<tr>
<td>ButtonSuccess</td>
</tr>
<tr>
<td>ButtonIcon</td>
</tr>
<tr>
<td>ButtonIconCircular</td>
</tr>
<tr>
<td>ButtonDashed</td>
</tr>
<tr>
<td>ButtonDashedPrimary</td>
</tr>
<tr>
<td>ButtonDashedSuccess</td>
</tr>
<tr>
<td>ButtonDashedInfo</td>
</tr>
<tr>
<td>ButtonDashedWarning</td>
</tr>
<tr>
<td>ButtonDashedDanger</td>
</tr>
<tr>
<td>ButtonCustom</td>
</tr>
<tr>
<td>ButtonGroupItemDefault</td>
</tr>
<tr>
<td>ButtonGroupItemHorizontalFirst</td>
</tr>
<tr>
<td>ButtonGroupItemHorizontalLast</td>
</tr>
<tr>
<td>ButtonGroupItemSingle</td>
</tr>
<tr>
<td>ButtonGroupItemVerticalFirst</td>
</tr>
<tr>
<td>ButtonGroupItemVerticalLast</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Calendar</title>
    <url>/handycontrol/native_controls/calendar/index.html</url>
    <content><![CDATA[<h1 id="CalendarBaseStyle"><a href="#CalendarBaseStyle" class="headerlink" title="CalendarBaseStyle"></a>CalendarBaseStyle</h1><p>The default style of the calendar is not recommended for direct use and should always be used by other styles in the BasedOn mode.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Calendar</span>/&gt;</span></span><br></pre></td></tr></table></figure><div class="note info">            <p>you can change calendar ui culture:</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;en&quot;</span>);</span><br></pre></td></tr></table></figure>          </div><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/Calendar.gif" alt="Calendar"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>CheckBox</title>
    <url>/handycontrol/native_controls/checkBox/index.html</url>
    <content><![CDATA[<h1 id="CheckBoxBaseStyle"><a href="#CheckBoxBaseStyle" class="headerlink" title="CheckBoxBaseStyle"></a>CheckBoxBaseStyle</h1><p>The default style of the checkbox is not recommended for direct use and should always be used by other styles in the BasedOn mode.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">&quot;CheckBox&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;CheckBox&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;CheckBox&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;CheckBox&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;CheckBox&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;x:Null&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;CheckBox&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;x:Null&#125;&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/CheckBox.png" alt="CheckBox"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>ComboBox</title>
    <url>/handycontrol/native_controls/comboBox/index.html</url>
    <content><![CDATA[<h1 id="ComboBoxBaseStyle"><a href="#ComboBoxBaseStyle" class="headerlink" title="ComboBoxBaseStyle"></a>ComboBoxBaseStyle</h1><p>The default style of the original combo box is not recommended for direct use. It should always be used by other styles in the BasedOn method. Native combo box uses this style by default if no style is set:</p>
<ul>
<li>Default style<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
or</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ComboBox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ComboBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ComboBox</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxBaseStyle.png" alt="ComboBoxBaseStyle"></p>
<h1 id="ComboBoxExtendBaseStyle-ComboBoxBaseStyle"><a href="#ComboBoxExtendBaseStyle-ComboBoxBaseStyle" class="headerlink" title="ComboBoxExtendBaseStyle : ComboBoxBaseStyle"></a>ComboBoxExtendBaseStyle : ComboBoxBaseStyle</h1><p>The native combo box extends the default style and is not recommended for direct use. It should always be used by other styles in the BasedOn method.</p>
<h1 id="ComboBoxExtend-ComboBoxExtendBaseStyle"><a href="#ComboBoxExtend-ComboBoxExtendBaseStyle" class="headerlink" title="ComboBoxExtend : ComboBoxExtendBaseStyle"></a>ComboBoxExtend : ComboBoxExtendBaseStyle</h1><p>Relative to the default style of the original combo box, it can implement the function of title and watermark by means of additional attributes.</p>
<ul>
<li><p>Title on</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">SelectedIndex</span>=<span class="string">&quot;0&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ComboBoxExtend&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Item 1&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxExtend_1.png" alt="ComboBoxExtend_1"></p>
</li>
<li><p>Title left</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;Title on the left&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ComboBoxExtend&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Item 1&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxExtend_2.png" alt="ComboBoxExtend_2"></p>
</li>
</ul>
<div class="note warning">
            <p>When the title is on the left, in order to align the left side of multiple input boxes, you need to set the title width. The title width does not need to be set one by one, and can be set uniformly on the external container.</p>
          </div>
<div class="note warning">
            <p>common problem:<br>The font of Combobox is larger than the original default font, and the title is set to the left, and the title is incomplete due to the font size.<br><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxExtend_2_Error1.png" alt="ComboBoxExtend_2_Error1"><br>solution:<br>Add the additional attribute <code>hc:InfoElement.ContentHeight</code> to the Combobox. The default value is 30. The default font number is 12. After the change, the value of the additional attribute can be set according to the new font size. As shown above, the font size is 18. Then set <code>hc:InfoElement.ContentHeight</code> to 38 and the result is as follows: <img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxExtend_2_Ok1.png" alt="ComboBoxExtend_2_Ok1"></p>
          </div>
<ul>
<li><p>Title on, with watermark</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This field is required&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ComboBoxExtend&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxExtend_3.png" alt="ComboBoxExtend_3"></p>
</li>
<li><p>Title is on, with watermark, and is required</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This field is required&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ComboBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxExtend_4.png" alt="ComboBoxExtend_4"></p>
</li>
<li><p>The title is on, with a watermark, and is required, and a custom required prompt</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the content&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This field is required&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ComboBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Necessary</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:InfoElement.Symbol</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ComboBoxExtend_5.png" alt="ComboBoxExtend_5"></p>
<div class="note warning">
            <p>To use Attached Properties (InfoElement), you should set Style to <code>ComboBoxExtend</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>ContentControl</title>
    <url>/handycontrol/native_controls/contentControl/index.html</url>
    <content><![CDATA[<p>All <code>ContentControl</code> cannot get focus by default</p>
<div class="note info no-icon">
            <p>Only Custom Version</p><h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table><thead><tr><th>Style</th></tr></thead><tbody><tr><td>LiveStyle</td></tr><tr><td>ChessBoard</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ContentControl</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ChessBoard&#125;&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Click&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ContentControl</span>&gt;</span></span><br></pre></td></tr></table></figure>
          </div>

<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/MCBackgroundLiveStyle.gif" alt="ContentControl"></p>
]]></content>
  </entry>
  <entry>
    <title>ContextMenu</title>
    <url>/handycontrol/native_controls/contextMenu/index.html</url>
    <content><![CDATA[<h1 id="ContextMenuBaseStyle"><a href="#ContextMenuBaseStyle" class="headerlink" title="ContextMenuBaseStyle"></a>ContextMenuBaseStyle</h1><p>The default style of the context menu is not recommended for direct use and should always be used by other styles in the BasedOn mode.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ContextMenu</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ContextMenu.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">HierarchicalDataTemplate</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">HierarchicalDataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ContextMenu.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ContextMenu</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ContextMenu.png" alt="ContextMenu"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>DataGrid</title>
    <url>/handycontrol/native_controls/dataGrid/index.html</url>
    <content><![CDATA[<h1 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>RowHeaderGripperStyle</td>
<td>Thumb</td>
<td>Row Header Drag Strip Style</td>
</tr>
<tr>
<td>ColumnHeaderGripperStyle</td>
<td>Thumb</td>
<td>Column Header Drag Style</td>
</tr>
<tr>
<td>DataGridCellStyle</td>
<td>DataGridCell</td>
<td>Cell Style</td>
</tr>
<tr>
<td>DataGridRowStyle</td>
<td>DataGridRow</td>
<td>Line Style</td>
</tr>
<tr>
<td>DataGridColumnHeaderStyle</td>
<td>DataGridColumnHeader</td>
<td>Column Header Style</td>
</tr>
<tr>
<td>DataGridRowHeaderStyle</td>
<td>DataGridRowHeader</td>
<td>Row Header Style</td>
</tr>
<tr>
<td>TextBlockComboBoxStyle</td>
<td>ComboBox</td>
<td>ComboBox Non-Edit Mode Style</td>
</tr>
<tr>
<td>DataGridTextColumnStyle</td>
<td>TextBlock</td>
<td>Default Text Style</td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataGrid</span> <span class="attr">HeadersVisibility</span>=<span class="string">&quot;All&quot;</span> <span class="attr">RowHeaderWidth</span>=<span class="string">&quot;60&quot;</span> <span class="attr">AutoGenerateColumns</span>=<span class="string">&quot;False&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DataGrid.RowHeaderTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;Binding IsSelected,RelativeSource=&#123;RelativeSource AncestorType=DataGridRow&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DataGrid.RowHeaderTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DataGrid.Columns</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">IsReadOnly</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">CanUserResize</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Index&#125;&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Index&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridTemplateColumn</span> <span class="attr">Width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">CanUserResize</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;&#123;Binding ImgPath&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;Uniform&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataGridTemplateColumn</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Width</span>=<span class="string">&quot;1*&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridCheckBoxColumn</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">CanUserResize</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding IsSelected&#125;&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Selected&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridComboBoxColumn</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Source=&#123;StaticResource DemoTypes&#125;&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">CanUserResize</span>=<span class="string">&quot;False&quot;</span> <span class="attr">SelectedValueBinding</span>=<span class="string">&quot;&#123;Binding Type&#125;&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Type&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Width</span>=<span class="string">&quot;1*&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Remark&#125;&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Remark&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DataGrid.Columns</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/DataGrid.png" alt="DataGrid"></p>
          </div>

<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><div class="note warning no-icon">
            <p>For the text display column <code>DataGridTextColumn</code>, you need to set the text content <code>horizontal centered</code> or <code>horizontal right&#39;, instead of the default style set in HandyControl as </code>left left<code>, you need to inherit the </code>DataGridCellStyle<code>override</code>HorizontalContentAlignment<code>attribute. For</code>Center<code>or</code>Right`, it should be noted that this method is only applicable to projects that have introduced the HandControl resource style. This is not valid for normal native DataGrids.</p>
          </div>

<p>Use for example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:Key</span>=<span class="string">&quot;DataGridTextCenterColumnStyle&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;DataGridCell&quot;</span> <span class="attr">BasedOn</span>=<span class="string">&quot;&#123;StaticResource DataGridCellStyle&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;HorizontalContentAlignment&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataGrid</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Datas&#125;&quot;</span> <span class="attr">AutoGenerateColumns</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DataGrid.Columns</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Header</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Header</span>=<span class="string">&quot;Centered&quot;</span> <span class="attr">CellStyle</span>=<span class="string">&quot;&#123;StaticResource DataGridTextCenterColumnStyle&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;*&quot;</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br><span class="line">​    <span class="tag">&lt;/<span class="name">DataGrid.Columns</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The effect is as follows:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/DataGrid-Warning01.png" alt="DataGridWarning01"></p>
<div class="note info">
            <p>if you want to generate row numbers you should use DataGridAttach Attached Property.</p><p>First Remove <code>DataGrid.RowHeaderTemplate</code> Then add this Attached Property</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DataGrid</span> <span class="attr">hc:DataGridAttach.ShowRowNumber</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
          </div>

<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/DataGrid.png" alt="DataGridShowRowNumber"></p>
]]></content>
  </entry>
  <entry>
    <title>DatePicker</title>
    <url>/handycontrol/native_controls/datePicker/index.html</url>
    <content><![CDATA[<h1 id="DatePickerBaseStyle"><a href="#DatePickerBaseStyle" class="headerlink" title="DatePickerBaseStyle"></a>DatePickerBaseStyle</h1><p>Native datepicker default style, not recommended for direct use, should always be used by other styles in the BasedOn mode. The native datepicker uses this style by default if no style is set:</p>
<ul>
<li>Default style<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DatePicker</span> <span class="attr">SelectedDate</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/DatePickerBaseStyle.png" alt="ComboBoxBaseStyle"></li>
</ul>
<h1 id="DatePickerExtendBaseStyle-DatePickerBaseStyle"><a href="#DatePickerExtendBaseStyle-DatePickerBaseStyle" class="headerlink" title="DatePickerExtendBaseStyle : DatePickerBaseStyle"></a>DatePickerExtendBaseStyle : DatePickerBaseStyle</h1><p>The native datepicker extends the default style and is not recommended for direct use. It should always be used by other styles in the BasedOn mode.</p>
<h1 id="DatePickerExtend-DatePickerExtendBaseStyle"><a href="#DatePickerExtend-DatePickerExtendBaseStyle" class="headerlink" title="DatePickerExtend : DatePickerExtendBaseStyle"></a>DatePickerExtend : DatePickerExtendBaseStyle</h1><ul>
<li><p>Title on</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DatePicker</span> <span class="attr">SelectedDate</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource DatePickerExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/DatePickerExtend_1.png" alt="DatePickerExtend_1"></p>
</li>
<li><p>Title left</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DatePicker</span> <span class="attr">SelectedDate</span>=<span class="string">&quot;&#123;x:Static system:DateTime.Now&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;380&quot;</span> <span class="attr">hc:InfoElement.TitleWidth</span>=<span class="string">&quot;140&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource DatePickerExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;Title on the left&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/DatePickerExtend_2.png" alt="DatePickerExtend_2"></p>
</li>
</ul>
<div class="note warning">
            <p>When the title is on the left, in order to align the left side of multiple input boxes, you need to set the title width. The title width does not need to be set one by one, and can be set uniformly on the external container.</p>
          </div>

<ul>
<li><p>Title on, with watermark<br><a href="https://ghost1372.github.io/handycontrol/native_controls/comboBox/">See Combobox</a></p>
</li>
<li><p>Title is on, with watermark, and is required<br><a href="https://ghost1372.github.io/handycontrol/native_controls/comboBox/">See Combobox</a></p>
</li>
<li><p>The title is on, with a watermark, and is required, and a custom required prompt<br><a href="https://ghost1372.github.io/handycontrol/native_controls/comboBox/">See Combobox</a></p>
</li>
</ul>
<div class="note info">
            <p>you can change datepicker ui culture:</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;en&quot;</span>);</span><br></pre></td></tr></table></figure>
          </div>

<div class="note warning">
            <p>To use Attached Properties (InfoElement), you should set Style to <code>DatePickerExtend</code></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Expander</title>
    <url>/handycontrol/native_controls/expander/index.html</url>
    <content><![CDATA[<h1 id="ExpanderBaseStyle"><a href="#ExpanderBaseStyle" class="headerlink" title="ExpanderBaseStyle"></a>ExpanderBaseStyle</h1><p>Expander Expand Box The default style, which is not recommended for direct use, should always be used by other styles in the BasedOn method.</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;240&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Expander</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1,1,1,0&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Expander</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Expander</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1,1,1,0&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Expander</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Expander</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1,1,1,0&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Expander</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Expander</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Expander</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ExpanderBaseStyle.png" alt="ExpanderBaseStyle"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>FlowDocument</title>
    <url>/handycontrol/native_controls/flowDocument/index.html</url>
    <content><![CDATA[<h1 id="FlowDocumentScrollViewerBaseStyle"><a href="#FlowDocumentScrollViewerBaseStyle" class="headerlink" title="FlowDocumentScrollViewerBaseStyle"></a>FlowDocumentScrollViewerBaseStyle</h1><p>The default style of the scrolling view of the stream document is not recommended. It should always be used by other styles as the BaseOn method.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FlowDocumentScrollViewer</span> <span class="attr">IsToolBarVisible</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;502&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;400&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">FlowDocument</span> <span class="attr">ColumnWidth</span>=<span class="string">&quot;400&quot;</span> <span class="attr">IsOptimalParagraphEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">IsHyphenationEnabled</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Section</span> <span class="attr">FontSize</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Bold</span>&gt;</span>Neptune<span class="tag">&lt;/<span class="name">Bold</span>&gt;</span> (planet), major planet in the solar system, eighth planet</span><br><span class="line">                        from the Sun and fourth largest in diameter.  Neptune maintains an almost constant</span><br><span class="line">                        distance, about 4,490 million km (about 2,790 million mi), from the Sun.  Neptune</span><br><span class="line">                        revolves outside the orbit of Uranus and for most of its orbit moves inside the</span><br><span class="line">                        elliptical path of the outermost planet Pluto (see Solar System). Every 248 years,</span><br><span class="line">                        Pluto’s elliptical orbit brings the planet inside Neptune’s nearly circular orbit</span><br><span class="line">                        for about 20 years, temporarily making Neptune the farthest planet from the Sun.</span><br><span class="line">                        The last time Pluto’s orbit brought it inside Neptune’s orbit was in 1979. In</span><br><span class="line">                        1999 Pluto’s orbit carried it back outside Neptune’s orbit.</span><br><span class="line">                        <span class="tag">&lt;<span class="name">Figure</span> <span class="attr">Width</span>=<span class="string">&quot;140&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;GhostWhite&quot;</span> <span class="attr">HorizontalAnchor</span>=<span class="string">&quot;PageLeft&quot;</span> <span class="attr">HorizontalOffset</span>=<span class="string">&quot;100&quot;</span> <span class="attr">VerticalOffset</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">FontStyle</span>=<span class="string">&quot;Italic&quot;</span> <span class="attr">TextAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Beige&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;DarkGreen&quot;</span>&gt;</span></span><br><span class="line">                                Neptune has 72 times Earth&#x27;s volume...</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">Figure</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Floater</span> <span class="attr">Background</span>=<span class="string">&quot;GhostWhite&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;285&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Table</span> <span class="attr">CellSpacing</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">Table.Columns</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">TableColumn</span> <span class="attr">Width</span>=<span class="string">&quot;155&quot;</span>/&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">TableColumn</span> <span class="attr">Width</span>=<span class="string">&quot;130&quot;</span>/&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">Table.Columns</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">TableRowGroup</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span> <span class="attr">ColumnSpan</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>Neptune Stats<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">TableRow</span> <span class="attr">Background</span>=<span class="string">&quot;LightGoldenrodYellow&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span>&gt;</span>Mean Distance from Sun<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>4,504,000,000 km<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">TableRow</span> <span class="attr">FontSize</span>=<span class="string">&quot;12&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;LightGray&quot;</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span>&gt;</span>Mean Diameter<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>49,532 km<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">TableRow</span> <span class="attr">Background</span>=<span class="string">&quot;LightGoldenrodYellow&quot;</span> <span class="attr">FontSize</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">FontWeight</span>=<span class="string">&quot;Bold&quot;</span>&gt;</span>Approximate Mass<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>1.0247e26 kg<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">TableCell</span> <span class="attr">ColumnSpan</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">FontSize</span>=<span class="string">&quot;10&quot;</span> <span class="attr">FontStyle</span>=<span class="string">&quot;Italic&quot;</span>&gt;</span></span><br><span class="line">                                                Information from the</span><br><span class="line">                                                <span class="tag">&lt;<span class="name">Hyperlink</span> <span class="attr">NavigateUri</span>=<span class="string">&quot;http://encarta.msn.com/encnet/refpages/artcenter.aspx&quot;</span>&gt;</span>Encarta<span class="tag">&lt;/<span class="name">Hyperlink</span>&gt;</span></span><br><span class="line">                                                web site.</span><br><span class="line">                                            <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">TableCell</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">TableRowGroup</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">Table</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">Floater</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                        Astronomers believe Neptune has an inner rocky core that is surrounded by a vast</span><br><span class="line">                        ocean of water mixed with rocky material. From the inner core, this ocean extends</span><br><span class="line">                        upward until it meets a gaseous atmosphere of hydrogen, helium, and trace amounts</span><br><span class="line">                        of methane. Neptune has four rings and 11 known moons. Even though Neptune&#x27;s volume</span><br><span class="line">                        is 72 times Earth’s volume, its mass is only 17.15 times Earth’s mass. Because of</span><br><span class="line">                        its size, scientists classify Neptune—along with Jupiter, Saturn, and Uranus—as</span><br><span class="line">                        one of the giant or Jovian planets (so-called because they resemble Jupiter).</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Figure</span> <span class="attr">Width</span>=<span class="string">&quot;140&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;GhostWhite&quot;</span> <span class="attr">TextAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">HorizontalAnchor</span>=<span class="string">&quot;PageCenter&quot;</span> <span class="attr">WrapDirection</span>=<span class="string">&quot;Both&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">FontStyle</span>=<span class="string">&quot;Italic&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Beige&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;DarkGreen&quot;</span> &gt;</span></span><br><span class="line">                                Neptune has an orbital period of ~20 years...</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">Figure</span>&gt;</span></span><br><span class="line">                        Mathematical theories of astronomy led to the discovery of Neptune. To account for</span><br><span class="line">                        wobbles in the orbit of the planet Uranus, British astronomer John Couch Adams and</span><br><span class="line">                        French astronomer Urbain Jean Joseph Leverrier independently calculated the existence</span><br><span class="line">                        and position of a new planet in 1845 and 1846, respectively. They theorized that the</span><br><span class="line">                        gravitational attraction of this planet for Uranus was causing the wobbles in Uranus’s</span><br><span class="line">                        orbit. Using information from Leverrier, German astronomer Johann Gottfried Galle first</span><br><span class="line">                        observed the planet in 1846.</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Section</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">FlowDocument</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">FlowDocumentScrollViewer</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/FlowDocumentScrollViewer.png" alt="FlowDocumentScrollViewer"></p>
<h1 id="FlowDocumentPageViewerBaseStyle"><a href="#FlowDocumentPageViewerBaseStyle" class="headerlink" title="FlowDocumentPageViewerBaseStyle"></a>FlowDocumentPageViewerBaseStyle</h1><p>The default style of the single page view of the stream document is not recommended. It should always be used by other styles as the BaseOn method.</p>
<h1 id="FlowDocumentReaderBaseStyle"><a href="#FlowDocumentReaderBaseStyle" class="headerlink" title="FlowDocumentReaderBaseStyle"></a>FlowDocumentReaderBaseStyle</h1><p>The default style of the Streaming Document Viewer is not recommended. It should always be used by other styles as BasedOn.</p>
]]></content>
  </entry>
  <entry>
    <title>Frame</title>
    <url>/handycontrol/native_controls/frame/index.html</url>
    <content><![CDATA[<h1 id="FrameBaseStyle"><a href="#FrameBaseStyle" class="headerlink" title="FrameBaseStyle"></a>FrameBaseStyle</h1><p>The default style of the navigation framework is not recommended. It should always be used by other styles in the manner of BasedOn.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Frame</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;360&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;FrameDemo&quot;</span> <span class="attr">NavigationUIVisibility</span>=<span class="string">&quot;Visible&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/FrameBaseStyle.png" alt="FrameBaseStyle"></p>
]]></content>
  </entry>
  <entry>
    <title>GroupBox</title>
    <url>/handycontrol/native_controls/groupBox/index.html</url>
    <content><![CDATA[<h1 id="GroupBoxBaseStyle"><a href="#GroupBoxBaseStyle" class="headerlink" title="GroupBoxBaseStyle"></a>GroupBoxBaseStyle</h1><p>The default style of the GroupBox. It is not recommended to use it directly, and it should always be used by other styles as BasedOn.</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">     <span class="tag">&lt;<span class="name">GroupBox</span> <span class="attr">Grid.Row</span> = <span class="string">&quot;0&quot;</span> <span class="attr">Grid.Column</span> = <span class="string">&quot;0&quot;</span> <span class="attr">Width</span> = <span class="string">&quot;300&quot;</span> <span class="attr">Height</span> = <span class="string">&quot;200&quot;</span> <span class="attr">Header</span> = <span class="string">&quot;Title&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">Padding</span> = <span class="string">&quot;10&quot;</span> <span class="attr">Margin</span> = <span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span> = <span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">CornerRadius</span> = <span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span> = <span class="string">&quot;Content&quot;</span> <span class="attr">VerticalAlignment</span> = <span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span> = <span class="string">&quot;Center&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">Foreground</span> = <span class="string">&quot;White&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">GroupBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/GroupBox_Base.png" alt="GroupBoxBaseStyle"></p>
          </div>

<p>Here is another style for developers to choose</p>
<div class="note info no-icon">
            <p>Just add extended attributes</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">hc:TitleElement.TitlePlacement=<span class="string">&quot;Left&quot;</span></span><br></pre></td></tr></table></figure>Example:<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">GroupBox</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span>  <span class="attr">hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GroupBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/GroupBox_Base_left.png" alt="GroupBox_Base_left"></p>
          </div>

<h1 id="GroupBoxTab-GroupBoxTabBaseStyle-GroupBoxBaseStyle"><a href="#GroupBoxTab-GroupBoxTabBaseStyle-GroupBoxBaseStyle" class="headerlink" title="GroupBoxTab : GroupBoxTabBaseStyle : GroupBoxBaseStyle"></a>GroupBoxTab : GroupBoxTabBaseStyle : GroupBoxBaseStyle</h1><p>Another style of GroupBox is GroupBoxTabBaseStyle which is not recommended to be used directly, and should always be used by other styles as BasedOn.</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">GroupBox</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource GroupBoxTab&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GroupBox</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>You can also use extended attributes  <figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">hc:TitleElement.TitlePlacement=<span class="string">&quot;Left&quot;</span> </span><br></pre></td></tr></table></figure></li></ul><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/GroupBox_Tab.png" alt="GroupBox_Tab"> <img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/GroupBox_Tab_left.png" alt="GroupBox_Tab_left"></p>
          </div>

<h1 id="GroupBoxOriginal-GroupBoxOriginalBaseStyle-GroupBoxBaseStyle"><a href="#GroupBoxOriginal-GroupBoxOriginalBaseStyle-GroupBoxBaseStyle" class="headerlink" title="GroupBoxOriginal : GroupBoxOriginalBaseStyle : GroupBoxBaseStyle"></a>GroupBoxOriginal : GroupBoxOriginalBaseStyle : GroupBoxBaseStyle</h1><p>Another style of GroupBox is GroupBoxOriginalBaseStyle which is not recommended to be used directly, it should always be used by other styles in the way of BasedOn.</p>
<div class="note info no-icon">
            <p>example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">GroupBox</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource GroupBoxOriginal&#125;&quot;</span> <span class="attr">HorizontalContentAlignment</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBox</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GroupBox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GroupBox</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;2&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Bottom&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">hc:TitleElement.TitleWidth</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource GroupBoxOriginal&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">HorizontalContentAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">DataContext</span>=<span class="string">&quot;&#123;Binding ComboBoxDemo,Source=&#123;StaticResource Locator&#125;&#125;&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GroupBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/GroupBox_Origin.png" alt="GroupBox_Origin"> <img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/GroupBox_Origin_left.png" alt="GroupBox_Origin_left"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Image</title>
    <url>/handycontrol/native_controls/image/index.html</url>
    <content><![CDATA[<p>In <code>HandyControl</code>, corresponding to the native<code> Image</code> control, only a default control style is provided, and no special style is provided. For personalized customization, users need to customize it themselves</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Background</span>=<span class="string">&quot;LightGray&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;Resources/Images/Image_basestyle.png&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,10&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Image</span> <span class="attr">Source</span>=<span class="string">&quot;Resources/Images/Image_basestyle.png&quot;</span> <span class="attr">RenderOptions.BitmapScalingMode</span>=<span class="string">&quot;HighQuality&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;Uniform&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/image.baseStyle.png" alt="image.baseStyle"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Lable</title>
    <url>/handycontrol/native_controls/label/index.html</url>
    <content><![CDATA[<h1 id="LabelBaseStyle"><a href="#LabelBaseStyle" class="headerlink" title="LabelBaseStyle"></a>LabelBaseStyle</h1><p>The default style of the Label. which is not recommended. It should always be used by other styles based on On.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Label</span> <span class="attr">Content</span>=<span class="string">&quot;Label default style&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Label.BaseStyle.png" alt="Label.BaseStyle"></p>
          </div>

<h1 id="LabelPrimary-LabelBaseStyle"><a href="#LabelPrimary-LabelBaseStyle" class="headerlink" title="LabelPrimary : LabelBaseStyle"></a>LabelPrimary : LabelBaseStyle</h1><p>Primary style:</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Label</span> <span class="attr">Content</span>=<span class="string">&quot;LabelPrimary style&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LabelPrimary&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Label.PrimaryStyle.png" alt="Label.PrimaryStyle"></p>
          </div>

<h1 id="LabelSuccess-LabelBaseStyle"><a href="#LabelSuccess-LabelBaseStyle" class="headerlink" title="LabelSuccess : LabelBaseStyle"></a>LabelSuccess : LabelBaseStyle</h1><p>Success type style</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Label</span> <span class="attr">Content</span>=<span class="string">&quot;LabelSuccess style&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LabelSuccess&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Label.SuccessStyle.png" alt="Label.SuccessStyle"></p>
          </div>

<h1 id="LabelInfo-LabelBaseStyle"><a href="#LabelInfo-LabelBaseStyle" class="headerlink" title="LabelInfo : LabelBaseStyle"></a>LabelInfo : LabelBaseStyle</h1><p>Information type style</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Label</span> <span class="attr">Content</span>=<span class="string">&quot;LabelInfo style&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LabelInfo&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Label.InfoStyle.png" alt="Label.InfoStyle"></p>
          </div>

<h1 id="LabelWarning-LabelBaseStyle"><a href="#LabelWarning-LabelBaseStyle" class="headerlink" title="LabelWarning : LabelBaseStyle"></a>LabelWarning : LabelBaseStyle</h1><p>Warning type style </p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Label</span> <span class="attr">Content</span>=<span class="string">&quot;LabelWarning style&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LabelWarning&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Label.WarningStyle.png" alt="Label.WarningStyle"></p>
          </div>

<h1 id="LabelDanger-LabelBaseStyle"><a href="#LabelDanger-LabelBaseStyle" class="headerlink" title="LabelDanger : LabelBaseStyle"></a>LabelDanger : LabelBaseStyle</h1><p>Danger type style </p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Label</span> <span class="attr">Content</span>=<span class="string">&quot;LabelDanger style&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource LabelDanger&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Label.DangerStyle.png" alt="Label.DangerStyle"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>ElementGroup</title>
    <url>/handycontrol/extend_controls/elementGroup/index.html</url>
    <content><![CDATA[<p>Easily extend controls by adding textbox, buttons… on either side.</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ElementGroup</span> : <span class="title">SimpleStackPanel</span></span><br></pre></td></tr></table></figure>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ElementGroup</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource BorderRegion&#125;&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;6,0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Path</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;Uniform&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">MinWidth</span>=<span class="string">&quot;200&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Button&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Content</span>=<span class="string">&quot;ToggleButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ElementGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ElementGroup</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBox</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;auto&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Button&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;auto&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;ToggleButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ElementGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/ElementGroup.png" alt="ElementGroup"></p>
]]></content>
  </entry>
  <entry>
    <title>ListView</title>
    <url>/handycontrol/native_controls/listView/index.html</url>
    <content><![CDATA[<p><code>HandyControl</code> only provides a default <code>ListView</code> style, which can be customized according to personal needs.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListView</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding DataList&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView.View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">GridView</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">GridViewColumn</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;title1&quot;</span> <span class="attr">DisplayMemberBinding</span>=<span class="string">&quot;&#123;Binding Index&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">GridViewColumn</span> <span class="attr">Width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;title2&quot;</span> <span class="attr">DisplayMemberBinding</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">GridViewColumn</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;title3&quot;</span> <span class="attr">DisplayMemberBinding</span>=<span class="string">&quot;&#123;Binding Remark&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">GridView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListView.View</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ListView.DefaultStyle.png" alt="ListView.DefaultStyle"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>Menu</title>
    <url>/handycontrol/native_controls/menu/index.html</url>
    <content><![CDATA[<h1 id="Attached-Property"><a href="#Attached-Property" class="headerlink" title="Attached Property"></a>Attached Property</h1><table>
<thead>
<tr>
<th>Properties</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>AnimationMode</td>
<td>Change Transition Animation  <code>Only Custom Version</code></td>
</tr>
<tr>
<td>IsEnabledAnimation</td>
<td>Enable or Disable Transition Animation  <code>Only Custom Version</code></td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">     <span class="tag">&lt;<span class="name">Menu</span> <span class="attr">hc:MenuAttach.AnimationMode</span>=<span class="string">&quot;Fade&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--OR--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Menu</span> <span class="attr">hc:MenuAttach.IsEnabledAnimation</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="MenuBaseStyle"><a href="#MenuBaseStyle" class="headerlink" title="MenuBaseStyle"></a>MenuBaseStyle</h1><p>The default style of the menu is not recommended. It should always be used by other styles in the manner of BasedOn.</p>
<div class="note info no-icon">
            <p>example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">Menu</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Menus&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Menu.ItemTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">HierarchicalDataTemplate</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Children&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">HierarchicalDataTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Menu.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Menu.BaseStyle.png" alt="Menu.BaseStyle"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>NavigationWindow</title>
    <url>/handycontrol/native_controls/navigationWindow/index.html</url>
    <content><![CDATA[<p>Implicit styles are not automatically applied to windows in <code>wpf</code>, and related methods are provided in <code>hc</code> to solve this problem.</p>
<div class="note info">
            <p>The default style of the navigationWindow can be set via </p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetNavigationWindowDefaultStyle();</span><br></pre></td></tr></table></figure>
          </div>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">NavigationWindow</span> <span class="attr">x:Class</span>=<span class="string">&quot;HandyControlDemo.Window.NavigationWindow&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">WindowStartupLocation</span>=<span class="string">&quot;CenterScreen&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Title</span>=<span class="string">&quot;Title&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">Height</span>=<span class="string">&quot;450&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">Width</span>=<span class="string">&quot;800&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">NavigationWindow</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> List&lt;Page&gt; _pageList;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">NavigationWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">            AddHandler(ButtonBase.ClickEvent, <span class="keyword">new</span> RoutedEventHandler(Button_Click));</span><br><span class="line"></span><br><span class="line">            _pageList = <span class="keyword">new</span> List&lt;Page&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                _pageList.Add(CreatePage(i));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Navigate(_pageList[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Page <span class="title">CreatePage</span>(<span class="params"><span class="built_in">int</span> index</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> indexStr = index.ToString();</span><br><span class="line">            <span class="keyword">var</span> button = <span class="keyword">new</span> Button</span><br><span class="line">            &#123;</span><br><span class="line">                HorizontalAlignment = HorizontalAlignment.Center,</span><br><span class="line">                VerticalAlignment = VerticalAlignment.Center,</span><br><span class="line">                Content = indexStr,</span><br><span class="line">                Width = <span class="number">320</span>,</span><br><span class="line">                Tag = indexStr</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Page</span><br><span class="line">            &#123;</span><br><span class="line">                Title = indexStr,</span><br><span class="line">                Content = button</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.OriginalSource <span class="keyword">is</span> Button button &amp;&amp; button.Tag <span class="keyword">is</span> <span class="built_in">string</span> tag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> index = tag.Value&lt;<span class="built_in">int</span>&gt;() + <span class="number">1</span>;</span><br><span class="line">                Navigate(index &gt;= _pageList.Count ? _pageList[<span class="number">0</span>] : _pageList[index]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>PasswordBox</title>
    <url>/handycontrol/native_controls/passwordBox/index.html</url>
    <content><![CDATA[<h1 id="PasswordBoxBaseStyle"><a href="#PasswordBoxBaseStyle" class="headerlink" title="PasswordBoxBaseStyle"></a>PasswordBoxBaseStyle</h1><p>The default style of the native passwordbox is not recommended. It should always be used by other styles based on On.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PasswordBox</span> <span class="attr">PasswordChar</span>=<span class="string">&quot;*&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;120&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/PasswordBox.BaseStyle.png" alt="PasswordBox.BaseStyle"></p>
          </div>

<h1 id="PasswordBoxExtendBaseStyle-PasswordBoxBaseStyle"><a href="#PasswordBoxExtendBaseStyle-PasswordBoxBaseStyle" class="headerlink" title="PasswordBoxExtendBaseStyle : PasswordBoxBaseStyle"></a>PasswordBoxExtendBaseStyle : PasswordBoxBaseStyle</h1><p>The native passwordbox extends the default style. It is not recommended to use it directly, and it should always be used by other styles as BasedOn.</p>
<h1 id="PasswordBoxExtend-PasswordBoxExtendBaseStyle"><a href="#PasswordBoxExtend-PasswordBoxExtendBaseStyle" class="headerlink" title="PasswordBoxExtend : PasswordBoxExtendBaseStyle"></a>PasswordBoxExtend : PasswordBoxExtendBaseStyle</h1><p>Compared to the default style of the native passwordbox, it can implement the functions of title and watermark with the help of additional attributes.</p>
<div class="note info no-icon">
            <p>example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--In order to display the watermark in the normal password input text box, you need to set PasswordBoxAttach.PasswordLength=&quot;0&quot;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PasswordBox</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource PasswordBoxExtend&#125;&quot;</span> <span class="attr">PasswordChar</span>=<span class="string">&quot;*&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">hc:PasswordBoxAttach.PasswordLength</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">hc:InfoElement.Placeholder</span>=<span class="string">&quot;Please enter the password&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">Width</span>=<span class="string">&quot;120&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PasswordBox</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource PasswordBoxExtend&#125;&quot;</span> <span class="attr">PasswordChar</span>=<span class="string">&quot;*&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">hc:TitleElement.Title</span>=<span class="string">&quot;user password:&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">hc:TitleElement.TitlePlacement</span>=<span class="string">&quot;Top&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">Width</span>=<span class="string">&quot;120&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/PasswordBox.ExtendStyle.png" alt="PasswordBox.ExtendStyle"></p>
          </div>]]></content>
  </entry>
  <entry>
    <title>ProgressBar</title>
    <url>/handycontrol/native_controls/progressBar/index.html</url>
    <content><![CDATA[<h1 id="ProgressBarBaseStyle"><a href="#ProgressBarBaseStyle" class="headerlink" title="ProgressBarBaseStyle"></a>ProgressBarBaseStyle</h1><p>The default style of the progressbar. It is not recommended to use it directly, and it should always be used by other styles as BasedOn.</p>
<h1 id="Other-styles"><a href="#Other-styles" class="headerlink" title="Other styles"></a>Other styles</h1><p>Other styles and effects included in <code>HandyControl</code>, including the following styles:</p>
<table>
<thead>
<tr>
<th>Style Key</th>
<th>Uses</th>
<th>Parent Style</th>
</tr>
</thead>
<tbody><tr>
<td>ProgressBarSuccess</td>
<td>ProgressBar</td>
<td>ProgressBarBaseStyle</td>
</tr>
<tr>
<td>ProgressBarInfo</td>
<td>Prompt Color ProgressBar</td>
<td>ProgressBarBaseStyle</td>
</tr>
<tr>
<td>ProgressBarWarning</td>
<td>Warning color progressbar</td>
<td>ProgressBarBaseStyle</td>
</tr>
<tr>
<td>ProgressBarDanger</td>
<td>Dangerous ProgressBar</td>
<td>ProgressBarBaseStyle</td>
</tr>
<tr>
<td>ProgressBarStripeBaseStyle</td>
<td>Stripe progressbar default style (not recommended for direct use)</td>
<td>-</td>
</tr>
<tr>
<td>ProgressBarPrimaryStripe</td>
<td>Stripe ProgressBar</td>
<td>ProgressBarStripeBaseStyle</td>
</tr>
<tr>
<td>ProgressBarSuccessStripe</td>
<td>ProgressBar Stripe</td>
<td>ProgressBarStripeBaseStyle</td>
</tr>
<tr>
<td>ProgressBarInfoStripe</td>
<td>Information color stripe progressbar</td>
<td>ProgressBarStripeBaseStyle</td>
</tr>
<tr>
<td>ProgressBarWarningStripe</td>
<td>ProgressBar with warning stripes</td>
<td>ProgressBarStripeBaseStyle</td>
</tr>
<tr>
<td>ProgressBarDangerStripe</td>
<td>Dangerous Stripe ProgressBar</td>
<td>ProgressBarStripeBaseStyle</td>
</tr>
<tr>
<td>ProgressBarFlat</td>
<td>Flat style</td>
<td>-</td>
</tr>
</tbody></table>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">WrapPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span> <span class="attr">ItemWidth</span>=<span class="string">&quot;600&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarSuccess&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;40&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarInfo&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;60&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarWarning&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;80&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarDanger&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">IsIndeterminate</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,2,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarPrimary&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarSuccess&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarInfo&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarWarning&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarDanger&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarPrimaryStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarSuccessStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;60&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarInfoStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarWarningStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarDangerStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,0,10&quot;</span> <span class="attr">IsIndeterminate</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarFlat&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,8,0,10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">IsIndeterminate</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,2,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarPrimaryStripe&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarSuccessStripe&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarInfoStripe&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarWarningStripe&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarDangerStripe&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;0,12,0,3&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;ProgressBarFlat&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarSuccess&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;40&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarInfo&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;60&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarWarning&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarDanger&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">IsIndeterminate</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>/&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarPrimaryStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;120&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarSuccessStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;60&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarInfoStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;50&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarWarningStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;180&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarDangerStripe&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">IsIndeterminate</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ProgressBarFlat&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,0,10,0&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;110&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;200&quot;</span> <span class="attr">IsIndeterminate</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">WrapPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>if you want to show/hide progress text in progress bar you can use <code>hc:VisualElement.Text</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">Value</span>=<span class="string">&quot;40&quot;</span> <span class="attr">hc:VisualElement</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
          </div>

<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ProgressBar.Styles.png" alt="ProgressBar.Styles"></p>
<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>For color, rounded corners or other custom requirements, please refer to <a href="https://github.com/HandyOrg/HandyControl/blob/master/src/Shared/HandyControl_Shared/Themes/Styles/ProgressBar.xaml">ProgressBar Style Source</a>Define it yourself.</p>
]]></content>
  </entry>
  <entry>
    <title>RadioButton</title>
    <url>/handycontrol/native_controls/radioButton/index.html</url>
    <content><![CDATA[<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody><tr>
<td>RadioButtonBaseStyle</td>
</tr>
<tr>
<td>RadioButtonIcon</td>
</tr>
<tr>
<td>RadioGroupItemDefault</td>
</tr>
<tr>
<td>RadioGroupItemHorizontalFirst</td>
</tr>
<tr>
<td>RadioGroupItemHorizontalLast</td>
</tr>
<tr>
<td>RadioGroupItemSingle</td>
</tr>
<tr>
<td>RadioGroupItemVerticalFirst</td>
</tr>
<tr>
<td>RadioGroupItemVerticalLast</td>
</tr>
<tr>
<td>RadioButtonSameAsButtonBaseStyle</td>
</tr>
<tr>
<td>RadioButtonSameAsButtonPrimary</td>
</tr>
<tr>
<td>RadioButtonSameAsButtonSuccess</td>
</tr>
<tr>
<td>RadioButtonSameAsButtonInfo</td>
</tr>
<tr>
<td>RadioButtonSameAsButtonWarning</td>
</tr>
<tr>
<td>RadioButtonSameAsButtonDanger</td>
</tr>
</tbody></table>
<h1 id="RadioButtonBaseStyle"><a href="#RadioButtonBaseStyle" class="headerlink" title="RadioButtonBaseStyle"></a>RadioButtonBaseStyle</h1><p>The default style of the radiobutton is not recommended. It should always be used by other styles as BasedOn.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Content</span>=<span class="string">&quot;Default style&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Not editable&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Default style&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,16,0,0&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Not editable&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/RadioButton.DefaultStyle.png" alt="RadioButton.DefaultStyle"></p>
<h1 id="RadioButtonIcon-RadioButtonBaseStyle"><a href="#RadioButtonIcon-RadioButtonBaseStyle" class="headerlink" title="RadioButtonIcon : RadioButtonBaseStyle"></a>RadioButtonIcon : RadioButtonBaseStyle</h1><p>With icon style, can display only icons or graphics</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Margin</span>=<span class="string">&quot;22,0,0,0&quot;</span> <span class="attr">Rows</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource CalendarGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RadioButtonIcon&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButtonIcon&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SecondaryRegionBrush&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RadioButtonIcon&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButtonIcon&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource CalendarGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RadioButtonIcon&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButtonIcon&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RadioButtonIcon&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;RadioButtonIcon&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/RadioButton.IconStyle.png" alt="RadioButton.IconStyle"></p>
]]></content>
  </entry>
  <entry>
    <title>RepeatButton</title>
    <url>/handycontrol/native_controls/repeatButton/index.html</url>
    <content><![CDATA[<h1 id="RepeatButtonBaseStyle-ButtonBaseBaseStyle"><a href="#RepeatButtonBaseStyle-ButtonBaseBaseStyle" class="headerlink" title="RepeatButtonBaseStyle : ButtonBaseBaseStyle"></a>RepeatButtonBaseStyle : ButtonBaseBaseStyle</h1><p>The default style of the repeatButton is not recommended for direct use and should always be used by other styles in the BasedOn mode.</p>
<div class="note info">
            <p>All repeatButtons that inherit this style can use the additional properties defined in <code>IconElement</code> to control the properties of the geometry in the repeatButton.</p>
          </div>

<div class="note info">
            <p>All repeatButtons that inherit this style can use the <code>BorderElement.CornerRadius</code> attached property to control the fillet size of the repeatButton.</p>
          </div>

<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonBaseStyle_1.png" alt="ButtonBaseStyle"></p>
          </div>

<h1 id="RepeatButtonPrimary-RepeatButtonBaseStyle"><a href="#RepeatButtonPrimary-RepeatButtonBaseStyle" class="headerlink" title="RepeatButtonPrimary : RepeatButtonBaseStyle"></a>RepeatButtonPrimary : RepeatButtonBaseStyle</h1><p>Main RepeatButton</p>
<div class="note info no-icon">
            <p>Example:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonPrimary&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonPrimary_1.png" alt="ButtonPrimary"></p>
          </div>

<h1 id="RepeatButtonSuccess-RepeatButtonBaseStyle"><a href="#RepeatButtonSuccess-RepeatButtonBaseStyle" class="headerlink" title="RepeatButtonSuccess : RepeatButtonBaseStyle"></a>RepeatButtonSuccess : RepeatButtonBaseStyle</h1><p>Success RepeatButton</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonSuccess&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonSuccess&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonSuccess&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonSuccess_1.png" alt="ButtonSuccess"></p>
          </div>

<h1 id="RepeatRepeatButtonInfo-RepeatButtonBaseStyle"><a href="#RepeatRepeatButtonInfo-RepeatButtonBaseStyle" class="headerlink" title="RepeatRepeatButtonInfo : RepeatButtonBaseStyle"></a>RepeatRepeatButtonInfo : RepeatButtonBaseStyle</h1><p>Information RepeatButton</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonInfo&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonInfo&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonInfo&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonInfo_1.png" alt="ButtonInfo"></p>
          </div>

<h1 id="RepeatButtonWarning-RepeatButtonBaseStyle"><a href="#RepeatButtonWarning-RepeatButtonBaseStyle" class="headerlink" title="RepeatButtonWarning : RepeatButtonBaseStyle"></a>RepeatButtonWarning : RepeatButtonBaseStyle</h1><p>Warning RepeatButton</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonWarning&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonWarning&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonWarning&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonWarning_1.png" alt="ButtonWarning"></p>
          </div>

<h1 id="RepeatButtonDanger-RepeatButtonBaseStyle"><a href="#RepeatButtonDanger-RepeatButtonBaseStyle" class="headerlink" title="RepeatButtonDanger : RepeatButtonBaseStyle"></a>RepeatButtonDanger : RepeatButtonBaseStyle</h1><p>Danger RepeatButton</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonDanger&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonDanger&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonDanger&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonDanger_1.png" alt="ButtonDanger"></p>
          </div>

<h1 id="RepeatButtonDefault-RepeatButtonBaseStyle"><a href="#RepeatButtonDefault-RepeatButtonBaseStyle" class="headerlink" title="RepeatButtonDefault : RepeatButtonBaseStyle"></a>RepeatButtonDefault : RepeatButtonBaseStyle</h1><p>Default RepeatButton</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonDefault&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonDefault&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonDefault&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource GithubGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
          </div>

<h1 id="RepeatButtonIcon-RepeatButtonBaseStyle"><a href="#RepeatButtonIcon-RepeatButtonBaseStyle" class="headerlink" title="RepeatButtonIcon : RepeatButtonBaseStyle"></a>RepeatButtonIcon : RepeatButtonBaseStyle</h1><p>This style is recommended if you only want to display the geometry RepeatButton.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonIcon&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource UpDownGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonIcon&#125;&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">hc:BorderElement.CornerRadius</span>=<span class="string">&quot;15&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource UpDownGeometry&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonIcon&#125;&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource UpDownGeometry&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonIcon_1.png" alt="ButtonIcon"></p>
          </div>

<h1 id="RepeatButtonCustom"><a href="#RepeatButtonCustom" class="headerlink" title="RepeatButtonCustom"></a>RepeatButtonCustom</h1><p>This style is recommended if you want to fully customize the content of the RepeatButton. The content in <code>RepeatButtonCustom</code> is entirely up to you. In addition, you can switch the background with additional properties in <code>BackgroundSwitchElement</code>:</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RepeatButton</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;10,0&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;White&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;This is a RepeatButton&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource RepeatButtonCustom&#125;&quot;</span> <span class="attr">hc:BackgroundSwitchElement.MouseHoverBackground</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">hc:BackgroundSwitchElement.MouseDownBackground</span>=<span class="string">&quot;PaleVioletRed&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ButtonCustom_1.gif" alt="ButtonCustom"></p>
          </div>

<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Style</th>
</tr>
</thead>
<tbody><tr>
<td>ButtonPrimary</td>
</tr>
<tr>
<td>RepeatButtonInfo</td>
</tr>
<tr>
<td>RepeatButtonDanger</td>
</tr>
<tr>
<td>RepeatButtonWarning</td>
</tr>
<tr>
<td>RepeatButtonDefault</td>
</tr>
<tr>
<td>RepeatButtonSuccess</td>
</tr>
<tr>
<td>RepeatButtonIcon</td>
</tr>
<tr>
<td>RepeatButtonIconCircular</td>
</tr>
<tr>
<td>RepeatButtonDashed</td>
</tr>
<tr>
<td>RepeatButtonDashedPrimary</td>
</tr>
<tr>
<td>RepeatButtonDashedSuccess</td>
</tr>
<tr>
<td>RepeatButtonDashedInfo</td>
</tr>
<tr>
<td>RepeatButtonDashedWarning</td>
</tr>
<tr>
<td>RepeatButtonDashedDanger</td>
</tr>
<tr>
<td>RepeatButtonCustom</td>
</tr>
<tr>
<td>RepeatButtonGroupItemDefault</td>
</tr>
<tr>
<td>RepeatButtonGroupItemHorizontalFirst</td>
</tr>
<tr>
<td>RepeatButtonGroupItemHorizontalLast</td>
</tr>
<tr>
<td>RepeatButtonGroupItemSingle</td>
</tr>
<tr>
<td>RepeatButtonGroupItemVerticalFirst</td>
</tr>
<tr>
<td>RepeatButtonGroupItemVerticalLast</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>ScrollViewer</title>
    <url>/handycontrol/native_controls/scrollViewer/index.html</url>
    <content><![CDATA[<h1 id="ScrollViewerNativeBaseStyle"><a href="#ScrollViewerNativeBaseStyle" class="headerlink" title="ScrollViewerNativeBaseStyle"></a>ScrollViewerNativeBaseStyle</h1><p>The default style of the native ScrollViewer is not recommended. It should always be used by other styles based on On.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrollViewer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Height</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content area&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ScrollViewer</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ScrollViewer.DefaultStyle.png" alt="ScrollViewer.DefaultStyle"></p>
<h1 id="ScrollViewerUpDown"><a href="#ScrollViewerUpDown" class="headerlink" title="ScrollViewerUpDown"></a>ScrollViewerUpDown</h1><p>ScrollViewer style showing up and down buttons</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrollViewer</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ScrollViewerUpDown&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Height</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content area&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;250&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content area&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;250&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content area&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;Content area&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ScrollViewer</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ScrollViewer.UpDownStyle.png" alt="ScrollViewer.UpDownStyle"></p>
]]></content>
  </entry>
  <entry>
    <title>RichTextBox</title>
    <url>/handycontrol/native_controls/richTextBox/index.html</url>
    <content><![CDATA[<h1 id="TextBoxBaseBaseStyle"><a href="#TextBoxBaseBaseStyle" class="headerlink" title="TextBoxBaseBaseStyle"></a>TextBoxBaseBaseStyle</h1><p>The default style is not recommended. It should always be used by other styles as BasedOn.</p>
<h1 id="RichTextBoxBaseStyle-TextBoxBaseBaseStyle"><a href="#RichTextBoxBaseStyle-TextBoxBaseBaseStyle" class="headerlink" title="RichTextBoxBaseStyle : TextBoxBaseBaseStyle"></a>RichTextBoxBaseStyle : TextBoxBaseBaseStyle</h1><p>The default style of the richtext box is not recommended. It should always be used by other styles as BasedOn.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RichTextBox</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>


<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/RichTextbox.DefaultStyle.png" alt="RichTextbox.DefaultStyle"></p>
]]></content>
  </entry>
  <entry>
    <title>Seperator</title>
    <url>/handycontrol/native_controls/seperator/index.html</url>
    <content><![CDATA[<h1 id="SeparatorBaseStyle"><a href="#SeparatorBaseStyle" class="headerlink" title="SeparatorBaseStyle"></a>SeparatorBaseStyle</h1><p>The default style is not recommended. It should always be used by other styles as BasedOn.</p>
]]></content>
  </entry>
  <entry>
    <title>StatusBar</title>
    <url>/handycontrol/native_controls/statusBar/index.html</url>
    <content><![CDATA[<h1 id="StatusBarBaseStyle"><a href="#StatusBarBaseStyle" class="headerlink" title="StatusBarBaseStyle"></a>StatusBarBaseStyle</h1><p>The default style of the statusbar is not recommended. It should always be used by other styles as BasedOn.</p>
]]></content>
  </entry>
  <entry>
    <title>Slider</title>
    <url>/handycontrol/native_controls/slider/index.html</url>
    <content><![CDATA[<h1 id="SliderBaseStyle"><a href="#SliderBaseStyle" class="headerlink" title="SliderBaseStyle"></a>SliderBaseStyle</h1><p>The default style of the slider is not recommended. It should always be used by other styles as BasedOn.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Slider</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;40&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/Slider.DefaultStyle.png" alt="Slider.DefaultStyle"></p>
<div class="note info">
            <p>you can use <code>TipElement</code> Attached Property</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Slider</span> <span class="attr">hc:TipElement.Visibility</span>=<span class="string">&quot;Visible&quot;</span> <span class="attr">hc:TipElement.Placement</span>=<span class="string">&quot;BottomRight&quot;</span> <span class="attr">IsSnapToTickEnabled</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">TickPlacement</span>=<span class="string">&quot;Both&quot;</span> <span class="attr">Orientation</span>=<span class="string">&quot;Vertical&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
          </div>]]></content>
  </entry>
  <entry>
    <title>TabControl</title>
    <url>/handycontrol/native_controls/tabControl/index.html</url>
    <content><![CDATA[<h1 id="TabControlBaseStyle"><a href="#TabControlBaseStyle" class="headerlink" title="TabControlBaseStyle"></a>TabControlBaseStyle</h1><p>The default style of the tabcontrol is not recommended. It should always be used by other styles as BasedOn.</p>
<p>Case:</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect::</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TabControl.DefaultStyle.png" alt="TabControl.DefaultStyle"></p>
<h1 id="TabControlInLine-TabControlBaseStyle"><a href="#TabControlInLine-TabControlBaseStyle" class="headerlink" title="TabControlInLine : TabControlBaseStyle"></a>TabControlInLine : TabControlBaseStyle</h1><p>Single line fill tab style</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TabControlInLine&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect::</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TabControl.InLineStyle.png" alt="TabControl.InLineStyle"></p>
<h1 id="TabControlCapsule"><a href="#TabControlCapsule" class="headerlink" title="TabControlCapsule"></a>TabControlCapsule</h1><p>Capsule tab style</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TabControlCapsule&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect::</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TabControl.CapsuleStyle.png" alt="TabControl.CapsuleStyle"></p>
<h1 id="TabControlCapsuleSolid-TabControlCapsule"><a href="#TabControlCapsuleSolid-TabControlCapsule" class="headerlink" title="TabControlCapsuleSolid : TabControlCapsule"></a>TabControlCapsuleSolid : TabControlCapsule</h1><p>Capsule (solid) tab style</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TabControlCapsuleSolid&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Tab 3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect::</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TabControl.CapsuleSolidStyle.png" alt="TabControl.CapsuleSolidStyle"></p>
<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>You can use the property <code>TabStripPlacement</code> to set the position of the header title, the effect is as follows:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">UniformGrid</span> <span class="attr">Rows</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Columns</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">TabStripPlacement</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;2&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource InfoBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TabControlInLine&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource InfoBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">IsSelected</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">TabStripPlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TabControlCapsule&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">IsSelected</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource InfoBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabControl</span> <span class="attr">TabStripPlacement</span>=<span class="string">&quot;Bottom&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;16&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TabControlCapsuleSolid&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;2&quot;</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource SuccessBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource InfoBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">IsSelected</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Title&quot;</span> <span class="attr">HeaderStringFormat</span>=<span class="string">&quot;&#123;&#125;&#123;0&#125;5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;Text&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">TabItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">UniformGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TabControl.TabStripPlacement.png" alt="TabControl.TabStripPlacement"></p>
<h1 id="TabItemTransparentStyle-Only-Custom-Version"><a href="#TabItemTransparentStyle-Only-Custom-Version" class="headerlink" title="TabItemTransparentStyle Only Custom Version"></a>TabItemTransparentStyle <code>Only Custom Version</code></h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TabControl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TabItem</span> <span class="attr">Header</span>=<span class="string">&quot;Test&quot;</span> <span class="attr">Style</span>=<span class="string">&#123;StaticResource</span> <span class="attr">TabItemTransparentStyle</span>&#125;&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TabControl</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>TextBlock</title>
    <url>/handycontrol/native_controls/textBlock/index.html</url>
    <content><![CDATA[<h1 id="TextBlockBaseStyle"><a href="#TextBlockBaseStyle" class="headerlink" title="TextBlockBaseStyle"></a>TextBlockBaseStyle</h1><p>The default style of the textblock is not recommended. It should always be used by other styles based on On.</p>
<h1 id="TextBlockBoldBaseStyle"><a href="#TextBlockBoldBaseStyle" class="headerlink" title="TextBlockBoldBaseStyle"></a>TextBlockBoldBaseStyle</h1><p>The default style of bold textblocks is not recommended. It should always be used by other styles as BasedOn.</p>
<h1 id="Case"><a href="#Case" class="headerlink" title="Case"></a>Case</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockLargeBold&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLargeBold&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockLarge&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockLarge&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockHeaderBold&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitleBold&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockHeader&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockSubHeaderBold&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockSubTitleBold&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockSubHeader&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockSubTitle&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultBold&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultBold&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefault&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefault&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultAccent&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultAccent&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultSecLight&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultSecLight&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultThiLight&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultThiLight&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultPrimary&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultPrimary&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultDanger&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultDanger&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultWarning&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultWarning&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultInfo&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultInfo&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;TextBlockDefaultSuccess&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBlockDefaultSuccess&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h1><table>
<thead>
<tr>
<th>Available styles</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>TextBlockLargeBold</td>
<td>TextBlockLarge</td>
<td>TextBlockDefaultThiLight</td>
</tr>
<tr>
<td>TextBlockTitleBold</td>
<td>TextBlockTitle</td>
<td>TextBlockDefaultPrimary</td>
</tr>
<tr>
<td>TextBlockSubTitleBold</td>
<td>TextBlockDefaultBold</td>
<td>TextBlockDefaultDanger</td>
</tr>
<tr>
<td>TextBlockSubTitle</td>
<td>TextBlockDefault</td>
<td>TextBlockDefaultWarning</td>
</tr>
<tr>
<td>TextBlockDefaultAccent</td>
<td>TextBlockDefaultSecLight</td>
<td>TextBlockDefaultInfo</td>
</tr>
<tr>
<td>TextBlockDefaultSuccess</td>
<td>TextBlockDefaultSecLight</td>
<td></td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Resources/TextBlock.png" alt="TextBlockStyle"></p>
]]></content>
  </entry>
  <entry>
    <title>TextBox</title>
    <url>/handycontrol/native_controls/textBox/index.html</url>
    <content><![CDATA[<h1 id="TextBoxBaseStyle"><a href="#TextBoxBaseStyle" class="headerlink" title="TextBoxBaseStyle"></a>TextBoxBaseStyle</h1><p>The default style of the native textbox is not recommended. It should always be used by other styles as BasedOn.</p>
<p>-Default style</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TextBoxBaseStyle.png" alt="TextBoxBaseStyle"></p>
<h1 id="TextBoxExtendBaseStyle-TextBoxBaseStyle"><a href="#TextBoxExtendBaseStyle-TextBoxBaseStyle" class="headerlink" title="TextBoxExtendBaseStyle : TextBoxBaseStyle"></a>TextBoxExtendBaseStyle : TextBoxBaseStyle</h1><p>The native textbox extends the default style. It is not recommended to use it directly. It should always be used by other styles based on On.</p>
<h1 id="TextBoxExtend-TextBoxExtendBaseStyle"><a href="#TextBoxExtend-TextBoxExtendBaseStyle" class="headerlink" title="TextBoxExtend : TextBoxExtendBaseStyle"></a>TextBoxExtend : TextBoxExtendBaseStyle</h1><p>Compared with the default style of the native textbox, it can achieve the functions of title and watermark with the help of additional attributes.</p>
<ul>
<li><p>Title on</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TextBoxExtend_1.png" alt="TextBoxExtend_1"></p>
</li>
<li><p>Title on left</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource TextBoxExtend&#125;&quot;</span> <span class="attr">hc:InfoElement.TitlePlacement</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">hc:InfoElement.Title</span>=<span class="string">&quot;This is the title&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TextBoxExtend_2.png" alt="TextBoxExtend_2"></p>
</li>
</ul>
<div class="note warning">
            <p>When the title is on the left, in order to align the left sides of multiple input boxes, the title width needs to be set. The title width does not need to be set one by one, and can be set uniformly on the external container.</p>
          </div>

<ul>
<li><p>Title on top with watermark<br><a href="https://ghost1372.github.io/handycontrol/native_controls/comboBox/">See Combobox</a></p>
</li>
<li><p>Title is above, with watermark, and is required<br><a href="https://ghost1372.github.io/handycontrol/native_controls/comboBox/">See Combobox</a></p>
</li>
<li><p>The title is on the top, with a watermark, and it is required, and the required prompt is customized<br><a href="https://ghost1372.github.io/handycontrol/native_controls/comboBox/">See Combobox</a></p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>ToggleButton</title>
    <url>/handycontrol/native_controls/toggleButton/index.html</url>
    <content><![CDATA[<h1 id="ToggleButtonBaseStyle-ButtonBaseBaseStyle"><a href="#ToggleButtonBaseStyle-ButtonBaseBaseStyle" class="headerlink" title="ToggleButtonBaseStyle : ButtonBaseBaseStyle"></a>ToggleButtonBaseStyle : ButtonBaseBaseStyle</h1><p>The default style of the togglebutton is not recommended. It should always be used by other styles in the BasedOn mode.</p>
<div class="note info">
            <p>All buttons inheriting this style can use the additional attributes defined in <code>IconElement</code> to control the attributes of the geometry in the button.</p>
          </div>

<div class="note info">
            <p>All buttons inheriting this style can use the <code>BorderElement.CornerRadius</code> additional property to control the rounded corner size of the button.</p>
          </div>

<h2 id="Related-styles"><a href="#Related-styles" class="headerlink" title="Related styles"></a>Related styles</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Inherited from</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ToggleButtonPrimary</td>
<td>ToggleButtonBaseStyle</td>
<td>Primary</td>
</tr>
<tr>
<td>ToggleButtonSuccess</td>
<td>ToggleButtonBaseStyle</td>
<td>Success</td>
</tr>
<tr>
<td>ToggleButtonInfo</td>
<td>ToggleButtonBaseStyle</td>
<td>Information</td>
</tr>
<tr>
<td>ToggleButtonWarning</td>
<td>ToggleButtonBaseStyle</td>
<td>Warning</td>
</tr>
<tr>
<td>ToggleButtonDanger</td>
<td>ToggleButtonBaseStyle</td>
<td>Danger</td>
</tr>
<tr>
<td>ToggleButtonDefault</td>
<td>ToggleButtonBaseStyle</td>
<td>Default</td>
</tr>
</tbody></table>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Default&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Primary&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonPrimary&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Success&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonSuccess&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Info&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonInfo&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Warning&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonWarning&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">MinWidth</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Danger&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonDanger&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ToggleButtonBaseStyle.png" alt="ToggleButtonBaseStyle"></p>
<h1 id="ToggleButtonIconBaseStyle-BaseStyle"><a href="#ToggleButtonIconBaseStyle-BaseStyle" class="headerlink" title="ToggleButtonIconBaseStyle : BaseStyle"></a>ToggleButtonIconBaseStyle : BaseStyle</h1><p>The togglebutton that only displays icons is not recommended for direct use, and should always be used by other styles as BasedOn.</p>
<div class="note info">
            <p>All buttons inheriting this style can use the additional attributes defined in <code>IconElement</code> to control the attributes of the geometry in the button.</p>
          </div>

<div class="note info">
            <p>All buttons inheriting this style can use the <code>BorderElement.CornerRadius</code> additional property to control the rounded corner size of the button.</p>
          </div>

<h2 id="Related-styles-1"><a href="#Related-styles-1" class="headerlink" title="Related styles"></a>Related styles</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Inherited from</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>ToggleButtonIcon</td>
<td>ToggleButtonIconBaseStyle</td>
<td>Default</td>
</tr>
<tr>
<td>ToggleButtonIconPrimary</td>
<td>ToggleButtonIconBaseStyle</td>
<td>Primary</td>
</tr>
<tr>
<td>ToggleButtonIconSuccess</td>
<td>ToggleButtonIconBaseStyle</td>
<td>Success</td>
</tr>
<tr>
<td>ToggleButtonIconInfo</td>
<td>ToggleButtonIconBaseStyle</td>
<td>Information</td>
</tr>
<tr>
<td>ToggleButtonIconWarning</td>
<td>ToggleButtonIconBaseStyle</td>
<td>Warning</td>
</tr>
<tr>
<td>ToggleButtonIconDanger</td>
<td>ToggleButtonIconBaseStyle</td>
<td>Danger</td>
</tr>
<tr>
<td>ToggleButtonIconTransparent</td>
<td>ToggleButtonIconBaseStyle</td>
<td>Transparent</td>
</tr>
</tbody></table>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">&quot;Horizontal&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Padding</span>=<span class="string">&quot;6&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonIcon&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;6,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonIconPrimary&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;6,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonIconSuccess&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;6,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonIconInfo&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;6,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonIconWarning&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;6,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonIconDanger&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;6,0,0,0&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ClockGeometry&#125;&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonIconTransparent&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ToggleButtonIconBaseStyle.png" alt="ToggleButtonIconBaseStyle"></p>
<h1 id="ToggleButtonSwitchBaseStyle-BaseStyle"><a href="#ToggleButtonSwitchBaseStyle-BaseStyle" class="headerlink" title="ToggleButtonSwitchBaseStyle : BaseStyle"></a>ToggleButtonSwitchBaseStyle : BaseStyle</h1><p>Switch-type switching buttons are not recommended for direct use, and should always be used by other styles as BasedOn.</p>
<h2 id="Related-styles-2"><a href="#Related-styles-2" class="headerlink" title="Related styles"></a>Related styles</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Inherited from</th>
</tr>
</thead>
<tbody><tr>
<td>ToggleButtonSwitch</td>
<td>ToggleButtonSwitchBaseStyle</td>
</tr>
</tbody></table>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonSwitch&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonSwitch&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ToggleButtonSwitchBaseStyle.png" alt="ToggleButtonSwitchBaseStyle"></p>
<h1 id="ToggleButtonFlip-BaseStyle"><a href="#ToggleButtonFlip-BaseStyle" class="headerlink" title="ToggleButtonFlip : BaseStyle"></a>ToggleButtonFlip : BaseStyle</h1><p>Flip-style togglebutton.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonFlip&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Off&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;On&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ToggleButton</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;0&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonFlip&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;Off&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource DangerBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;On&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource TextIconBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ToggleButton</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ToggleButtonFlip.png" alt="ToggleButtonFlip"></p>
<h1 id="ToggleButtonCustom-BaseStyle"><a href="#ToggleButtonCustom-BaseStyle" class="headerlink" title="ToggleButtonCustom : BaseStyle"></a>ToggleButtonCustom : BaseStyle</h1><p>This style is recommended if you want to completely customize the content of the button. The content of <code>ToggleButtonCustom</code> is entirely up to you.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">IsChecked</span>=<span class="string">&quot;True&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonCustom&#125;&quot;</span> <span class="attr">hc:StatusSwitchElement.HideUncheckedElement</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ToggleButton</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Margin</span>=<span class="string">&quot;0,6,0,0&quot;</span> <span class="attr">IsChecked</span>=<span class="string">&quot;False&quot;</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ToggleButtonCustom&#125;&quot;</span> <span class="attr">hc:StatusSwitchElement.HideUncheckedElement</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource PrimaryBrush&#125;&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">hc:StatusSwitchElement.CheckedElement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Ellipse</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ToggleButton</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ToggleButtonCustom.png" alt="ToggleButtonCustom"></p>
]]></content>
  </entry>
  <entry>
    <title>Toolbar</title>
    <url>/handycontrol/native_controls/toolBar/index.html</url>
    <content><![CDATA[<h1 id="ToolBarBaseStyle"><a href="#ToolBarBaseStyle" class="headerlink" title="ToolBarBaseStyle"></a>ToolBarBaseStyle</h1><p>The default style of the toolbar is not recommended. It should always be used by other styles based on the On.</p>
<p>Case:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ToolBar</span> <span class="attr">Padding</span>=<span class="string">&quot;10,6&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Demo&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">&quot;Demo&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ToggleButton</span> <span class="attr">Content</span>=<span class="string">&quot;Demo&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">&quot;Demo&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ToolBar</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ToolBarBaseStyle.png" alt="ToolBarBaseStyle"></p>
]]></content>
  </entry>
  <entry>
    <title>ToolTip</title>
    <url>/handycontrol/native_controls/toolTip/index.html</url>
    <content><![CDATA[<h1 id="ToolTipBaseStyle"><a href="#ToolTipBaseStyle" class="headerlink" title="ToolTipBaseStyle"></a>ToolTipBaseStyle</h1><p>The default style of the tooltip is not recommended. It should always be used by other styles in the BasicOn mode.</p>
]]></content>
  </entry>
  <entry>
    <title>TreeView</title>
    <url>/handycontrol/native_controls/treeView/index.html</url>
    <content><![CDATA[<h1 id="TreeViewBaseStyle-BaseStyle"><a href="#TreeViewBaseStyle-BaseStyle" class="headerlink" title="TreeViewBaseStyle : BaseStyle"></a>TreeViewBaseStyle : BaseStyle</h1><p>The default style of the treeview is not recommended. It should always be used by other styles in the BasicOn mode.</p>
<p>Case:</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TreeView</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;111&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;111&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;222&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;333&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TreeViewItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;222&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;111&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;222&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TreeViewItem</span> <span class="attr">Header</span>=<span class="string">&quot;333&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TreeViewItem</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TreeView</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>effect:</p>
<p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/TreeViewBaseStyle.png" alt="TreeViewBaseStyle"></p>
<h1 id="Related-styles"><a href="#Related-styles" class="headerlink" title="Related styles"></a>Related styles</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Inherited from</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>TreeViewItemBaseStyle</td>
<td>BaseStyle</td>
<td>Tree View Item Default Style</td>
</tr>
<tr>
<td>ExpandCollapseToggleStyle</td>
<td></td>
<td>Treeview Collapse Button Style</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Window</title>
    <url>/handycontrol/native_controls/window/index.html</url>
    <content><![CDATA[<p>Implicit styles are not automatically applied to windows in <code>wpf</code>, and related methods are provided in <code> hc</code> to solve this problem.</p>
<h1 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h1><p>The default style of the window can be set via </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetWindowDefaultStyle();</span><br></pre></td></tr></table></figure>
<h1 id="NavigationWindow"><a href="#NavigationWindow" class="headerlink" title="NavigationWindow"></a>NavigationWindow</h1><p>The default style of the navigationWindow can be set via </p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetNavigationWindowDefaultStyle();</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>ColorPresetResources</title>
    <url>/handycontrol/theme/colorPreset/index.html</url>
    <content><![CDATA[<p>You can customize all colors and brushes for dark and light themes.</p>
<div class="note info">
            <p>All classes related to Theme Located in the <strong>HandyControl.Themes</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Themes;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="Define-resources"><a href="#Define-resources" class="headerlink" title="Define resources"></a>Define resources</h1><p>Expand <code>ThemeResources</code> and use a <code>ThemeDictionaries</code> Then define <code>ColorPresetResources</code> in the <code>ThemeDictionaries</code> with the appropriate <code>key</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:ThemeResources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hc:ThemeResources.ThemeDictionaries</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">x:Key</span>=<span class="string">&quot;Light&quot;</span> <span class="attr">hc:ThemeDictionary.Key</span>=<span class="string">&quot;Light&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:ColorPresetResources</span> <span class="attr">TargetTheme</span>=<span class="string">&quot;Light&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">x:Key</span>=<span class="string">&quot;Dark&quot;</span> <span class="attr">hc:ThemeDictionary.Key</span>=<span class="string">&quot;Dark&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hc:ColorPresetResources</span> <span class="attr">TargetTheme</span>=<span class="string">&quot;Dark&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hc:ThemeResources.ThemeDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:ThemeResources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Create-Themes"><a href="#Create-Themes" class="headerlink" title="Create Themes"></a>Create Themes</h1><p>Now it’s time to create our own personalization theme.</p>
<ul>
<li>Create a folder and name it <code>Preset</code>.</li>
<li>Create 2 more folders in this folder called <code>Default</code> and <code>MyTheme</code></li>
</ul>
<div class="note info">
            <p>You can choose other names for folders</p>
          </div>

<ul>
<li>In each of these 2 folders, create 2 <code>ResourcesDictionary</code> named <code>Light.xaml</code> and <code>Dark.xaml</code></li>
</ul>
<p>So we have:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--Preset</span><br><span class="line">  |</span><br><span class="line">  --Default</span><br><span class="line">    |</span><br><span class="line">    --Light.xaml</span><br><span class="line">    --Dark.xaml</span><br><span class="line">  --MyTheme</span><br><span class="line">    |</span><br><span class="line">    --Light.xaml</span><br><span class="line">    --Dark.xaml</span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>You can leave the dictionaries for the default folder blank, This is for when you want to clear your personalization and get back to normal</p>
          </div>

<ul>
<li>Now open the MyTheme Light and Dark dictionary and Expand <code>MergedDictionaries</code> then define a <code>ColorPaletteResources</code></li>
</ul>
<p><code>Dark.xaml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;ResourceDictionary</span><br><span class="line">    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">    xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        &lt;hc:ColorPaletteResources</span><br><span class="line">            TargetTheme=&quot;Dark&quot;/&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><code>Light.xaml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;ResourceDictionary</span><br><span class="line">    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">    xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        &lt;hc:ColorPaletteResources</span><br><span class="line">            TargetTheme=&quot;Light&quot;/&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>Be sure to set the <code>TargetTheme</code> to <code>Dark</code> for <code>Dark</code> theme and <code>Light</code> for <code>Light</code> theme</p>
          </div>

<ul>
<li>Now it’s time to set the colors and brushes</li>
</ul>
<p><code>Dark.xaml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;ResourceDictionary</span><br><span class="line">    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">    xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        &lt;hc:ColorPaletteResources</span><br><span class="line">            TargetTheme=&quot;Dark&quot;</span><br><span class="line">            PrimaryBrush=&quot;#326cf3&quot;</span><br><span class="line">            DangerColor=&quot;#db3340&quot;/&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>Light.xaml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;ResourceDictionary</span><br><span class="line">    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">    xmlns:hc=&quot;https://handyorg.github.io/handycontrol&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        &lt;hc:ColorPaletteResources</span><br><span class="line">            TargetTheme=&quot;Light&quot;</span><br><span class="line">            PrimaryBrush=&quot;#2db84d&quot;</span><br><span class="line">            DangerColor=&quot;#7b1fa2&quot;/&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="Set-Preset"><a href="#Set-Preset" class="headerlink" title="Set Preset"></a>Set Preset</h1><p>In the end we have to set our Preset</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">PresetManager.Current.ColorPreset = <span class="keyword">new</span> PresetManager.Preset &#123; ColorPreset = <span class="string">@&quot;Preset\MyTheme&quot;</span>, AssemblyName = Assembly.GetExecutingAssembly().GetName().Name &#125;;</span><br></pre></td></tr></table></figure>
<h1 id="ColorPresetChanged-Event"><a href="#ColorPresetChanged-Event" class="headerlink" title="ColorPresetChanged Event"></a>ColorPresetChanged Event</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">PresetManager.Current.ColorPresetChanged += OnColorPresetChanged;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnColorPresetChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Helper</title>
    <url>/handycontrol/tools/Helper/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>AnimationHelper</td>
<td></td>
</tr>
<tr>
<td>ArithmeticHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>ConfigHelper</td>
<td></td>
</tr>
<tr>
<td>DesignerHelper</td>
<td></td>
</tr>
<tr>
<td>DpiHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>IconHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>InputClickHelper</td>
<td></td>
</tr>
<tr>
<td>ResourceHelper</td>
<td></td>
</tr>
<tr>
<td>ScreenHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>SecurityHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>SingleOpenHelper</td>
<td></td>
</tr>
<tr>
<td>TokenizerHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>TouchDragMoveWindowHelper</td>
<td>Internal</td>
</tr>
<tr>
<td>ValidateHelper</td>
<td></td>
</tr>
<tr>
<td>VisualHelper</td>
<td></td>
</tr>
<tr>
<td>WindowHelper</td>
<td></td>
</tr>
<tr>
<td>BindingHelper</td>
<td></td>
</tr>
</tbody></table>
<h1 id="AnimationHelper"><a href="#AnimationHelper" class="headerlink" title="AnimationHelper"></a>AnimationHelper</h1><h2 id="CreateAnimation"><a href="#CreateAnimation" class="headerlink" title="CreateAnimation"></a>CreateAnimation</h2><h1 id="ConfigHelper"><a href="#ConfigHelper" class="headerlink" title="ConfigHelper"></a>ConfigHelper</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>SetLang</td>
<td></td>
</tr>
<tr>
<td>SetConfig</td>
<td></td>
</tr>
<tr>
<td>SetTimelineFrameRate</td>
<td></td>
</tr>
<tr>
<td>SetWindowDefaultStyle</td>
<td></td>
</tr>
<tr>
<td>SetNavigationWindowDefaultStyle</td>
<td></td>
</tr>
</tbody></table>
<h2 id="SetLang"><a href="#SetLang" class="headerlink" title="SetLang"></a>SetLang</h2><p>Change program language and culture</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">ConfigHelper.Instance.SetLang(<span class="string">&quot;en&quot;</span>);</span><br></pre></td></tr></table></figure>

<h1 id="DesignerHelper"><a href="#DesignerHelper" class="headerlink" title="DesignerHelper"></a>DesignerHelper</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> isDesign = DesignerHelper.IsInDesignMode;</span><br></pre></td></tr></table></figure>
<h1 id="ResourceHelper"><a href="#ResourceHelper" class="headerlink" title="ResourceHelper"></a>ResourceHelper</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>GetResource</td>
<td></td>
</tr>
</tbody></table>
<p>Example:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> res = ResourceHelper.GetResource&lt;Brush&gt;(<span class="string">&quot;PrimaryBrush&quot;</span>);</span><br></pre></td></tr></table></figure>
<h1 id="SingleOpenHelper"><a href="#SingleOpenHelper" class="headerlink" title="SingleOpenHelper"></a>SingleOpenHelper</h1><p>Example:</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> picker = SingleOpenHelper.CreateControl&lt;ColorPicker&gt;();</span><br><span class="line"><span class="keyword">var</span> window = <span class="keyword">new</span> PopupWindow</span><br><span class="line">&#123;</span><br><span class="line">    PopupElement = picker,</span><br><span class="line">    WindowStartupLocation = WindowStartupLocation.CenterScreen,</span><br><span class="line">    AllowsTransparency = <span class="literal">true</span>,</span><br><span class="line">    WindowStyle = WindowStyle.None,</span><br><span class="line">    MinWidth = <span class="number">0</span>,</span><br><span class="line">    MinHeight = <span class="number">0</span>,</span><br><span class="line">    Title = <span class="string">&quot;Select Accent Color&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line">window.Show();</span><br></pre></td></tr></table></figure>
<h1 id="ValidateHelper"><a href="#ValidateHelper" class="headerlink" title="ValidateHelper"></a>ValidateHelper</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>IsInRangeOfDouble</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfPosDouble</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfPosDoubleIncludeZero</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfNegDouble</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfNegDoubleIncludeZero</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfPosInt</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfPosIntIncludeZero</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfNegInt</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfNegIntIncludeZero</td>
<td></td>
</tr>
</tbody></table>
<h1 id="WindowHelper"><a href="#WindowHelper" class="headerlink" title="WindowHelper"></a>WindowHelper</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>GetActiveWindow</td>
<td></td>
</tr>
<tr>
<td>WindowMaximizedPadding</td>
<td></td>
</tr>
<tr>
<td>SetWindowToForeground</td>
<td></td>
</tr>
<tr>
<td>TouchDragMove</td>
<td></td>
</tr>
<tr>
<td>CreateHandle</td>
<td></td>
</tr>
<tr>
<td>GetHandle</td>
<td></td>
</tr>
<tr>
<td>GetHwndSource</td>
<td></td>
</tr>
<tr>
<td>IsInRangeOfNegIntIncludeZero</td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Extension</title>
    <url>/handycontrol/tools/Extension/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Class Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ColLayout</td>
<td>Markup Extension</td>
</tr>
<tr>
<td>ColorExtension</td>
<td></td>
</tr>
<tr>
<td>DependencyObjectExtension</td>
<td></td>
</tr>
<tr>
<td>DialogExtension</td>
<td></td>
</tr>
<tr>
<td>EnumerableExtension</td>
<td></td>
</tr>
<tr>
<td>FrameworkElementExtension</td>
<td></td>
</tr>
<tr>
<td>GeometryExtension</td>
<td></td>
</tr>
<tr>
<td>LangExtension</td>
<td>Markup Extension</td>
</tr>
<tr>
<td>StringExtension</td>
<td></td>
</tr>
<tr>
<td>UIElementExtension</td>
<td></td>
</tr>
<tr>
<td>ValueExtension</td>
<td></td>
</tr>
</tbody></table>
<h1 id="ColLayout"><a href="#ColLayout" class="headerlink" title="ColLayout"></a>ColLayout</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:Col</span> <span class="attr">Layout</span>=<span class="string">&quot;&#123;hc:ColLayout Xs=4, Sm=6, Md=8, Lg=9, Xl=11&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource BorderBrush&#125;&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;36&quot;</span> <span class="attr">CornerRadius</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hc:Col</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="ColorExtension"><a href="#ColorExtension" class="headerlink" title="ColorExtension"></a>ColorExtension</h1><h2 id="ToInt32"><a href="#ToInt32" class="headerlink" title="ToInt32"></a>ToInt32</h2><h2 id="ToInt32Reverse"><a href="#ToInt32Reverse" class="headerlink" title="ToInt32Reverse"></a>ToInt32Reverse</h2><h1 id="DependencyObjectExtension"><a href="#DependencyObjectExtension" class="headerlink" title="DependencyObjectExtension"></a>DependencyObjectExtension</h1><h2 id="GetVisualOrLogicalParent"><a href="#GetVisualOrLogicalParent" class="headerlink" title="GetVisualOrLogicalParent"></a>GetVisualOrLogicalParent</h2><h1 id="DialogExtension"><a href="#DialogExtension" class="headerlink" title="DialogExtension"></a>DialogExtension</h1><h2 id="GetResultAsync"><a href="#GetResultAsync" class="headerlink" title="GetResultAsync"></a>GetResultAsync</h2><h2 id="Initialize"><a href="#Initialize" class="headerlink" title="Initialize"></a>Initialize</h2><h2 id="GetViewModel"><a href="#GetViewModel" class="headerlink" title="GetViewModel"></a>GetViewModel</h2><h1 id="EnumerableExtension"><a href="#EnumerableExtension" class="headerlink" title="EnumerableExtension"></a>EnumerableExtension</h1><h2 id="Do"><a href="#Do" class="headerlink" title="Do"></a>Do</h2><h2 id="DoWithIndex"><a href="#DoWithIndex" class="headerlink" title="DoWithIndex"></a>DoWithIndex</h2><h1 id="FrameworkElementExtension"><a href="#FrameworkElementExtension" class="headerlink" title="FrameworkElementExtension"></a>FrameworkElementExtension</h1><h2 id="GetValidWidth"><a href="#GetValidWidth" class="headerlink" title="GetValidWidth"></a>GetValidWidth</h2><h2 id="GetValidHeight"><a href="#GetValidHeight" class="headerlink" title="GetValidHeight"></a>GetValidHeight</h2><h1 id="GeometryExtension"><a href="#GeometryExtension" class="headerlink" title="GeometryExtension"></a>GeometryExtension</h1><h2 id="GetTotalLength"><a href="#GetTotalLength" class="headerlink" title="GetTotalLength"></a>GetTotalLength</h2><h2 id="GetTotalLength-1"><a href="#GetTotalLength-1" class="headerlink" title="GetTotalLength"></a>GetTotalLength</h2><h1 id="LangExtension"><a href="#LangExtension" class="headerlink" title="LangExtension"></a>LangExtension</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;hc:Lang Key=&#123;x:Static langs:LangKeys.BasicLayout&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="StringExtension"><a href="#StringExtension" class="headerlink" title="StringExtension"></a>StringExtension</h1><h2 id="Value"><a href="#Value" class="headerlink" title="Value"></a>Value</h2><h1 id="UIElementExtension"><a href="#UIElementExtension" class="headerlink" title="UIElementExtension"></a>UIElementExtension</h1><h2 id="Show"><a href="#Show" class="headerlink" title="Show"></a>Show</h2><h2 id="Hide"><a href="#Hide" class="headerlink" title="Hide"></a>Hide</h2><h2 id="Colapse"><a href="#Colapse" class="headerlink" title="Colapse"></a>Colapse</h2><h1 id="ValueExtension"><a href="#ValueExtension" class="headerlink" title="ValueExtension"></a>ValueExtension</h1><h2 id="Add"><a href="#Add" class="headerlink" title="Add"></a>Add</h2><h2 id="IsZero"><a href="#IsZero" class="headerlink" title="IsZero"></a>IsZero</h2>]]></content>
  </entry>
  <entry>
    <title>P/Invoke</title>
    <url>/handycontrol/tools/PInvoke/index.html</url>
    <content><![CDATA[<p>We have a lot of WinAPI functions that You can easily use them in your applications</p>
<h1 id="InteropMethods"><a href="#InteropMethods" class="headerlink" title="InteropMethods"></a>InteropMethods</h1><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>RegisterWindowMessage</td>
<td></td>
</tr>
<tr>
<td>ReadProcessMemory</td>
<td></td>
</tr>
<tr>
<td>SendMessage</td>
<td></td>
</tr>
<tr>
<td>GetWindowThreadProcessId</td>
<td></td>
</tr>
<tr>
<td>AttachThreadInput</td>
<td></td>
</tr>
<tr>
<td>GetForegroundWindow</td>
<td></td>
</tr>
<tr>
<td>OpenProcess</td>
<td></td>
</tr>
<tr>
<td>VirtualAllocEx</td>
<td></td>
</tr>
<tr>
<td>CloseHandle</td>
<td></td>
</tr>
<tr>
<td>VirtualFreeEx</td>
<td></td>
</tr>
<tr>
<td>FindWindow</td>
<td></td>
</tr>
<tr>
<td>FindWindowEx</td>
<td></td>
</tr>
<tr>
<td>GetWindowRect</td>
<td></td>
</tr>
<tr>
<td>GetCursorPos</td>
<td></td>
</tr>
<tr>
<td>GetDesktopWindow</td>
<td></td>
</tr>
<tr>
<td>AddClipboardFormatListener</td>
<td></td>
</tr>
<tr>
<td>RemoveClipboardFormatListener</td>
<td></td>
</tr>
<tr>
<td>GetSystemMenu</td>
<td></td>
</tr>
<tr>
<td>EnableMenuItem</td>
<td></td>
</tr>
<tr>
<td>InsertMenu</td>
<td></td>
</tr>
<tr>
<td>IntDestroyMenu</td>
<td></td>
</tr>
<tr>
<td>IntGetDC</td>
<td></td>
</tr>
<tr>
<td>IntReleaseDC</td>
<td></td>
</tr>
<tr>
<td>GetDeviceCaps</td>
<td></td>
</tr>
<tr>
<td>GetSystemMetrics</td>
<td></td>
</tr>
<tr>
<td>IntDestroyIcon</td>
<td></td>
</tr>
<tr>
<td>IntDeleteObject</td>
<td></td>
</tr>
<tr>
<td>IntCloseHandle</td>
<td></td>
</tr>
<tr>
<td>PrivateCreateDIBSection</td>
<td></td>
</tr>
<tr>
<td>PrivateCreateIconIndirect</td>
<td></td>
</tr>
<tr>
<td>PrivateCreateBitmap</td>
<td></td>
</tr>
<tr>
<td>IntGetModuleFileName</td>
<td></td>
</tr>
<tr>
<td>ExtractIconEx</td>
<td></td>
</tr>
<tr>
<td>Shell_NotifyIcon</td>
<td></td>
</tr>
<tr>
<td>CreateWindowEx</td>
<td></td>
</tr>
<tr>
<td>RegisterClass</td>
<td></td>
</tr>
<tr>
<td>DefWindowProc</td>
<td></td>
</tr>
<tr>
<td>SetForegroundWindow</td>
<td></td>
</tr>
<tr>
<td>CallNextHookEx</td>
<td></td>
</tr>
<tr>
<td>GetModuleHandle</td>
<td></td>
</tr>
<tr>
<td>UnhookWindowsHookEx</td>
<td></td>
</tr>
<tr>
<td>SetWindowsHookEx</td>
<td></td>
</tr>
<tr>
<td>GetWindowDC</td>
<td></td>
</tr>
<tr>
<td>GetPixel</td>
<td></td>
</tr>
<tr>
<td>ReleaseDC</td>
<td></td>
</tr>
<tr>
<td>GetDeviceCaps</td>
<td></td>
</tr>
<tr>
<td>GetDC</td>
<td></td>
</tr>
<tr>
<td>GetWindowPlacement</td>
<td></td>
</tr>
<tr>
<td>MonitorFromWindow</td>
<td></td>
</tr>
<tr>
<td>EnumThreadWindows</td>
<td></td>
</tr>
<tr>
<td>DeleteDC</td>
<td></td>
</tr>
<tr>
<td>CreateCompatibleDC</td>
<td></td>
</tr>
<tr>
<td>SelectObject</td>
<td></td>
</tr>
<tr>
<td>SendMessage</td>
<td></td>
</tr>
<tr>
<td>MonitorFromPoint</td>
<td></td>
</tr>
<tr>
<td>GetWindow</td>
<td></td>
</tr>
<tr>
<td>IsWindowVisible</td>
<td></td>
</tr>
<tr>
<td>IsIconic</td>
<td></td>
</tr>
<tr>
<td>IsZoomed</td>
<td></td>
</tr>
<tr>
<td>SetWindowPos</td>
<td></td>
</tr>
<tr>
<td>GetWindowLong</td>
<td></td>
</tr>
<tr>
<td>SetWindowLongPtr32</td>
<td></td>
</tr>
<tr>
<td>SetWindowLongPtr64</td>
<td></td>
</tr>
<tr>
<td>SetWindowLong</td>
<td></td>
</tr>
<tr>
<td>SetWindowLongPtr</td>
<td></td>
</tr>
<tr>
<td>GetCurrentThreadId</td>
<td></td>
</tr>
<tr>
<td>DestroyWindow</td>
<td></td>
</tr>
<tr>
<td>UnregisterClass</td>
<td></td>
</tr>
<tr>
<td>UpdateLayeredWindow</td>
<td></td>
</tr>
<tr>
<td>RedrawWindow</td>
<td></td>
</tr>
<tr>
<td>EnumDisplayMonitors</td>
<td></td>
</tr>
<tr>
<td>IntersectRect</td>
<td></td>
</tr>
<tr>
<td>GetMonitorInfo</td>
<td></td>
</tr>
<tr>
<td>CreateDIBSection</td>
<td></td>
</tr>
<tr>
<td>AlphaBlend</td>
<td></td>
</tr>
<tr>
<td>ChildWindowFromPointEx</td>
<td></td>
</tr>
<tr>
<td>CreateCompatibleBitmap</td>
<td></td>
</tr>
<tr>
<td>BitBlt</td>
<td></td>
</tr>
<tr>
<td>EnableWindow</td>
<td></td>
</tr>
<tr>
<td>SHAppBarMessage</td>
<td></td>
</tr>
<tr>
<td>SetWindowPlacement</td>
<td></td>
</tr>
<tr>
<td>GetWindowText</td>
<td></td>
</tr>
<tr>
<td>EnumDesktopWindows</td>
<td></td>
</tr>
<tr>
<td>FindWindowByCaption</td>
<td></td>
</tr>
<tr>
<td>MouseEvent</td>
<td></td>
</tr>
<tr>
<td>RtlGetVersion</td>
<td></td>
</tr>
<tr>
<td>GetImmersiveUserColorSetPreference</td>
<td></td>
</tr>
<tr>
<td>GetImmersiveColorSetCount</td>
<td></td>
</tr>
<tr>
<td>GetImmersiveColorFromColorSetEx</td>
<td></td>
</tr>
<tr>
<td>GetImmersiveColorTypeFromName</td>
<td></td>
</tr>
<tr>
<td>GetImmersiveColorNamedTypeByIndex</td>
<td></td>
</tr>
<tr>
<td>InternetGetConnectedState</td>
<td></td>
</tr>
<tr>
<td>GetModuleFileName</td>
<td></td>
</tr>
<tr>
<td>WritePrivateProfileString</td>
<td></td>
</tr>
<tr>
<td>GetPrivateProfileString</td>
<td></td>
</tr>
<tr>
<td>DwmGetColorizationColor</td>
<td></td>
</tr>
<tr>
<td>GdipImageGetFrameDimensionsCount</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipImageGetFrameDimensionsList</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipImageGetFrameCount</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipGetPropertyItemSize</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipGetPropertyItem</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipCreateHBITMAPFromBitmap</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipImageSelectActiveFrame</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipCreateBitmapFromFile</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipImageForceValidation</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>IntGdipDisposeImage</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdiplusStartup</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipGetImageRawFormat</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>SetWindowCompositionAttribute</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipCreateBitmapFromStream</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipCreateBitmapFromHBITMAP</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipGetImageEncodersSize</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipGetImageDecodersSize</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipGetImageDecoders</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipGetImageEncoders</td>
<td>located in Gdip</td>
</tr>
<tr>
<td>GdipSaveImageToStream</td>
<td>located in Gdip</td>
</tr>
</tbody></table>
<h1 id="InteropValues"><a href="#InteropValues" class="headerlink" title="InteropValues"></a>InteropValues</h1><h2 id="ExternDll"><a href="#ExternDll" class="headerlink" title="ExternDll"></a>ExternDll</h2><p>you can access dll from <code>ExternDll</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DllImport(InteropValues.ExternDll.User32, CharSet = CharSet.Auto)</span>]</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>User32</td>
<td></td>
</tr>
<tr>
<td>Gdi32</td>
<td></td>
</tr>
<tr>
<td>GdiPlus</td>
<td></td>
</tr>
<tr>
<td>Kernel32</td>
<td></td>
</tr>
<tr>
<td>Shell32</td>
<td></td>
</tr>
<tr>
<td>MsImg</td>
<td></td>
</tr>
<tr>
<td>NTdll</td>
<td></td>
</tr>
<tr>
<td>WinInet</td>
<td></td>
</tr>
<tr>
<td>uxtheme</td>
<td></td>
</tr>
<tr>
<td>dwmapi</td>
<td></td>
</tr>
</tbody></table>
<h2 id="StructLayout"><a href="#StructLayout" class="headerlink" title="StructLayout"></a>StructLayout</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>NOTIFYICONDATA</td>
<td></td>
</tr>
<tr>
<td>TBBUTTON</td>
<td></td>
</tr>
<tr>
<td>TRAYDATA</td>
<td></td>
</tr>
<tr>
<td>POINT</td>
<td></td>
</tr>
<tr>
<td>MOUSEHOOKSTRUCT</td>
<td></td>
</tr>
<tr>
<td>RECT</td>
<td></td>
</tr>
<tr>
<td>BLENDFUNCTION</td>
<td></td>
</tr>
<tr>
<td>BITMAPINFOHEADER</td>
<td></td>
</tr>
<tr>
<td>WINDOWPOS</td>
<td></td>
</tr>
<tr>
<td>WINDOWPLACEMENT</td>
<td></td>
</tr>
<tr>
<td>SIZE</td>
<td></td>
</tr>
<tr>
<td>MONITORINFO</td>
<td></td>
</tr>
<tr>
<td>WNDCLASS</td>
<td></td>
</tr>
<tr>
<td>WNDCLASS4ICON</td>
<td></td>
</tr>
<tr>
<td>BITMAPINFO</td>
<td></td>
</tr>
<tr>
<td>ICONINFO</td>
<td></td>
</tr>
<tr>
<td>WINCOMPATTRDATA</td>
<td></td>
</tr>
<tr>
<td>ACCENTPOLICY</td>
<td></td>
</tr>
<tr>
<td>ImageCodecInfoPrivate</td>
<td></td>
</tr>
<tr>
<td>MINMAXINFO</td>
<td></td>
</tr>
<tr>
<td>APPBARDATA</td>
<td></td>
</tr>
<tr>
<td>RTL_OSVERSIONINFOEX</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Flags"><a href="#Flags" class="headerlink" title="Flags"></a>Flags</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>AllocationType</td>
<td></td>
</tr>
<tr>
<td>MemoryProtection</td>
<td></td>
</tr>
<tr>
<td>FreeType</td>
<td></td>
</tr>
<tr>
<td>SetWindowPosFlags</td>
<td></td>
</tr>
<tr>
<td>ProcessAccess</td>
<td></td>
</tr>
<tr>
<td>RedrawWindowFlags</td>
<td></td>
</tr>
<tr>
<td>WindowPositionFlags</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Enum"><a href="#Enum" class="headerlink" title="Enum"></a>Enum</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Remarks</th>
</tr>
</thead>
<tbody><tr>
<td>ShowWindowCommands</td>
<td></td>
</tr>
<tr>
<td>MouseEvent</td>
<td></td>
</tr>
<tr>
<td>FreeType</td>
<td></td>
</tr>
<tr>
<td>HookType</td>
<td></td>
</tr>
<tr>
<td>GWL</td>
<td></td>
</tr>
<tr>
<td>GWLP</td>
<td></td>
</tr>
<tr>
<td>SM</td>
<td></td>
</tr>
<tr>
<td>CacheSlot</td>
<td></td>
</tr>
<tr>
<td>WINDOWCOMPOSITIONATTRIB</td>
<td></td>
</tr>
<tr>
<td>ACCENTSTATE</td>
<td></td>
</tr>
</tbody></table>
<h1 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h1><h2 id="InternetGetConnectedState"><a href="#InternetGetConnectedState" class="headerlink" title="InternetGetConnectedState"></a>InternetGetConnectedState</h2><p>With the help of this method, you can check the status of the Internet</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsConnectedToInternet</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> InteropMethods.InternetGetConnectedState(<span class="keyword">out</span> <span class="built_in">int</span> Desc, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="GetCursorPos"><a href="#GetCursorPos" class="headerlink" title="GetCursorPos"></a>GetCursorPos</h2><p>Get mouse Position</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> position = InteropMethods.GetCursorPos();</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> X = position.X;</span><br><span class="line"><span class="built_in">int</span> Y = position.Y;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>ListBox</title>
    <url>/handycontrol/native_controls/listBox/index.html</url>
    <content><![CDATA[<h1 id="Attached-Property"><a href="#Attached-Property" class="headerlink" title="Attached Property"></a>Attached Property</h1><table>
<thead>
<tr>
<th>Properties</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>IsOddEvenRow</td>
<td>Change Listbox Item Background based on odd and even row  <code>Only Custom Version</code></td>
</tr>
<tr>
<td>IsNew</td>
<td>Add New Label next to the text  <code>Only Custom Version</code></td>
</tr>
<tr>
<td>Geometry</td>
<td>Change IsNew Geometry  <code>Only Custom Version</code></td>
</tr>
<tr>
<td>GeoemtryBrush</td>
<td>Change Geometry Brush  <code>Only Custom Version</code></td>
</tr>
<tr>
<td>Width</td>
<td>Change Geometry Width  <code>Only Custom Version</code></td>
</tr>
<tr>
<td>Height</td>
<td>Change Geometry Height  <code>Only Custom Version</code></td>
</tr>
</tbody></table>
<h1 id="ListBoxBaseStyle"><a href="#ListBoxBaseStyle" class="headerlink" title="ListBoxBaseStyle"></a>ListBoxBaseStyle</h1><p>  ListBox default style is not recommended to use directly, it should always be used by other styles in BasedOn mode.</p>
<p>Example：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">hc:ListBoxAttach.IsOddEvenRow</span>=<span class="string">&quot;True&quot;</span> <span class="attr">AlternationCount</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/ListBoxIsOddOrEven.png" alt="ListBox.IsOddEvenRow"></p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Style</span> <span class="attr">BasedOn</span> = <span class="string">&quot;&#123;StaticResource ListBoxBaseStyle&#125;&quot;</span> <span class="attr">TargetType</span> = <span class="string">&quot;ListBox&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ListBox.BaseStyle.png" alt="ListBox.BaseStyle"></p>
          </div>

<h1 id="ListBoxCustom-ListBoxBaseStyle"><a href="#ListBoxCustom-ListBoxBaseStyle" class="headerlink" title="ListBoxCustom : ListBoxBaseStyle"></a>ListBoxCustom : ListBoxBaseStyle</h1><p>ListBox ListCustomstyle, which retains the basic attribute style of the Listbox, and the data display style is customized by the current user to achieve personalized customization.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Datas&#125;&quot;</span>  </span></span><br><span class="line"><span class="tag">         <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource ListBoxCustom&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,5&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">DockPanel</span> <span class="attr">LastChildFill</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">DockPanel.Dock</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;YellowGreen&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,10,0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;DynamicResource BubbleTailGeometry&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">DockPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ListBox.CustomStyle.png" alt="ListBox.CustomStyle"></p>
          </div>

<h1 id="WrapPanelHorizontalListBox-ListBoxCustom"><a href="#WrapPanelHorizontalListBox-ListBoxCustom" class="headerlink" title="WrapPanelHorizontalListBox : ListBoxCustom"></a>WrapPanelHorizontalListBox : ListBoxCustom</h1><p>The layout container is WrapPanel, and the display style is horizontal.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Datas&#125;&quot;</span>  </span></span><br><span class="line"><span class="tag">         <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource WrapPanelHorizontalListBox&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">DockPanel</span> <span class="attr">LastChildFill</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">DockPanel.Dock</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;YellowGreen&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,10,0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;DynamicResource BubbleTailGeometry&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">DockPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ListBox.WrapPanelHorizontalStyle.png" alt="ListBox.WrapPanelHorizontalStyle"></p>
          </div>

<h1 id="WrapPanelVerticalListBox-ListBoxCustom"><a href="#WrapPanelVerticalListBox-ListBoxCustom" class="headerlink" title="WrapPanelVerticalListBox : ListBoxCustom"></a>WrapPanelVerticalListBox : ListBoxCustom</h1><p>The layout container is WrapPanel, and the display style is vertical.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Datas&#125;&quot;</span>  </span></span><br><span class="line"><span class="tag">         <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource WrapPanelVerticalListBox&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,5&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">DockPanel</span> <span class="attr">LastChildFill</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">DockPanel.Dock</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;YellowGreen&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,10,0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;DynamicResource BubbleTailGeometry&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">DockPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ListBox.WrapPanelVerticalStyle.png" alt="ListBox.WrapPanelVerticalStyle"></p>
          </div>

<h1 id="StackPanelHorizontalListBox-ListBoxCustom"><a href="#StackPanelHorizontalListBox-ListBoxCustom" class="headerlink" title="StackPanelHorizontalListBox : ListBoxCustom"></a>StackPanelHorizontalListBox : ListBoxCustom</h1><p>The layout container is a StackPanel, and the display style is horizontal.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Datas&#125;&quot;</span>  </span></span><br><span class="line"><span class="tag">         <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource StackPanelHorizontalListBox&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">DockPanel</span> <span class="attr">LastChildFill</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">DockPanel.Dock</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;YellowGreen&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,10,0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;DynamicResource BubbleTailGeometry&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">DockPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ListBox.StackPanelHorizontalStyle.png" alt="ListBox.StackPanelHorizontalStyle"></p>
          </div>

<h1 id="StackPanelVerticalListBox-ListBoxCustom"><a href="#StackPanelVerticalListBox-ListBoxCustom" class="headerlink" title="StackPanelVerticalListBox : ListBoxCustom"></a>StackPanelVerticalListBox : ListBoxCustom</h1><p>The layout container is a StackPanel, which displays the style vertically.</p>
<div class="note info no-icon">
            <p>Example：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Datas&#125;&quot;</span>  </span></span><br><span class="line"><span class="tag">         <span class="attr">Style</span>=<span class="string">&quot;&#123;DynamicResource StackPanelVerticalListBox&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;0,1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">DockPanel</span> <span class="attr">LastChildFill</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">DockPanel.Dock</span>=<span class="string">&quot;Left&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;YellowGreen&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,0,10,0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;&#123;DynamicResource BubbleTailGeometry&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Padding</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">DockPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Border</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListBox.ItemTemplate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HandyOrg/HandyOrgResource/master/HandyControl/Doc/native_controls/ListBox.StackPanelVerticalStyle.png" alt="ListBox.StackPanelVerticalStyle"></p>
          </div>

<h1 id="ListBoxModernStyle"><a href="#ListBoxModernStyle" class="headerlink" title="ListBoxModernStyle"></a>ListBoxModernStyle</h1><div class="note info">
            <p>This style is <code>Only Available in Custom Version</code></p><p>you can use <code>IconElement</code> and <code>ListBoxAttach</code> AttachedProperty</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ListBoxModernStyle&#125;&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;32&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 1&quot;</span> <span class="attr">hc:IconElement.Height</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:IconElement.Width</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ConfigGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 2&quot;</span> <span class="attr">hc:ListBoxAttach.IsNew</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:IconElement.Height</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:IconElement.Width</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ConfigGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListBoxItem</span> <span class="attr">Content</span>=<span class="string">&quot;Item 3&quot;</span> <span class="attr">hc:ListBoxAttach.IsNew</span>=<span class="string">&quot;True&quot;</span> <span class="attr">hc:ListBoxAttach.GeoemtryBrush</span>=<span class="string">&quot;&#123;DynamicResource WarningBrush&#125;&quot;</span> <span class="attr">hc:ListBoxAttach.Geometry</span>=<span class="string">&quot;&#123;DynamicResource ClockGeometry&#125;&quot;</span> <span class="attr">hc:IconElement.Height</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:IconElement.Width</span>=<span class="string">&quot;16&quot;</span> <span class="attr">hc:IconElement.Geometry</span>=<span class="string">&quot;&#123;StaticResource ConfigGeometry&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>
          </div>

<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/ListBoxModernStyle.png" alt="ListBox.ListBoxModernStyle"></p>
<h1 id="ListBoxTransparentStyle"><a href="#ListBoxTransparentStyle" class="headerlink" title="ListBoxTransparentStyle"></a>ListBoxTransparentStyle</h1><p><code>This style is Only Available in Custom Version</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Style</span>=<span class="string">&#123;StaticResource</span> <span class="attr">ListBoxTransparentStyle</span>&#125;/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="ListBoxItemNewStyle"><a href="#ListBoxItemNewStyle" class="headerlink" title="ListBoxItemNewStyle"></a>ListBoxItemNewStyle</h1><p><code>This style is Only Available in Custom Version</code></p>
<p>this style is for Listbox Item with a <code>new</code> geometry icon</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ListBoxItem</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource ListBoxItemNewStyle&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>ThreadSafeObservableCollection</title>
    <url>/handycontrol/persianToolkit/threadSafeObservableCollection/index.html</url>
    <content><![CDATA[<p>If you have ever bound an ObservableCollection<T> to a WPF control, you know it’s hard to add or remove items from multi-threads. Indeed, the UI expects the events to be raised on the UI thread. Also, you should not change the collection until the change event is processed by the UI. This means your algorithm is blocked until the UI process the events. This could slow down your processing as multiple threads may be waiting for the UI.</p>
<div class="note info">
            <ul><li><p>In WPF, you can use <code>BindingOperations.EnableCollectionSynchronization</code> to bind a collection and use it from multiple threads. However, this solution is not very convenient as you need to lock the collection when accessing it and errors are possible.</p></li><li><p>This requires a little more of memory, but this is the trade-off to have an easy to use thread-safe observable collection.</p></li><li><p>You can safely bind <strong>collection.AsObservable</strong> to a WPF control. This observable collection implements <strong>INotifyCollectionChanged</strong>, <strong>INotifyPropertyChanged</strong> and <strong>IReadOnlyList<T></strong>, so it integrates well with WPF controls.</p></li></ul>
          </div>

<div class="note warning">
            <p><strong>ThreadSafeObservableCollection</strong> is only Available in .NetCore &gt;= 3.0, so you cant use it in Net Framework.</p>
          </div>

<p>Example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">ItemsSource</span>=<span class="string">&quot;&#123;Binding Items.AsObservable&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ThreadSafeObservableCollection</span>&lt;<span class="title">string</span>&gt; Items</span> &#123; <span class="keyword">get</span>; &#125; = <span class="keyword">new</span> ThreadSafeObservableCollection&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddItems</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Task.Run(() =&gt; Parallel.For(<span class="number">0</span>, <span class="number">1000</span>, i =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// No need to lock here as the collection is thread-safe</span></span><br><span class="line">            Items.Add(<span class="string">$&quot;Item <span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Updatable Markup Extension</title>
    <url>/handycontrol/persianToolkit/updatableMarkupExtension/index.html</url>
    <content><![CDATA[<p>this markup help you to update the target of a markup extension after the initial evaluation.</p>
<div class="note info">
            <p><code>UpdatableMarkupExtension</code> Located in the <strong>HandyControl.Tools</strong> namespace.</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Using HandyControl.Tools;</span><br></pre></td></tr></table></figure>
          </div>

<h1 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h1><p>Let’s assume we want to create a custom markup extension which indicates whether the network is available. It would be used like that :</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">IsChecked</span>=<span class="string">&quot;&#123;local:NetworkAvailable&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;Network is available&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>Obviously, we want the checkbox to be updated when the availability of the network changes (e.g. when the network cable is plugged or unplugged, or when the Wifi network is out of reach). So we need to handle the <code>NetworkChange.NetworkAvailabilityChanged</code> event, and update the <code>IsChecked</code> property accordingly. So the extension will inherit the <code>UpdatableMarkupExtension</code> class to take advantage of the <code>UpdateValue</code> method :</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NetworkAvailableExtension</span> : <span class="title">UpdatableMarkupExtension</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NetworkAvailableExtension</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        NetworkChange.NetworkAvailabilityChanged += <span class="keyword">new</span> NetworkAvailabilityChangedEventHandler(NetworkChange_NetworkAvailabilityChanged);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="built_in">object</span> <span class="title">ProvideValueInternal</span>(<span class="params">IServiceProvider serviceProvider</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> NetworkInterface.GetIsNetworkAvailable();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">NetworkChange_NetworkAvailabilityChanged</span>(<span class="params"><span class="built_in">object</span> sender, NetworkAvailabilityEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        UpdateValue(e.IsAvailable);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>We subscribe to the <code>NetworkAvailabilityChanged</code> event in the class constructor. If we wanted to subscribe to an event of the target object, we would have to do it in the ProvideValueInternal method, so that the target object can be accessed.</p>
          </div>

]]></content>
  </entry>
  <entry>
    <title>PersianCalendar</title>
    <url>/handycontrol/persianToolkit/persianCalendar/index.html</url>
    <content><![CDATA[<p>PersianCalendar is Based on <a href="https://ghost1372.github.io/handycontrol/native_controls/calendar/">Calendar</a> All methods and styles are available in this control</p>
<p>example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PersianCalendar</span> <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ghost1372/HandyControls/develop/Resources/PersianCalendar.png" alt="PersianCalendar"></p>
<h1 id="Afghanistan-Calendar"><a href="#Afghanistan-Calendar" class="headerlink" title="Afghanistan Calendar"></a>Afghanistan Calendar</h1><p>Since the calendars of Iran and Afghanistan are the same and only the names of the months are different, You can use the Afghan calendar with Afghan names.<br>Put this code in <code>App.xaml.cs</code> and <code>OnStartup</code> Method</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">System.Threading.Thread.CurrentThread.CurrentCulture = <span class="keyword">new</span> CultureInfo(<span class="string">&quot;fa-AF&quot;</span>); <span class="comment">//ps-AF and prs-AF also can be used</span></span><br></pre></td></tr></table></figure>
<h1 id="Wrapper-for-Material-Design-Style"><a href="#Wrapper-for-Material-Design-Style" class="headerlink" title="Wrapper for Material Design Style"></a>Wrapper for Material Design Style</h1><p>if you want to use PersianCalendar with Material Design Styles follow this instructures</p>
<ol>
<li><p>Install nuget packages</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Install-Package HandyControls</span><br><span class="line">Install-Package MaterialDesignThemes</span><br></pre></td></tr></table></figure></li>
<li><p>Create a ResourceDictionary –&gt; <code>MaterialPersianCalendar.xaml</code></p>
</li>
<li><p>Add Resources into App.xaml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:ThemeResources</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hc:Theme</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">materialDesign:BundledTheme</span> <span class="attr">BaseTheme</span>=<span class="string">&quot;Light&quot;</span> <span class="attr">PrimaryColor</span>=<span class="string">&quot;DeepPurple&quot;</span> <span class="attr">SecondaryColor</span>=<span class="string">&quot;Lime&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;/MaterialPersianCalendar.xaml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>Copy and Paste following Codes into <code>MaterialPersianCalendar.xaml</code></p>
</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">xmlns:wpf</span>=<span class="string">&quot;http://materialdesigninxaml.net/winfx/xaml/themes&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">xmlns:primitives</span>=<span class="string">&quot;clr-namespace:Microsoft.Windows.Controls.Primitives;assembly=HandyControl&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">xmlns:hc</span>=<span class="string">&quot;https://handyorg.github.io/handycontrol&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wpf:BooleanToVisibilityConverter</span> <span class="attr">x:Key</span>=<span class="string">&quot;BooleanToVisibilityConverter&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:Key</span>=<span class="string">&quot;MaterialDesignPersianCalendarButton&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;primitives:CalendarButton&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MinWidth&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MinHeight&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;FontSize&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Cursor&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Hand&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Background&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Transparent&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Margin&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Width&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;48&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Height&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;48&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;HorizontalContentAlignment&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;VerticalContentAlignment&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Template&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">TargetType</span>=<span class="string">&quot;primitives:CalendarButton&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CommonStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0:0:0.1&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Normal&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;MouseOver&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;HighlightBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Pressed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;HighlightBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Disabled&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;HighlightBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;.35&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;NormalText&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;SelectionStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Unselected&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Selected&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;.75&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;SelectedBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">ObjectAnimationUsingKeyFrames</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(TextElement.Foreground)&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;NormalText&quot;</span> <span class="attr">FillBehavior</span>=<span class="string">&quot;Stop&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;DynamicResource PrimaryHueMidForegroundBrush&#125;&quot;</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">ObjectAnimationUsingKeyFrames</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CalendarButtonFocusStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;CalendarButtonFocused&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">ObjectAnimationUsingKeyFrames</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;DayButtonFocusVisual&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="css">                                                    &lt;<span class="attribute">Visibility</span>&gt;Visible&lt;/<span class="attribute">Visibility</span>&gt;</span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">ObjectAnimationUsingKeyFrames</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;CalendarButtonUnfocused&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">ObjectAnimationUsingKeyFrames</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;DayButtonFocusVisual&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="css">                                                    &lt;<span class="attribute">Visibility</span>&gt;Collapsed&lt;/<span class="attribute">Visibility</span>&gt;</span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">ObjectAnimationUsingKeyFrames</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;ActiveStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Active&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Inactive&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="css">                        &lt;Ellipse x:Name=<span class="string">&quot;TodayBackground&quot;</span></span></span><br><span class="line">                                 Fill=&quot;&#123;DynamicResource PrimaryHueLightBrush&#125;&quot;</span><br><span class="line">                                 Opacity=&quot;0&quot; /&gt;</span><br><span class="line"><span class="css">                        &lt;Ellipse x:Name=<span class="string">&quot;SelectedBackground&quot;</span></span></span><br><span class="line">                                 Fill=&quot;&#123;DynamicResource PrimaryHueMidBrush&#125;&quot;</span><br><span class="line">                                 Opacity=&quot;0&quot; /&gt;</span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;TemplateBinding BorderBrush&#125;&quot;</span></span></span></span><br><span class="line">                                BorderThickness=&quot;&#123;TemplateBinding BorderThickness&#125;&quot;</span><br><span class="line">                                Background=&quot;&#123;TemplateBinding Background&#125;&quot; /&gt;</span><br><span class="line"><span class="css">                        &lt;Ellipse x:Name=<span class="string">&quot;HighlightBackground&quot;</span></span></span><br><span class="line">                                 Fill=&quot;&#123;DynamicResource PrimaryHueDarkBrush&#125;&quot;</span><br><span class="line">                                 Opacity=&quot;0&quot; /&gt;</span><br><span class="line"><span class="css">                        &lt;ContentPresenter x:Name=<span class="string">&quot;NormalText&quot;</span></span></span><br><span class="line">                                          TextElement.Foreground=&quot;&#123;TemplateBinding Foreground&#125;&quot;</span><br><span class="line">                                          HorizontalAlignment=&quot;&#123;TemplateBinding HorizontalContentAlignment&#125;&quot;</span><br><span class="line">                                          Margin=&quot;5,1,5,1&quot;</span><br><span class="line">                                          VerticalAlignment=&quot;&#123;TemplateBinding VerticalContentAlignment&#125;&quot;/&gt;</span><br><span class="line"><span class="css">                        &lt;Ellipse x:Name=<span class="string">&quot;DayButtonFocusVisual&quot;</span></span></span><br><span class="line">                                 Stroke=&quot;&#123;DynamicResource PrimaryHueDarkBrush&#125;&quot;</span><br><span class="line">                                 Opacity=&quot;0&quot;</span><br><span class="line">                                 Visibility=&quot;Collapsed&quot;</span><br><span class="line">                                 StrokeThickness=&quot;1&quot; /&gt;</span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Style.Triggers</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsInactive&quot;</span></span></span></span><br><span class="line">                     Value=&quot;True&quot;&gt;</span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MinHeight&quot;</span></span></span></span><br><span class="line">                        Value=&quot;0&quot; /&gt;</span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MaxHeight&quot;</span></span></span></span><br><span class="line">                        Value=&quot;0&quot; /&gt;</span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Style.Triggers</span>&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:Key</span>=<span class="string">&quot;MaterialDesignPersianCalendarDayButton&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;primitives:CalendarDayButton&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Foreground&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;DynamicResource MaterialDesignBody&#125;&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MinWidth&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MinHeight&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;FontSize&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Cursor&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Hand&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Margin&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Width&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;28&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Height&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;28&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;HorizontalContentAlignment&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;VerticalContentAlignment&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Center&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Template&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">TargetType</span>=<span class="string">&quot;primitives:CalendarDayButton&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CommonStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0:0:0.1&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Normal&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;MouseOver&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;HighlightBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Pressed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;HighlightBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;SelectionStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Unselected&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Selected&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;.75&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;SelectedBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">ObjectAnimationUsingKeyFrames</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(TextElement.Foreground)&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;NormalText&quot;</span> <span class="attr">FillBehavior</span>=<span class="string">&quot;Stop&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;DynamicResource PrimaryHueMidForegroundBrush&#125;&quot;</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">ObjectAnimationUsingKeyFrames</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CalendarButtonFocusStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;CalendarButtonFocused&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">ObjectAnimationUsingKeyFrames</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;DayButtonFocusVisual&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="css">                                                    &lt;<span class="attribute">Visibility</span>&gt;Visible&lt;/<span class="attribute">Visibility</span>&gt;</span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">ObjectAnimationUsingKeyFrames</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;CalendarButtonUnfocused&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">ObjectAnimationUsingKeyFrames</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;DayButtonFocusVisual&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame</span> <span class="attr">KeyTime</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="css">                                                    &lt;<span class="attribute">Visibility</span>&gt;Collapsed&lt;/<span class="attribute">Visibility</span>&gt;</span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">DiscreteObjectKeyFrame</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">ObjectAnimationUsingKeyFrames</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;ActiveStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Active&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Inactive&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;DayStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;RegularDay&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Today&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;TodayBackground&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;BlackoutDayStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">VisualTransition</span> <span class="attr">GeneratedDuration</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualStateGroup.Transitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;NormalDay&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;BlackoutDay&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span></span></span></span><br><span class="line">                                                         To=&quot;0&quot;</span><br><span class="line">                                                         Storyboard.TargetProperty=&quot;Opacity&quot;</span><br><span class="line">                                                         Storyboard.TargetName=&quot;HighlightingBorder&quot;/&gt;</span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span></span></span></span><br><span class="line">                                                         To=&quot;0.38&quot;</span><br><span class="line">                                                         Storyboard.TargetProperty=&quot;Opacity&quot; </span><br><span class="line">                                                         Storyboard.TargetName=&quot;NormalText&quot; /&gt;</span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="css">                        &lt;Ellipse x:Name=<span class="string">&quot;TodayBackground&quot;</span></span></span><br><span class="line">                                 Fill=&quot;Transparent&quot;</span><br><span class="line">                                 Opacity=&quot;0&quot; </span><br><span class="line">                                 StrokeThickness=&quot;1&quot;</span><br><span class="line">                                 Stroke=&quot;&#123;TemplateBinding Foreground&#125;&quot;/&gt;</span><br><span class="line"><span class="css">                        &lt;Ellipse x:Name=<span class="string">&quot;SelectedBackground&quot;</span></span></span><br><span class="line">                                 Fill=&quot;&#123;DynamicResource PrimaryHueMidBrush&#125;&quot;</span><br><span class="line">                                 Opacity=&quot;0&quot; /&gt;</span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Border</span> <span class="attr">BorderBrush</span>=<span class="string">&quot;&#123;TemplateBinding BorderBrush&#125;&quot;</span></span></span></span><br><span class="line">                                BorderThickness=&quot;&#123;TemplateBinding BorderThickness&#125;&quot;</span><br><span class="line">                                Background=&quot;&#123;TemplateBinding Background&#125;&quot;/&gt;</span><br><span class="line"><span class="css">                        &lt;<span class="attribute">Border</span> x:Name=<span class="string">&quot;HighlightingBorder&quot;</span></span></span><br><span class="line">                                Opacity=&quot;1&quot;&gt;</span><br><span class="line"><span class="css">                            &lt;Ellipse x:Name=<span class="string">&quot;HighlightBackground&quot;</span></span></span><br><span class="line">                                     Fill=&quot;&#123;DynamicResource PrimaryHueDarkBrush&#125;&quot;</span><br><span class="line">                                     Opacity=&quot;0&quot;/&gt;</span><br><span class="line"><span class="css">                        &lt;/<span class="attribute">Border</span>&gt;</span></span><br><span class="line"><span class="css">                        &lt;ContentPresenter x:Name=<span class="string">&quot;NormalText&quot;</span></span></span><br><span class="line">                                          TextElement.Foreground=&quot;&#123;TemplateBinding Foreground&#125;&quot;</span><br><span class="line">                                          HorizontalAlignment=&quot;&#123;TemplateBinding HorizontalContentAlignment&#125;&quot;</span><br><span class="line">                                          Margin=&quot;5,1,5,1&quot;</span><br><span class="line">                                          VerticalAlignment=&quot;&#123;TemplateBinding VerticalContentAlignment&#125;&quot; /&gt;</span><br><span class="line"><span class="css">                        &lt;Ellipse x:Name=<span class="string">&quot;DayButtonFocusVisual&quot;</span></span></span><br><span class="line">                                 Stroke=&quot;&#123;DynamicResource PrimaryHueDarkBrush&#125;&quot;</span><br><span class="line">                                 Opacity=&quot;0&quot;</span><br><span class="line">                                 Visibility=&quot;Collapsed&quot;</span><br><span class="line">                                 StrokeThickness=&quot;1&quot;/&gt;</span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Style.Triggers</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsInactive&quot;</span></span></span></span><br><span class="line">                     Value=&quot;True&quot;&gt;</span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MinHeight&quot;</span></span></span></span><br><span class="line">                        Value=&quot;0&quot; /&gt;</span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;MaxHeight&quot;</span></span></span></span><br><span class="line">                        Value=&quot;0&quot; /&gt;</span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsBlackedOut&quot;</span></span></span></span><br><span class="line">                     Value=&quot;True&quot;&gt;</span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Cursor&quot;</span></span></span></span><br><span class="line">                        Value=&quot;No&quot; /&gt;</span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Style.Triggers</span>&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:Key</span>=<span class="string">&quot;MaterialDesignPersianCalendarItem&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;primitives:CalendarItem&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;BorderThickness&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Margin&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;0,3,0,3&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Template&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">TargetType</span>=<span class="string">&quot;primitives:CalendarItem&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ControlTemplate.Resources</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">SineEase</span> <span class="attr">x:Key</span>=<span class="string">&quot;EasingFunction&quot;</span> <span class="attr">EasingMode</span>=<span class="string">&quot;EaseOut&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">CubicEase</span> <span class="attr">x:Key</span>=<span class="string">&quot;EasingFunctionIn&quot;</span> <span class="attr">EasingMode</span>=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">DataTemplate</span> <span class="attr">x:Key</span>=<span class="string">&quot;DayTitleTemplate&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Foreground</span>=<span class="string">&quot;&#123;DynamicResource MaterialDesignToolTipBackground&#125;&quot;</span></span></span></span><br><span class="line">                                       Opacity=&quot;0.65&quot;</span><br><span class="line">                                       FontWeight=&quot;Bold&quot;</span><br><span class="line">                                       FontSize=&quot;9.5&quot;                                       </span><br><span class="line">                                       HorizontalAlignment=&quot;Center&quot; VerticalAlignment=&quot;Center&quot;</span><br><span class="line">                                       Margin=&quot;0,6,0,6&quot;</span><br><span class="line">                                       Text=&quot;&#123;Binding [0]&#125;&quot;/&gt;</span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ControlTemplate.Resources</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">x:Name</span>=<span class="string">&quot;PART_Root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Grid.Resources</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;DisabledColor&quot;</span> <span class="attr">Color</span>=<span class="string">&quot;#A5FFFFFF&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">Grid.Resources</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CommonStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Normal&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Disabled&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_DisabledVisual&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">wpf:Card</span> <span class="attr">UniformCornerRadius</span>=<span class="string">&quot;2&quot;</span> <span class="attr">wpf:ShadowAssist.ShadowDepth</span>=<span class="string">&quot;Depth0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;TemplateBinding Background&#125;&quot;</span> <span class="attr">RenderOptions.ClearTypeHint</span>=<span class="string">&quot;Enabled&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">Grid.Resources</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">x:Key</span>=<span class="string">&quot;PreviousButtonTemplate&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;&#123;x:Type Button&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Cursor</span>=<span class="string">&quot;Hand&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CommonStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Normal&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;MouseOver&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Disabled&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                            <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;.56&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;path&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">wpf:Ripple</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">Viewbox</span> <span class="attr">Height</span>=<span class="string">&quot;12&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">x:Name</span>=<span class="string">&quot;path&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;TemplateBinding Foreground&#125;&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;Fill&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">Viewbox</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">wpf:Ripple</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">x:Key</span>=<span class="string">&quot;NextButtonTemplate&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;&#123;x:Type Button&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Cursor</span>=<span class="string">&quot;Hand&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CommonStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Normal&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;MouseOver&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Disabled&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                            <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Duration</span>=<span class="string">&quot;0&quot;</span> <span class="attr">To</span>=<span class="string">&quot;.5&quot;</span> <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;path&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">wpf:Ripple</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">Viewbox</span> <span class="attr">Height</span>=<span class="string">&quot;12&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">Path</span> <span class="attr">x:Name</span>=<span class="string">&quot;path&quot;</span> <span class="attr">Data</span>=<span class="string">&quot;M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;TemplateBinding Foreground&#125;&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;Fill&quot;</span>  /&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">Viewbox</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">wpf:Ripple</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">x:Key</span>=<span class="string">&quot;HeaderButtonTemplate&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;&#123;x:Type Button&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Cursor</span>=<span class="string">&quot;Hand&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">VisualStateGroup</span> <span class="attr">x:Name</span>=<span class="string">&quot;CommonStates&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Normal&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;MouseOver&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;Disabled&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span></span><br><span class="line"><span class="css">                                            &lt;wpf:MaterialDateDisplay x:Name=<span class="string">&quot;buttonContent&quot;</span> Foreground=<span class="string">&quot;&#123;DynamicResource PrimaryHueMidForegroundBrush&#125;&quot;</span></span></span><br><span class="line">                                                                     IsEnabled=&quot;&#123;TemplateBinding IsEnabled&#125;&quot;&gt;</span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;<span class="name">wpf:MaterialDateDisplay.DisplayDate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;<span class="name">MultiBinding</span> <span class="attr">Mode</span>=<span class="string">&quot;OneWay&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;<span class="name">MultiBinding.Converter</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                            <span class="tag">&lt;<span class="name">wpf:CalendarDateCoalesceConverter</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;/<span class="name">MultiBinding.Converter</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">RelativeSource</span>=<span class="string">&quot;&#123;RelativeSource FindAncestor, AncestorType=hc:PersianCalendar&#125;&quot;</span> <span class="attr">Path</span>=<span class="string">&quot;DisplayDate&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                                        <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">RelativeSource</span>=<span class="string">&quot;&#123;RelativeSource FindAncestor, AncestorType=hc:PersianCalendar&#125;&quot;</span> <span class="attr">Path</span>=<span class="string">&quot;SelectedDate&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                                    <span class="tag">&lt;/<span class="name">MultiBinding</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                                <span class="tag">&lt;/<span class="name">wpf:MaterialDateDisplay.DisplayDate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;/<span class="name">wpf:MaterialDateDisplay</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">wpf:CalendarYearMonthConverter</span> <span class="attr">x:Key</span>=<span class="string">&quot;CalendarYearMonthConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">Grid.Resources</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">Border</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource PrimaryHueMidBrush&#125;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="css">                                &lt;<span class="selector-tag">Button</span> x:Name=<span class="string">&quot;PART_HeaderButton&quot;</span></span></span><br><span class="line">                                        Grid.Row=&quot;0&quot;</span><br><span class="line">                                        Grid.Column=&quot;0&quot;</span><br><span class="line">                                        Grid.ColumnSpan=&quot;3&quot;</span><br><span class="line">                                        FontWeight=&quot;Bold&quot;</span><br><span class="line">                                        Focusable=&quot;False&quot;</span><br><span class="line">                                        FontSize=&quot;10.5&quot;</span><br><span class="line">                                        HorizontalAlignment=&quot;Left&quot;</span><br><span class="line">                                        VerticalAlignment=&quot;Center&quot;</span><br><span class="line">                                        Template=&quot;&#123;StaticResource HeaderButtonTemplate&#125;&quot;</span><br><span class="line">                                        Visibility=&quot;&#123;TemplateBinding wpf:CalendarAssist.IsHeaderVisible, Converter=&#123;StaticResource BooleanToVisibilityConverter&#125;&#125;&quot;</span><br><span class="line">                                        Height=&quot;Auto&quot;</span><br><span class="line">                                        Margin=&quot;20 15&quot; /&gt;</span><br><span class="line"><span class="css">                                &lt;TextBlock x:Name=<span class="string">&quot;CurrentDateTextBlock&quot;</span></span></span><br><span class="line">                                           Grid.Row=&quot;1&quot; </span><br><span class="line">                                           Grid.Column=&quot;0&quot;</span><br><span class="line">                                           HorizontalAlignment=&quot;Left&quot; </span><br><span class="line">                                           VerticalAlignment=&quot;Center&quot;</span><br><span class="line">                                           Margin=&quot;13 8 8 8&quot;</span><br><span class="line">                                           FontSize=&quot;14&quot;</span><br><span class="line">                                           FontWeight=&quot;SemiBold&quot;</span><br><span class="line">                                           Opacity=&quot;0.56&quot;</span><br><span class="line">                                           RenderTransformOrigin=&quot;0, 0.5&quot;&gt;</span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">TextBlock.Text</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">MultiBinding</span> <span class="attr">Converter</span>=<span class="string">&quot;&#123;StaticResource CalendarYearMonthConverter&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">RelativeSource</span>=<span class="string">&quot;&#123;RelativeSource FindAncestor, AncestorType=hc:PersianCalendar&#125;&quot;</span> <span class="attr">Path</span>=<span class="string">&quot;DisplayDate&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">Binding</span> <span class="attr">RelativeSource</span>=<span class="string">&quot;&#123;RelativeSource FindAncestor, AncestorType=hc:PersianCalendar&#125;&quot;</span> <span class="attr">Path</span>=<span class="string">&quot;Language&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">MultiBinding</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">TextBlock.Text</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">TextBlock.RenderTransform</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">TranslateTransform</span> <span class="attr">X</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Y</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">TextBlock.RenderTransform</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span></span><br><span class="line"><span class="css">                                &lt;<span class="selector-tag">Button</span> x:Name=<span class="string">&quot;PART_PreviousButton&quot;</span></span></span><br><span class="line">                                        Grid.Row=&quot;1&quot;</span><br><span class="line">                                        Grid.Column=&quot;1&quot; </span><br><span class="line">                                        Focusable=&quot;False&quot; </span><br><span class="line">                                        HorizontalAlignment=&quot;Left&quot; </span><br><span class="line">                                        Height=&quot;36&quot; </span><br><span class="line">                                        Width=&quot;32&quot;</span><br><span class="line">                                        Template=&quot;&#123;StaticResource PreviousButtonTemplate&#125;&quot;</span><br><span class="line">                                        Margin=&quot;3 0&quot;</span><br><span class="line">                                        Opacity=&quot;0.56&quot;</span><br><span class="line">                                        Foreground=&quot;&#123;TemplateBinding Foreground&#125;&quot; /&gt;</span><br><span class="line"><span class="css">                                &lt;<span class="selector-tag">Button</span> x:Name=<span class="string">&quot;PART_NextButton&quot;</span> </span></span><br><span class="line">                                        Grid.Row=&quot;1&quot; </span><br><span class="line">                                        Grid.Column=&quot;2&quot; </span><br><span class="line">                                        Focusable=&quot;False&quot; </span><br><span class="line">                                        HorizontalAlignment=&quot;Right&quot;</span><br><span class="line">                                        Height=&quot;36&quot;</span><br><span class="line">                                        Width=&quot;32&quot;</span><br><span class="line">                                        Template=&quot;&#123;StaticResource NextButtonTemplate&#125;&quot;</span><br><span class="line">                                        Margin=&quot;3 0&quot;</span><br><span class="line">                                        Opacity=&quot;0.56&quot;</span><br><span class="line">                                        Foreground=&quot;&#123;TemplateBinding Foreground&#125;&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="css">                                &lt;Grid x:Name=<span class="string">&quot;MonthViewWrapperGrid&quot;</span></span></span><br><span class="line">                                      Grid.ColumnSpan=&quot;3&quot;</span><br><span class="line">                                      Grid.Row=&quot;2&quot;</span><br><span class="line">                                      HorizontalAlignment=&quot;Center&quot;</span><br><span class="line">                                      VerticalAlignment=&quot;Top&quot;</span><br><span class="line">                                      Margin=&quot;6 -1 6 6&quot;</span><br><span class="line">                                      Visibility=&quot;Visible&quot;&gt;</span><br><span class="line"><span class="css">                                    &lt;<span class="attribute">Border</span> x:Name=<span class="string">&quot;PART_MonthViewCopy&quot;</span> RenderTransformOrigin=<span class="string">&quot;0, 0.5&quot;</span></span></span><br><span class="line">                                            Opacity=&quot;0&quot; Margin=&quot;4 7 4 3&quot;&gt;</span><br><span class="line"><span class="css">                                        &lt;<span class="attribute">Border</span><span class="selector-class">.Background</span>&gt;</span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">VisualBrush</span> <span class="attr">Visual</span>=<span class="string">&quot;&#123;Binding ElementName=PART_MonthView&#125;&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;UniformToFill&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="css">                                        &lt;/<span class="attribute">Border</span><span class="selector-class">.Background</span>&gt;</span></span><br><span class="line"><span class="css">                                        &lt;<span class="attribute">Border</span><span class="selector-class">.RenderTransform</span>&gt;</span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">TranslateTransform</span> <span class="attr">X</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="css">                                        &lt;/<span class="attribute">Border</span><span class="selector-class">.RenderTransform</span>&gt;</span></span><br><span class="line"><span class="css">                                    &lt;/<span class="attribute">Border</span>&gt;</span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">x:Name</span>=<span class="string">&quot;PART_MonthView&quot;</span> <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0, 0.5&quot;</span> <span class="attr">IsSharedSizeScope</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid.RenderTransform</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">TranslateTransform</span> <span class="attr">X</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid.RenderTransform</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">SharedSizeGroup</span>=<span class="string">&quot;WeekRow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">SharedSizeGroup</span>=<span class="string">&quot;WeekRow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">SharedSizeGroup</span>=<span class="string">&quot;WeekRow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">SharedSizeGroup</span>=<span class="string">&quot;WeekRow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">SharedSizeGroup</span>=<span class="string">&quot;WeekRow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">SharedSizeGroup</span>=<span class="string">&quot;WeekRow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">SharedSizeGroup</span>=<span class="string">&quot;WeekRow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">                                &lt;Grid x:Name=<span class="string">&quot;YearViewWrapperGrid&quot;</span></span></span><br><span class="line">                                      Grid.ColumnSpan=&quot;3&quot;</span><br><span class="line">                                      Grid.Row=&quot;2&quot;</span><br><span class="line">                                      HorizontalAlignment=&quot;Center&quot;</span><br><span class="line">                                      VerticalAlignment=&quot;Top&quot;</span><br><span class="line">                                      Margin=&quot;6 -3 7 6&quot;</span><br><span class="line">                                      Visibility=&quot;Hidden&quot;&gt;</span><br><span class="line"><span class="css">                                    &lt;<span class="attribute">Border</span> x:Name=<span class="string">&quot;PART_YearViewCopy&quot;</span> RenderTransformOrigin=<span class="string">&quot;0, 0.5&quot;</span></span></span><br><span class="line">                                            Opacity=&quot;0&quot; Margin=&quot;2&quot;&gt;</span><br><span class="line"><span class="css">                                        &lt;<span class="attribute">Border</span><span class="selector-class">.Background</span>&gt;</span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">VisualBrush</span> <span class="attr">Visual</span>=<span class="string">&quot;&#123;Binding ElementName=PART_YearView&#125;&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;UniformToFill&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="css">                                        &lt;/<span class="attribute">Border</span><span class="selector-class">.Background</span>&gt;</span></span><br><span class="line"><span class="css">                                        &lt;<span class="attribute">Border</span><span class="selector-class">.RenderTransform</span>&gt;</span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">TranslateTransform</span> <span class="attr">X</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="css">                                        &lt;/<span class="attribute">Border</span><span class="selector-class">.RenderTransform</span>&gt;</span></span><br><span class="line"><span class="css">                                    &lt;/<span class="attribute">Border</span>&gt;</span></span><br><span class="line"><span class="css">                                    &lt;Grid x:Name=<span class="string">&quot;PART_YearView&quot;</span></span></span><br><span class="line">                                                 RenderTransformOrigin=&quot;0, 0.5&quot;&gt;</span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid.RenderTransform</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">TranslateTransform</span> <span class="attr">X</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid.RenderTransform</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                                        <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">wpf:Card</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Rectangle</span> <span class="attr">x:Name</span>=<span class="string">&quot;PART_DisabledVisual&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;&#123;StaticResource DisabledColor&#125;&quot;</span> <span class="attr">Opacity</span>=<span class="string">&quot;0&quot;</span> <span class="attr">RadiusY</span>=<span class="string">&quot;2&quot;</span> <span class="attr">RadiusX</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Stretch</span>=<span class="string">&quot;Fill&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;&#123;StaticResource DisabledColor&#125;&quot;</span> <span class="attr">StrokeThickness</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Visibility</span>=<span class="string">&quot;Collapsed&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ControlTemplate.Triggers</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">Trigger</span> <span class="attr">Property</span>=<span class="string">&quot;IsEnabled&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;False&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">TargetName</span>=<span class="string">&quot;PART_DisabledVisual&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Visible&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">Trigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">DataTrigger</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding DisplayMode, RelativeSource=&#123;RelativeSource FindAncestor, AncestorType=hc:PersianCalendar&#125;&#125;&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Year&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">TargetName</span>=<span class="string">&quot;MonthViewWrapperGrid&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Hidden&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">TargetName</span>=<span class="string">&quot;YearViewWrapperGrid&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Visible&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">DataTrigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">DataTrigger</span> <span class="attr">Binding</span>=<span class="string">&quot;&#123;Binding DisplayMode, RelativeSource=&#123;RelativeSource FindAncestor, AncestorType=hc:PersianCalendar&#125;&#125;&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Decade&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">TargetName</span>=<span class="string">&quot;MonthViewWrapperGrid&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Hidden&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Visibility&quot;</span> <span class="attr">TargetName</span>=<span class="string">&quot;YearViewWrapperGrid&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Visible&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">DataTrigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">EventTrigger</span> <span class="attr">RoutedEvent</span>=<span class="string">&quot;Button.Click&quot;</span> <span class="attr">SourceName</span>=<span class="string">&quot;PART_NextButton&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">BeginStoryboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;CurrentDateTextBlock&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     EasingFunction=&quot;&#123;StaticResource EasingFunction&#125;&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.1&quot; DecelerationRatio=&quot;0.89&quot;</span><br><span class="line">                                                     From=&quot;240&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_MonthViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.Opacity)&quot;</span><br><span class="line">                                                     From=&quot;1&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_MonthViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;0&quot; To=&quot;-270&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_MonthView&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;270&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_YearViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.Opacity)&quot;</span><br><span class="line">                                                     From=&quot;1&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_YearViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;0&quot; To=&quot;-240&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_YearView&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;240&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">BeginStoryboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">EventTrigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">EventTrigger</span> <span class="attr">RoutedEvent</span>=<span class="string">&quot;Button.Click&quot;</span> <span class="attr">SourceName</span>=<span class="string">&quot;PART_PreviousButton&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">BeginStoryboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                <span class="tag">&lt;<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;CurrentDateTextBlock&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     EasingFunction=&quot;&#123;StaticResource EasingFunction&#125;&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.1&quot; DecelerationRatio=&quot;0.89&quot;</span><br><span class="line">                                                     From=&quot;-240&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_MonthViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.Opacity)&quot;</span><br><span class="line">                                                     From=&quot;1&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_MonthViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;0&quot; To=&quot;270&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_MonthView&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;-270&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_YearViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.Opacity)&quot;</span><br><span class="line">                                                     From=&quot;1&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_YearViewCopy&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;0&quot; To=&quot;240&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml">                                    <span class="tag">&lt;<span class="name">DoubleAnimation</span> <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;PART_YearView&quot;</span></span></span></span><br><span class="line">                                                     Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TranslateTransform.X)&quot;</span><br><span class="line">                                                     From=&quot;-240&quot; To=&quot;0&quot; Duration=&quot;0:0:0.450&quot;</span><br><span class="line">                                                     AccelerationRatio=&quot;0.3&quot; DecelerationRatio=&quot;0.69&quot;/&gt;</span><br><span class="line"><span class="xml">                                <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;/<span class="name">BeginStoryboard</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">EventTrigger</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ControlTemplate.Triggers</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Style</span> <span class="attr">x:Key</span>=<span class="string">&quot;MaterialDesignPersianCalendar&quot;</span> <span class="attr">TargetType</span>=<span class="string">&quot;hc:PersianCalendar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Language&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;fa&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Foreground&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;DynamicResource MaterialDesignBody&#125;&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Background&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;DynamicResource MaterialDesignPaper&#125;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;CalendarDayButtonStyle&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;StaticResource MaterialDesignPersianCalendarDayButton&#125;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;CalendarButtonStyle&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;&#123;StaticResource MaterialDesignPersianCalendarButton&#125;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Property</span>=<span class="string">&quot;Template&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ControlTemplate</span> <span class="attr">TargetType</span>=<span class="string">&quot;hc:PersianCalendar&quot;</span>&gt;</span></span></span><br><span class="line">                    &lt;primitives:CalendarItem</span><br><span class="line"><span class="css">                        x:Name=<span class="string">&quot;PART_CalendarItem&quot;</span></span></span><br><span class="line">                        Style=&quot;&#123;DynamicResource MaterialDesignPersianCalendarItem&#125;&quot;</span><br><span class="line">                        BorderBrush=&quot;&#123;TemplateBinding BorderBrush&#125;&quot;</span><br><span class="line">                        BorderThickness=&quot;&#123;TemplateBinding BorderThickness&#125;&quot;</span><br><span class="line">                        Background=&quot;&#123;TemplateBinding Background&#125;&quot;</span><br><span class="line"><span class="css">                        wpf:CalendarAssist.IsHeaderVisible=<span class="string">&quot;&#123;TemplateBinding wpf:CalendarAssist.IsHeaderVisible&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ControlTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">Setter.Value</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Setter</span>&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>Now you can use it</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hc:PersianCalendar</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource MaterialDesignPersianCalendar&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/9213496/120096036-7d583d00-c13e-11eb-8094-2227728aad31.png" alt="MaterialDesignPersianCalendar"></p>
]]></content>
  </entry>
</search>
